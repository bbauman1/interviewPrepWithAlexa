[
    {
        "accepted": 106145, 
        "companies": "Amazon", 
        "description": "Design and implement a data structure for Least Recently Used (LRU) cache. It should support the following operations: get and set. get () with an input parameter of key - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1. set() function with parameters key and value, Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.", 
        "example": "get with parameter one should return -1 since it is empty. Set with key equals 3 and value 5 then get 3 should return 5",
        "difficulty": "Hard", 
        "hints": [
            "Design"
        ], 
        "name": "LRU Cache", 
        "id": 146, 
        "similar_problems": [
            "(H) LFU Cache"
        ], 
        "total": 663908
    },  
    {
        "accepted": 82735, 
        "companies": "Amazon", 
        "description": "Given a 2d grid map of '1's (land) and '0's (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.", 
        "difficulty": "Medium", 
        "hints": [
            "Depth-first Search", 
            "Breadth-first Search", 
            "Union Find"
        ], 
        "name": "Number of Islands",
        "id": 200,  
        "similar_problems": [
            "(M) Surrounded Regions", 
            " (M) Walls and Gates", 
            " (H) Number of Islands II", 
            " (M) Number of Connected Components in an Undirected Graph"
        ], 
        "total": 256028
    }, 
    {
        "accepted": 14133, 
        "companies": "Amazon", 
        "description": "Given a string s and a non-empty string p, find all the start indices of p's anagrams in s. Strings consists of lowercase English letters only and the length of both strings s and p will not be larger than 20,100. The order of output does not matter.", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table"
        ], 
        "name": "Find All Anagrams in a String", 
        "id": 438, 
        "similar_problems": [
            "(E) Valid Anagram"
        ], 
        "total": 42399
    }, 
    {
        "accepted": 79091, 
        "companies": "Amazon", 
        "description": "Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree. According to the definition of LCA on Wikipedia: The lowest common ancestor is defined between two nodes v and w as the lowest node in T that has both v and w as descendants (where we allow a node to be a descendant of itself).", 
        "difficulty": "Medium", 
        "hints": [
            "Tree"
        ], 
        "name": "Lowest Common Ancestor of a Binary Tree", 
        "id": 236, 
        "similar_problems": [
            "(E) Lowest Common Ancestor of a Binary Search Tree"
        ], 
        "total": 269828
    }, 
    {
        "accepted": 92215, 
        "companies": "Amazon", 
        "description": "A linked list is given such that each node contains an additional random pointer which could point to any node in the list or null.\r\n\r\n\r\n\r\nReturn a deep copy of the list.", 
        "difficulty": "Hard", 
        "hints": [
            "Hash Table", 
            "Linked List"
        ], 
        "name": "Copy List with Random Pointer",
        "id": 138,  
        "similar_problems": [
            "(M) Clone Graph"
        ], 
        "total": 346268
    }, 
    {
        "accepted": 161724,
        "companies": "Amazon",
        "description": "Given a string containing just the parentheses, brackets, and curly brace characters, determine if the input string is valid. The brackets must close in the correct order",
        "example": "given open-parentheses, close-parenthses, return true. Given open-parentheses, close-parenthses, close-parenthses return false", 
        "difficulty": "Easy", 
        "hints": [
            "Stack", 
            "String"
        ], 
        "name": "Valid Parentheses", 
        "id": 20,
        "similar_problems": [
            "(M) Generate Parentheses", 
            " (H) Longest Valid Parentheses", 
            " (H) Remove Invalid Parentheses"
        ], 
        "total": 503241
    }, 
    {
        "accepted": 16645, 
        "companies": "Amazon", 
        "description": "Design a data structure that supports all following operations in average O(1) time.\r\n\r\n\r\n\r\ninsert(val): Inserts an item val to the set if not already present.\r\nremove(val): Removes an item val from the set if present.\r\ngetRandom: Returns a random element from current set of elements. Each element must have the same probability of being returned.\r\n\r\n\r\n\r\nExample:\r\n\r\n// Init an empty set.\r\nRandomizedSet randomSet = new RandomizedSet();\r\n\r\n// Inserts 1 to the set. Returns true as 1 was inserted successfully.\r\nrandomSet.insert(1);\r\n\r\n// Returns false as 2 does not exist in the set.\r\nrandomSet.remove(2);\r\n\r\n// Inserts 2 to the set, returns true. Set now contains [1,2].\r\nrandomSet.insert(2);\r\n\r\n// getRandom should return either 1 or 2 randomly.\r\nrandomSet.getRandom();\r\n\r\n// Removes 1 from the set, returns true. Set now contains [2].\r\nrandomSet.remove(1);\r\n\r\n// 2 was already in the set, so return false.\r\nrandomSet.insert(2);\r\n\r\n// Since 2 is the only number in the set, getRandom always return 2.\r\nrandomSet.getRandom();", 
        "difficulty": "Hard", 
        "hints": [
            "Array", 
            "Hash Table", 
            "Design"
        ], 
        "name": "Insert Delete GetRandom O(1)",
        "id": 380,
        "similar_problems": [
            "(H) Insert Delete GetRandom O(1) - Duplicates allowed"
        ], 
        "total": 43309
    }, 
    {
        "accepted": 78285, 
        "companies": "Amazon", 
        "description": "Given an array of n integers where n > 1, nums, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i]. Solve it without division and in O(n).",
        "example": "For example, given [1,2,3,4], return [24,12,8,6]. Follow up: Could you solve it with constant space complexity? (Note: The output array does not count as extra space for the purpose of space complexity analysis.)", 
        "difficulty": "Medium", 
        "hints": [
            "Array"
        ], 
        "name": "Product of Array Except Self",
        "id": 238,
        "similar_problems": [
            "(H) Trapping Rain Water", 
            " (M) Maximum Product Subarray", 
            " (H) Paint House II"
        ], 
        "total": 166264
    }, 
    {
        "accepted": 164444, 
        "companies": "Amazon", 
        "description": "Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.",
        "example" : "Example: Input: b a b a d Output: b a b Note: a b a is also a valid answer. Example: Input: c b b d Output: b b",
        "difficulty": "Medium", 
        "hints": [
            "String"
        ], 
        "name": "Longest Palindromic Substring",
        "id": 5,
        "similar_problems": [
            "(H) Shortest Palindrome", 
            " (E) Palindrome Permutation", 
            " (H) Palindrome Pairs"
        ], 
        "total": 669434
    }, 
    {
        "accepted": 62251, 
        "companies": "Amazon", 
        "description": "Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties: Integers in each row are sorted in ascending from left to right. Integers in each column are sorted in ascending from top to bottom.",
        "example": "For example, Consider the following matrix: [1,   4,  7, 11, 15],  [2,   5,  8, 12, 19],  [3,   6,  9, 16, 22],  [10, 13, 14, 17, 24],  [18, 21, 23, 26, 30] ] Given target = 5, return true. Given target = 20, return false.", 
        "difficulty": "Medium", 
        "hints": [
            "Binary Search", 
            "Divide and Conquer"
        ], 
        "name": "Search a 2D Matrix II", 
        "id": 240, 
        "similar_problems": [
            "(M) Search a 2D Matrix"
        ], 
        "total": 164062
    }, 
    {
        "accepted": 180214, 
        "companies": "Amazon", 
        "description": "Reverse a singly linked list. Hint: A linked list can be reversed either iteratively or recursively. Could you implement both?", 
        "difficulty": "Easy", 
        "hints": [
            "Linked List"
        ], 
        "name": "Reverse Linked List",
        "id": 206, 
        "similar_problems": [
            "(M) Reverse Linked List II", 
            " (M) Binary Tree Upside Down", 
            " (E) Palindrome Linked List"
        ], 
        "total": 414172
    }, 
    {
        "accepted": 113946, 
        "companies": "Amazon", 
        "description": "Given a binary search tree (BST), find the lowest common ancestor (LCA) of two given nodes in the BST. According to the definition of LCA on Wikipedia: The lowest common ancestor is defined between two nodes v and w as the lowest node in T that has both v and w as descendants (where we allow a node to be a descendant of itself).", 
        "difficulty": "Easy", 
        "hints": [
            "Tree"
        ], 
        "name": "Lowest Common Ancestor of a Binary Search Tree", 
        "id": 235, 
        "similar_problems": [
            "(M) Lowest Common Ancestor of a Binary Tree"
        ], 
        "total": 299109
    }, 
    {
        "accepted": 95753, 
        "companies": "Amazon", 
        "description": "Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining. \r\n\r\n\r\n\r\nFor example, \r\nGiven [0,1,0,2,1,0,1,3,2,1,2,1], return 6.\r\n\r\n\r\n\r\n\r\nThe above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped. Thanks Marcos for contributing this image!", 
        "difficulty": "Hard", 
        "hints": [
            "Array", 
            "Stack", 
            "Two Pointers"
        ], 
        "name": "Trapping Rain Water", 
        "id": 42, 
        "similar_problems": [
            "(M) Container With Most Water", 
            " (M) Product of Array Except Self", 
            " (H) Trapping Rain Water II"
        ], 
        "total": 271169
    }, 
    {
        "accepted": 107442, 
        "companies": "Amazon", 
        "description": "Design a stack that supports push, pop, top, and retrieving the minimum element in constant time. push x -- Push element x onto stack. pop() -- Removes the element on top of the stack. top() -- Get the top element. getMin() -- Retrieve the minimum element in the stack. Example: MinStack minStack = new MinStack(); minStack.push(-2); minStack.push 0; minStack.push -3; minStack.getMin ;   --> Returns -3. minStack.pop(); minStack.top(); Returns 0. minStack.getMin(); Returns -2.", 
        "difficulty": "Easy", 
        "hints": [
            "Stack", 
            "Design"
        ], 
        "name": "Min Stack",
        "id": 155,  
        "similar_problems": [
            "(H) Sliding Window Maximum"
        ], 
        "total": 408383
    }, 
    {
        "accepted": 4435, 
        "companies": "Amazon", 
        "description": "Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment. \r\n\r\nDesign an algorithm to serialize and deserialize a binary search tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary search tree can be serialized to a string and this string can be deserialized to the original tree structure.\r\n\r\n\r\nThe encoded string should be as compact as possible.\r\n\r\n\r\n\r\nNote: Do not use class member/global/static variables to store states. Your serialize and deserialize algorithms should be stateless.", 
        "difficulty": "Medium", 
        "hints": [
            "Tree"
        ], 
        "name": "Serialize and Deserialize BST", 
        "id": 449, 
        "similar_problems": [
            "(H) Serialize and Deserialize Binary Tree"
        ], 
        "total": 10436
    }, 
    {
        "accepted": 151837, 
        "companies": "Amazon", 
        "description": "Given a linked list, determine if it has a cycle in it.",
        "example": "An example is if the fifth node points back to the second node in the list", 
        "difficulty": "Easy", 
        "hints": [
            "Linked List", 
            "Two Pointers"
        ], 
        "name": "Linked List Cycle", 
        "id": 141, 
        "similar_problems": [
            "(M) Linked List Cycle II"
        ], 
        "total": 423905
    }, 
    {
        "accepted": 131025, 
        "companies": "Amazon", 
        "description": "Given two strings s and t, write a function to determine if t is an anagram of s.",
        "example": "For example,s = anagram, t = nagaram, return true. s = rat, t = car, return false. Note: You may assume the string contains only lowercase alphabets.", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table", 
            "Sort"
        ], 
        "name": "Valid Anagram", 
        "id": 242, 
        "similar_problems": [
            "(M) Group Anagrams", 
            " (E) Palindrome Permutation", 
            " (E) Find All Anagrams in a String"
        ], 
        "total": 291951
    }, 
    {
        "accepted": 102660, 
        "companies": "Amazon", 
        "description": "Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.For example.",
        "example": "Given [3,2,1,5,6,4] and k = 2, return 5. Note: You may assume k is always valid.", 
        "difficulty": "Medium", 
        "hints": [
            "Heap", 
            "Divide and Conquer"
        ], 
        "name": "Kth Largest Element in an Array", 
        "id": 215, 
        "similar_problems": [
            "(M) Wiggle Sort II", 
            " (M) Top K Frequent Elements", 
            " (E) Third Maximum Number"
        ], 
        "total": 273878
    }, 
    {
        "accepted": 107795, 
        "companies": "Amazon", 
        "description": "Write a program to find the node at which the intersection of two singly linked lists begins.", 
        "difficulty": "Easy", 
        "hints": [
            "Linked List"
        ], 
        "name": "Intersection of Two Linked Lists", 
        "id": 160, 
        "similar_problems": [], 
        "total": 358879
    }, 
    {
        "accepted": 231270, 
        "companies": "Amazon", 
        "description": "You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.\r\n\r\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\r\n\r\n\r\nInput: (2 -> 4 -> 3) + (5 -> 6 -> 4)\r\nOutput: 7 -> 0 -> 8", 
        "difficulty": "Medium", 
        "hints": [
            "Linked List", 
            "Math"
        ], 
        "name": "Add Two Numbers",
        "id": 2,  
        "similar_problems": [
            "(M) Multiply Strings", 
            " (E) Add Binary", 
            " (E) Sum of Two Integers", 
            " (E) Add Strings", 
            " (M) Add Two Numbers II"
        ], 
        "total": 879808
    }, 
    {
        "accepted": 123288, 
        "companies": "Amazon", 
        "description": "Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, determine if s can be segmented into a space-separated sequence of one or more dictionary words. You may assume the dictionary does not contain duplicate words.\r\n\r\n\r\nFor example, given\r\ns = \"leetcode\",\r\ndict = [\"leet\", \"code\"].\r\n\r\n\r\n\r\nReturn true because \"leetcode\" can be segmented as \"leet code\".\r\n\r\n\r\n\r\nUPDATE (2017/1/4):\r\nThe wordDict parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Word Break",
        "id": 139,  
        "similar_problems": [
            "(H) Word Break II"
        ], 
        "total": 436376
    }, 
    {
        "accepted": 110609, 
        "companies": "Amazon", 
        "description": "Given an array of strings, group anagrams together.\r\n\r\n\r\nFor example, given: [\"eat\", \"tea\", \"tan\", \"ate\", \"nat\", \"bat\"], \r\nReturn:\r\n\r\n[\r\n  [\"ate\", \"eat\",\"tea\"],\r\n  [\"nat\",\"tan\"],\r\n  [\"bat\"]\r\n]\r\n\r\nNote: All inputs will be in lower-case.", 
        "difficulty": "Medium", 
        "hints": [
            "Hash Table", 
            "String"
        ], 
        "name": "Group Anagrams",
        "id": 49,  
        "similar_problems": [
            "(E) Valid Anagram", 
            " (E) Group Shifted Strings"
        ], 
        "total": 346915
    }, 
    {
        "accepted": 82620, 
        "companies": "Amazon", 
        "description": "Given a singly linked list, determine if it is a palindrome.", 
        "difficulty": "Easy", 
        "hints": [
            "Linked List", 
            "Two Pointers"
        ], 
        "name": "Palindrome Linked List",
        "id": 234,  
        "similar_problems": [
            "(E) Palindrome Number", 
            " (E) Valid Palindrome", 
            " (E) Reverse Linked List"
        ], 
        "total": 261222
    }, 
    {
        "accepted": 134741, 
        "companies": "Amazon", 
        "description": "Given a binary tree, determine if it is a valid binary search tree (BST).", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "Validate Binary Search Tree", 
        "id": 98, 
        "similar_problems": [
            "(M) Binary Tree Inorder Traversal"
        ], 
        "total": 602891
    }, 
    {
        "accepted": 46305, 
        "companies": "Amazon", 
        "description": "Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Two Pointers", 
            "Binary Search"
        ], 
        "name": "Two Sum II - Input array is sorted", 
        "id": 167, 
        "similar_problems": [
            "(E) Two Sum"
        ], 
        "total": 96007
    }, 
    {
        "accepted": 235396, 
        "companies": "Amazon", 
        "description": "Given a string, find the length of the longest substring without repeating characters.", 
        "difficulty": "Medium", 
        "hints": [
            "Hash Table", 
            "Two Pointers", 
            "String"
        ], 
        "name": "Longest Substring Without Repeating Characters", 
        "id": 3, 
        "similar_problems": [
            "(H) Longest Substring with At Most Two Distinct Characters"
        ], 
        "total": 993446
    }, 
    {
        "accepted": 124554, 
        "companies": "Amazon", 
        "description": "Merge k sorted linked lists and return it as one sorted list.", 
        "difficulty": "Hard", 
        "hints": [
            "Divide and Conquer", 
            "Linked List", 
            "Heap"
        ], 
        "name": "Merge k Sorted Lists",
        "id": 23,  
        "similar_problems": [
            "(E) Merge Two Sorted Lists", 
            " (M) Ugly Number II"
        ], 
        "total": 480093
    }, 
    {
        "accepted": 184141, 
        "companies": "Amazon", 
        "description": "Merge two sorted linked lists and return it as a new list.",
        "example": "The new list should be made by splicing together the nodes of the first two lists.",
        "difficulty": "Easy", 
        "hints": [
            "Linked List"
        ], 
        "name": "Merge Two Sorted Lists",
        "id": 21,  
        "similar_problems": [
            "(H) Merge k Sorted Lists", 
            " (E) Merge Sorted Array", 
            " (M) Sort List", 
            " (M) Shortest Word Distance II"
        ], 
        "total": 485127
    }, 
    {
        "accepted": 174898, 
        "companies": "Amazon", 
        "description": "Given an array S of n integers, there are elements a, b, c in S such that a plus b plus c equals 0? Find all unique triplets in the array which gives the sum of zero.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Two Pointers"
        ], 
        "name": "3Sum", 
        "id": 15, 
        "similar_problems": [
            "(E) Two Sum", 
            " (M) 3Sum Closest", 
            " (M) 4Sum", 
            " (M) 3Sum Smaller"
        ], 
        "total": 836531
    }, 
    {
        "accepted": 136082, 
        "companies": "Amazon", 
        "description": "Given a set of distinct integers, return all possible subsets. Note, the solution set must not contain duplicate subsets.",
        "example": "For example, If nums equals 1,2,3 then a solution is: 1,2,3, 1 2 3, 1 2, 1 3, 2 3, and empty set.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Backtracking", 
            "Bit Manipulation"
        ], 
        "name": "Subsets", 
        "id": 78, 
        "similar_problems": [
            "(M) Generalized Abbreviation"
        ], 
        "total": 370554
    }, 
    {
        "accepted": 146977, 
        "companies": "Amazon", 
        "description": "Given a binary tree, return the level order traversal of its nodes' values.",
        "example": "from left to right, level by level.",
        "difficulty": "Easy", 
        "hints": [
            "Tree", 
            "Breadth-first Search"
        ], 
        "name": "Binary Tree Level Order Traversal", 
        "id": 102, 
        "similar_problems": [
            "(M) Binary Tree Zigzag Level Order Traversal", 
            " (E) Binary Tree Level Order Traversal II", 
            " (E) Minimum Depth of Binary Tree", 
            " (M) Binary Tree Vertical Order Traversal"
        ], 
        "total": 396801
    },  
    {
        "accepted": 96357, 
        "companies": "Amazon", 
        "description": "Count the number of primes from 1 to less than, or equal to n.",
        "example": "If n equals 24. Return 2, 3, 5, 7, 11, 13, 17, 23", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table", 
            "Math"
        ], 
        "name": "Count Primes", 
        "id": 204, 
        "similar_problems": [
            "(E) Ugly Number", 
            " (M) Ugly Number II", 
            " (M) Perfect Squares"
        ], 
        "total": 368557
    }, 
    {
        "accepted": 17144, 
        "companies": "Amazon", 
        "description": "Given a non-empty array of integers, return the third maximum number in this array. If it does not exist, return the maximum number.",
        "example" :"Example given array, 1, 4, 80, 2, 9 you should return 4. This should run in big o, n",
        "difficulty": "Easy", 
        "hints": [
            "Array"
        ], 
        "name": "Third Maximum Number", 
        "id": 414, 
        "similar_problems": [
            "(M) Kth Largest Element in an Array"
        ], 
        "total": 64061
    }, 
    {
        "accepted": 13738, 
        "companies": "Amazon", 
        "description": "Given a string, sort it in decreasing order based on the frequency of characters.",
        "example": "Given string, b, b, q, b, e, q, you should return, b, b, b, q, q, e.", 
        "difficulty": "Medium", 
        "hints": [
            "Hash Table", 
            "Heap"
        ], 
        "name": "Sort Characters By Frequency", 
        "id": 451, 
        "similar_problems": [
            "(M) Top K Frequent Elements"
        ], 
        "total": 27056
    }, 
    {
        "accepted": 14298, 
        "companies": "Amazon", 
        "description": "Given a non-empty string check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.", 
        "example": "Given input a, b, a, the output should be false",
        "difficulty": "Easy", 
        "hints": [
            "String"
        ], 
        "name": "Repeated Substring Pattern", 
        "id": 459,
        "similar_problems": [
            "(E) Implement strStr()"
        ], 
        "total": 36144
    }
]