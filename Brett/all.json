[
    {
        "accepted": 16113, 
        "companies": "Amazon", 
        "description": "The Hamming distance between two integers is the number of positions at which the corresponding bits are different.\r\n\r\nGiven two integers x and y, calculate the Hamming distance.\r\n\r\nNote:\r\n0 &le; x, y &lt; 231.\r\n\r\n\r\nExample:\r\n\r\nInput: x = 1, y = 4\r\n\r\nOutput: 2\r\n\r\nExplanation:\r\n1   (0 0 0 1)\r\n4   (0 1 0 0)\r\n       \u2191   \u2191\r\n\r\nThe above arrows point to positions where the corresponding bits are different.", 
        "difficulty": "Easy", 
        "hints": [
            "Bit Manipulation"
        ], 
        "name": "Hamming Distance", 
        "number": 461, 
        "similar_problems": [
            "(E) Number of 1 Bits", 
            " (M) Total Hamming Distance"
        ], 
        "total": 22290
    }, 
    {
        "accepted": 4088, 
        "companies": "Amazon", 
        "description": "Given a positive integer, output its complement number. The complement strategy is to flip the bits of its binary representation.\r\n\r\nNote:\r\n\r\nThe given integer is guaranteed to fit within the range of a 32-bit signed integer.\r\nYou could assume no leading zero bit in the integer\u2019s binary representation.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: 5\r\nOutput: 2\r\nExplanation: The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: 1\r\nOutput: 0\r\nExplanation: The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to output 0.", 
        "difficulty": "Easy", 
        "hints": [
            "Bit Manipulation"
        ], 
        "name": "Number Complement", 
        "number": 476, 
        "similar_problems": [], 
        "total": 6957
    }, 
    {
        "accepted": 122483, 
        "companies": "Amazon", 
        "description": "Write a function that takes a string as input and returns the string reversed.\r\n\r\n\r\nExample:\r\nGiven s = \"hello\", return \"olleh\".", 
        "difficulty": "Easy", 
        "hints": [
            "Two Pointers", 
            "String"
        ], 
        "name": "Reverse String", 
        "number": 344, 
        "similar_problems": [
            "(E) Reverse Vowels of a String"
        ], 
        "total": 212588
    }, 
    {
        "accepted": 18369, 
        "companies": "Amazon", 
        "description": "You are given a map in form of a two-dimensional integer grid where 1 represents land and 0 represents water. Grid cells are connected horizontally/vertically (not diagonally). The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells). The island doesn't have \"lakes\" (water inside that isn't connected to the water around the island). One cell is a square with side length 1. The grid is rectangular, width and height don't exceed 100. Determine the perimeter of the island.\r\n\r\nExample:\r\n\r\n[[0,1,0,0],\r\n [1,1,1,0],\r\n [0,1,0,0],\r\n [1,1,0,0]]\r\n\r\nAnswer: 16\r\nExplanation: The perimeter is the 16 yellow stripes in the image below:", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table"
        ], 
        "name": "Island Perimeter", 
        "number": 463, 
        "similar_problems": [], 
        "total": 32509
    }, 
    {
        "accepted": 19105, 
        "companies": "Amazon", 
        "description": "Given an array of integers where 1 \u2264 a[i] \u2264 n (n = size of array), some elements appear twice and others appear once.\r\n\r\nFind all the elements of [1, n] inclusive that do not appear in this array.\r\n\r\nCould you do it without extra space and in O(n) runtime? You may assume the returned list does not count as extra space.\r\n\r\nExample:\r\n\r\nInput:\r\n[4,3,2,7,8,2,3,1]\r\n\r\nOutput:\r\n[5,6]", 
        "difficulty": "Easy", 
        "hints": [
            "Array"
        ], 
        "name": "Find All Numbers Disappeared in an Array", 
        "number": 448, 
        "similar_problems": [
            "(H) First Missing Positive", 
            " (M) Find All Duplicates in an Array"
        ], 
        "total": 34469
    }, 
    {
        "accepted": 117014, 
        "companies": "Amazon", 
        "description": "You are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones.\r\n\r\n\r\n\r\nBoth of you are very clever and have optimal strategies for the game. Write a function to determine whether you can win the game given the number of stones in the heap.\r\n\r\n\r\n\r\nFor example, if there are 4 stones in the heap, then you will never win the game: no matter 1, 2, or 3 stones you remove, the last stone will always be removed by your friend.\r\n\r\n\r\n\r\n  If there are 5 stones in the heap, could you figure out a way to remove the stones such that you will always be the winner? \r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Brainteaser"
        ], 
        "name": "Nim Game", 
        "number": 292, 
        "similar_problems": [
            "(M) Flip Game II"
        ], 
        "total": 214029
    }, 
    {
        "accepted": 185562, 
        "companies": "Amazon", 
        "description": "Given an array of integers, every element appears twice except for one. Find that single one.\r\n\r\n\r\nNote:\r\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table", 
            "Bit Manipulation"
        ], 
        "name": "Single Number", 
        "number": 136, 
        "similar_problems": [
            "(M) Single Number II", 
            " (M) Single Number III", 
            " (M) Missing Number", 
            " (H) Find the Duplicate Number", 
            " (E) Find the Difference"
        ], 
        "total": 351420
    }, 
    {
        "accepted": 52751, 
        "companies": "Amazon", 
        "description": "Calculate the sum of two integers a and b, but you are not allowed to use the operator + and -.\r\n\r\nExample:\r\nGiven a = 1 and b = 2, return 3.\r\n\r\n\r\nCredits:Special thanks to @fujiaozhu for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Bit Manipulation"
        ], 
        "name": "Sum of Two Integers", 
        "number": 371, 
        "similar_problems": [
            "(M) Add Two Numbers"
        ], 
        "total": 102734
    }, 
    {
        "accepted": 205561, 
        "companies": "Amazon", 
        "description": "Given a binary tree, find its maximum depth.\r\n\r\nThe maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.", 
        "difficulty": "Easy", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "Maximum Depth of Binary Tree", 
        "number": 104, 
        "similar_problems": [
            "(E) Balanced Binary Tree", 
            " (E) Minimum Depth of Binary Tree"
        ], 
        "total": 404333
    }, 
    {
        "accepted": 46928, 
        "companies": "Amazon", 
        "description": "Given two strings s and t which consist of only lowercase letters.\r\n\r\nString t is generated by random shuffling string s and then add one more letter at a random position.\r\n\r\nFind the letter that was added in t.\r\n\r\nExample:\r\n\r\nInput:\r\ns = \"abcd\"\r\nt = \"abcde\"\r\n\r\nOutput:\r\ne\r\n\r\nExplanation:\r\n'e' is the letter that was added.", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table", 
            "Bit Manipulation"
        ], 
        "name": "Find the Difference", 
        "number": 389, 
        "similar_problems": [
            "(E) Single Number"
        ], 
        "total": 92617
    }, 
    {
        "accepted": 144629, 
        "companies": "Amazon", 
        "description": "Given a non-negative integer num, repeatedly add all its digits until the result has only one digit. \r\n\r\n\r\n\r\nFor example:\r\n\r\n\r\nGiven num = 38, the process is like: 3 + 8 = 11, 1 + 1 = 2. Since 2 has only one digit, return it.\r\n\r\n\r\nFollow up:\r\nCould you do it without any loop/recursion in O(1) runtime?\r\n\r\n\r\n\r\n  A naive implementation of the above process is trivial. Could you come up with other methods? \r\n  What are all the possible results?\r\n  How do they occur, periodically or randomly?\r\n  You may find this Wikipedia article useful.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Math"
        ], 
        "name": "Add Digits", 
        "number": 258, 
        "similar_problems": [
            "(E) Happy Number"
        ], 
        "total": 288082
    }, 
    {
        "accepted": 145673, 
        "companies": "Amazon", 
        "description": "Invert a binary tree.\r\n     4\r\n   /   \\\r\n  2     7\r\n / \\   / \\\r\n1   3 6   9\r\n\r\nto\r\n     4\r\n   /   \\\r\n  7     2\r\n / \\   / \\\r\n9   6 3   1\r\n\r\nTrivia:\r\nThis problem was inspired by this original tweet by Max Howell:\r\nGoogle: 90% of our engineers use the software you wrote (Homebrew), but you can\u2019t invert a binary tree on a whiteboard so fuck off.", 
        "difficulty": "Easy", 
        "hints": [
            "Tree"
        ], 
        "name": "Invert Binary Tree", 
        "number": 226, 
        "similar_problems": [], 
        "total": 292349
    }, 
    {
        "accepted": 148891, 
        "companies": "Amazon", 
        "description": "Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.\r\n\r\n\r\n\r\nFor example, given nums  = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].\r\n\r\n\r\n\r\nNote:\r\n\r\nYou must do this in-place without making a copy of the array.\r\nMinimize the total number of operations.\r\n\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Array", 
            "Two Pointers"
        ], 
        "name": "Move Zeroes", 
        "number": 283, 
        "similar_problems": [
            "(E) Remove Element"
        ], 
        "total": 311346
    }, 
    {
        "accepted": 12222, 
        "companies": "Amazon", 
        "description": "Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie. Each child i has a greed factor gi, which is the minimum size of a cookie that the child will be content with; and each cookie j has a size sj. If sj >= gi, we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.\r\n\r\n\r\nNote:\r\nYou may assume the greed factor is always positive. \r\nYou cannot assign more than one cookie to one child.\r\n\r\n\r\nExample 1:\r\n\r\nInput: [1,2,3], [1,1]\r\n\r\nOutput: 1\r\n\r\nExplanation: You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. \r\nAnd even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content.\r\nYou need to output 1.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1,2], [1,2,3]\r\n\r\nOutput: 2\r\n\r\nExplanation: You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2. \r\nYou have 3 cookies and their sizes are big enough to gratify all of the children, \r\nYou need to output 2.", 
        "difficulty": "Easy", 
        "hints": [
            "Greedy"
        ], 
        "name": "Assign Cookies", 
        "number": 455, 
        "similar_problems": [], 
        "total": 25668
    }, 
    {
        "accepted": 13217, 
        "companies": "Amazon", 
        "description": "Given a non-empty integer array of size n, find the minimum number of moves required to make all array elements equal, where a move is incrementing n - 1 elements by 1.\r\n\r\nExample:\r\n\r\nInput:\r\n[1,2,3]\r\n\r\nOutput:\r\n3\r\n\r\nExplanation:\r\nOnly three moves are needed (remember each move increments two elements):\r\n\r\n[1,2,3]  =>  [2,3,3]  =>  [3,4,3]  =>  [4,4,4]", 
        "difficulty": "Easy", 
        "hints": [
            "Math"
        ], 
        "name": "Minimum Moves to Equal Array Elements", 
        "number": 453, 
        "similar_problems": [
            "(M) Minimum Moves to Equal Array Elements II"
        ], 
        "total": 28291
    }, 
    {
        "accepted": 37372, 
        "companies": "Amazon", 
        "description": "Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom \r\nnote can be constructed from the magazines ; otherwise, it will return false. \r\n\r\n\r\nEach letter in the magazine string can only be used once in your ransom note.\r\n\r\n\r\nNote:\r\nYou may assume that both strings contain only lowercase letters.\r\n\r\n\r\n\r\ncanConstruct(\"a\", \"b\") -> false\r\ncanConstruct(\"aa\", \"ab\") -> false\r\ncanConstruct(\"aa\", \"aab\") -> true", 
        "difficulty": "Easy", 
        "hints": [
            "String"
        ], 
        "name": "Ransom Note", 
        "number": 383, 
        "similar_problems": [], 
        "total": 81058
    }, 
    {
        "accepted": 68407, 
        "companies": "Amazon", 
        "description": "Given two arrays, write a function to compute their intersection.\r\n\r\n\r\nExample:\r\nGiven nums1 = [1, 2, 2, 1], nums2 = [2, 2], return [2].\r\n\r\n\r\nNote:\r\n\r\nEach element in the result must be unique.\r\nThe result can be in any order.", 
        "difficulty": "Easy", 
        "hints": [
            "Binary Search", 
            "Hash Table", 
            "Two Pointers", 
            "Sort"
        ], 
        "name": "Intersection of Two Arrays", 
        "number": 349, 
        "similar_problems": [
            "(E) Intersection of Two Arrays II"
        ], 
        "total": 149712
    }, 
    {
        "accepted": 30463, 
        "companies": "Amazon", 
        "description": "Find the sum of all left leaves in a given binary tree.\r\n\r\nExample:\r\n\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n\r\nThere are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.", 
        "difficulty": "Easy", 
        "hints": [
            "Tree"
        ], 
        "name": "Sum of Left Leaves", 
        "number": 404, 
        "similar_problems": [], 
        "total": 66688
    }, 
    {
        "accepted": 127181, 
        "companies": "Amazon", 
        "description": "Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.\r\n\r\n\r\n\r\nSupposed the linked list is 1 -> 2 -> 3 -> 4 and you are given the third node with value 3, the linked list should become 1 -> 2 -> 4 after calling your function.", 
        "difficulty": "Easy", 
        "hints": [
            "Linked List"
        ], 
        "name": "Delete Node in a Linked List", 
        "number": 237, 
        "similar_problems": [
            "(E) Remove Linked List Elements"
        ], 
        "total": 280201
    }, 
    {
        "accepted": 176436, 
        "companies": "Amazon", 
        "description": "Given two binary trees, write a function to check if they are equal or not.\r\n\r\n\r\nTwo binary trees are considered equal if they are structurally identical and the nodes have the same value.", 
        "difficulty": "Easy", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "Same Tree", 
        "number": 100, 
        "similar_problems": [], 
        "total": 389952
    }, 
    {
        "accepted": 113462, 
        "companies": "Amazon", 
        "description": "Related to question Excel Sheet Column Title\r\nGiven a column title as appear in an Excel sheet, return its corresponding column number.\r\n\r\nFor example:\r\n    A -&gt; 1\r\n    B -&gt; 2\r\n    C -&gt; 3\r\n    ...\r\n    Z -&gt; 26\r\n    AA -&gt; 27\r\n    AB -&gt; 28 \r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Math"
        ], 
        "name": "Excel Sheet Column Number", 
        "number": 171, 
        "similar_problems": [
            "(E) Excel Sheet Column Title"
        ], 
        "total": 250894
    }, 
    {
        "accepted": 131067, 
        "companies": "Amazon", 
        "description": "Given two strings s and t, write a function to determine if t is an anagram of s. \r\n\r\nFor example,\r\ns = \"anagram\", t = \"nagaram\", return true.\r\ns = \"rat\", t = \"car\", return false.\r\n\r\n\r\nNote:\r\nYou may assume the string contains only lowercase alphabets.\r\n\r\nFollow up:\r\nWhat if the inputs contain unicode characters? How would you adapt your solution to such case?", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table", 
            "Sort"
        ], 
        "name": "Valid Anagram", 
        "number": 242, 
        "similar_problems": [
            "(M) Group Anagrams", 
            " (E) Palindrome Permutation", 
            " (E) Find All Anagrams in a String"
        ], 
        "total": 292031
    }, 
    {
        "accepted": 166342, 
        "companies": "Amazon", 
        "description": "Given an array of size n, find the majority element. The majority element is the element that appears more than &lfloor; n/2 &rfloor; times.\r\n\r\nYou may assume that the array is non-empty and the majority element always exist in the array.\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Array", 
            "Divide and Conquer", 
            "Bit Manipulation"
        ], 
        "name": "Majority Element", 
        "number": 169, 
        "similar_problems": [
            "(M) Majority Element II"
        ], 
        "total": 370864
    }, 
    {
        "accepted": 23618, 
        "companies": "Amazon", 
        "description": "Given a string which consists of lowercase or uppercase letters, find the length of the longest palindromes that can be built with those letters.\r\n\r\nThis is case sensitive, for example \"Aa\" is not considered a palindrome here.\r\n\r\nNote:\r\nAssume the length of given string will not exceed 1,010.\r\n\r\n\r\nExample: \r\n\r\nInput:\r\n\"abccccdd\"\r\n\r\nOutput:\r\n7\r\n\r\nExplanation:\r\nOne longest palindrome that can be built is \"dccaccd\", whose length is 7.", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table"
        ], 
        "name": "Longest Palindrome", 
        "number": 409, 
        "similar_problems": [
            "(E) Palindrome Permutation"
        ], 
        "total": 53080
    }, 
    {
        "accepted": 136274, 
        "companies": "Amazon", 
        "description": "Given an array of integers, find if the array contains any duplicates. Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.", 
        "difficulty": "Easy", 
        "hints": [
            "Array", 
            "Hash Table"
        ], 
        "name": "Contains Duplicate", 
        "number": 217, 
        "similar_problems": [
            "(E) Contains Duplicate II", 
            " (M) Contains Duplicate III"
        ], 
        "total": 311473
    }, 
    {
        "accepted": 48839, 
        "companies": "Amazon", 
        "description": "Given two arrays, write a function to compute their intersection.\r\n\r\n\r\nExample:\r\nGiven nums1 = [1, 2, 2, 1], nums2 = [2, 2], return [2, 2].\r\n\r\n\r\nNote:\r\n\r\nEach element in the result should appear as many times as it shows in both arrays.\r\nThe result can be in any order.\r\n\r\n\r\n\r\nFollow up:\r\n\r\nWhat if the given array is already sorted? How would you optimize your algorithm?\r\nWhat if nums1's size is small compared to nums2's size? Which algorithm is better?\r\nWhat if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?", 
        "difficulty": "Easy", 
        "hints": [
            "Binary Search", 
            "Hash Table", 
            "Two Pointers", 
            "Sort"
        ], 
        "name": "Intersection of Two Arrays II", 
        "number": 350, 
        "similar_problems": [
            "(E) Intersection of Two Arrays"
        ], 
        "total": 111735
    }, 
    {
        "accepted": 18437, 
        "companies": "Amazon", 
        "description": "A binary watch has 4 LEDs on the top which represent the hours (0-11), and the 6 LEDs on the bottom represent the minutes (0-59).\r\nEach LED represents a zero or one, with the least significant bit on the right.\r\n\r\nFor example, the above binary watch reads \"3:25\".\r\n\r\nGiven a non-negative integer n which represents the number of LEDs that are currently on, return all possible times the watch could represent.\r\n\r\nExample:\r\nInput: n = 1Return: [\"1:00\", \"2:00\", \"4:00\", \"8:00\", \"0:01\", \"0:02\", \"0:04\", \"0:08\", \"0:16\", \"0:32\"]\r\n\r\n\r\nNote:\r\n\r\nThe order of output does not matter.\r\nThe hour must not contain a leading zero, for example \"01:00\" is not valid, it should be \"1:00\".\r\nThe minute must be consist of two digits and may contain a leading zero, for example \"10:2\" is not valid, it should be \"10:02\".", 
        "difficulty": "Easy", 
        "hints": [
            "Backtracking", 
            "Bit Manipulation"
        ], 
        "name": "Binary Watch", 
        "number": 401, 
        "similar_problems": [
            "(M) Letter Combinations of a Phone Number", 
            " (E) Number of 1 Bits"
        ], 
        "total": 42261
    }, 
    {
        "accepted": 124169, 
        "companies": "Amazon", 
        "description": "Given a roman numeral, convert it to an integer.\r\n\r\nInput is guaranteed to be within the range from 1 to 3999.", 
        "difficulty": "Easy", 
        "hints": [
            "Math", 
            "String"
        ], 
        "name": "Roman to Integer", 
        "number": 13, 
        "similar_problems": [
            "(M) Integer to Roman"
        ], 
        "total": 285206
    }, 
    {
        "accepted": 180282, 
        "companies": "Amazon", 
        "description": "Reverse a singly linked list.\r\n\r\nclick to show more hints.\r\n\r\nHint:\r\nA linked list can be reversed either iteratively or recursively. Could you implement both?", 
        "difficulty": "Easy", 
        "hints": [
            "Linked List"
        ], 
        "name": "Reverse Linked List", 
        "number": 206, 
        "similar_problems": [
            "(M) Reverse Linked List II", 
            " (M) Binary Tree Upside Down", 
            " (E) Palindrome Linked List"
        ], 
        "total": 414300
    }, 
    {
        "accepted": 10568, 
        "companies": "Amazon", 
        "description": "Given n points in the plane that are all pairwise distinct, a \"boomerang\" is a tuple of points (i, j, k) such that the distance between i and j equals the distance between i and k (the order of the tuple matters).\r\n\r\nFind the number of boomerangs. You may assume that n will be at most 500 and coordinates of points are all in the range [-10000, 10000] (inclusive).\r\n\r\nExample:\r\n\r\nInput:\r\n[[0,0],[1,0],[2,0]]\r\n\r\nOutput:\r\n2\r\n\r\nExplanation:\r\nThe two boomerangs are [[1,0],[0,0],[2,0]] and [[1,0],[2,0],[0,0]]", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table"
        ], 
        "name": "Number of Boomerangs", 
        "number": 447, 
        "similar_problems": [
            "(M) Line Reflection"
        ], 
        "total": 24680
    }, 
    {
        "accepted": 19525, 
        "companies": "Amazon", 
        "description": "Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.\r\n\r\nNote:\r\n\r\nThe length of both num1 and num2 is < 5100.\r\nBoth num1 and num2 contains only digits 0-9.\r\nBoth num1 and num2 does not contain any leading zero.\r\nYou must not use any built-in BigInteger library or convert the inputs to integer directly.", 
        "difficulty": "Easy", 
        "hints": [
            "Math"
        ], 
        "name": "Add Strings", 
        "number": 415, 
        "similar_problems": [
            "(M) Add Two Numbers", 
            " (M) Multiply Strings"
        ], 
        "total": 47431
    }, 
    {
        "accepted": 13328, 
        "companies": "Amazon", 
        "description": "Given an integer, write an algorithm to convert it to hexadecimal. For negative integer, two\u2019s complement method is used.\r\n\r\n\r\nNote:\r\n\r\nAll letters in hexadecimal (a-f) must be in lowercase.\r\nThe hexadecimal string must not contain extra leading 0s. If the number is zero, it is represented by a single zero character '0'; otherwise, the first character in the hexadecimal string will not be the zero character.\r\nThe given number is guaranteed to fit within the range of a 32-bit signed integer.\r\nYou must not use any method provided by the library which converts/formats the number to hex directly.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\n26\r\n\r\nOutput:\r\n\"1a\"\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\n-1\r\n\r\nOutput:\r\n\"ffffffff\"", 
        "difficulty": "Easy", 
        "hints": [
            "Bit Manipulation"
        ], 
        "name": "Convert a Number to Hexadecimal", 
        "number": 405, 
        "similar_problems": [], 
        "total": 32904
    }, 
    {
        "accepted": 14325, 
        "companies": "Amazon", 
        "description": "Given a non-empty string check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.  You may assume the given string consists of lowercase English letters only and its length  will not exceed 10000. \r\n\r\nExample 1:\r\n\r\nInput: \"abab\"\r\n\r\nOutput: True\r\n\r\nExplanation: It's the substring \"ab\" twice.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"aba\"\r\n\r\nOutput: False\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: \"abcabcabcabc\"\r\n\r\nOutput: True\r\n\r\nExplanation: It's the substring \"abc\" four times. (And the substring \"abcabc\" twice.)", 
        "difficulty": "Easy", 
        "hints": [
            "String"
        ], 
        "name": "Repeated Substring Pattern", 
        "number": 459, 
        "similar_problems": [
            "(E) Implement strStr()"
        ], 
        "total": 36267
    }, 
    {
        "accepted": 79373, 
        "companies": "Amazon", 
        "description": "Given an integer, write a function to determine if it is a power of three.\r\n\r\n\r\n    Follow up:\r\n    Could you do it without using any loop / recursion?\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Math"
        ], 
        "name": "Power of Three", 
        "number": 326, 
        "similar_problems": [
            "(E) Power of Two", 
            " (E) Power of Four"
        ], 
        "total": 201866
    }, 
    {
        "accepted": 116666, 
        "companies": "Amazon", 
        "description": "Given an integer, write a function to determine if it is a power of two.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Math", 
            "Bit Manipulation"
        ], 
        "name": "Power of Two", 
        "number": 231, 
        "similar_problems": [
            "(E) Number of 1 Bits", 
            " (E) Power of Three", 
            " (E) Power of Four"
        ], 
        "total": 297092
    }, 
    {
        "accepted": 104296, 
        "companies": "Amazon", 
        "description": "Write an algorithm to determine if a number is \"happy\".\r\n\r\nA happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.\r\n\r\nExample:&nbsp;19 is a happy number\r\n\r\n\r\n12 + 92 = 82\r\n82 + 22 = 68\r\n62 + 82 = 100\r\n12 + 02 + 02 = 1\r\n\r\n\r\nCredits:Special thanks to @mithmatt and @ts for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table", 
            "Math"
        ], 
        "name": "Happy Number", 
        "number": 202, 
        "similar_problems": [
            "(E) Add Digits", 
            " (E) Ugly Number"
        ], 
        "total": 265809
    }, 
    {
        "accepted": 157148, 
        "companies": "Amazon", 
        "description": "Say you have an array for which the ith element is the price of a given stock on day i.\r\n\r\nIf you were only permitted to complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find the maximum profit.\r\n\r\nExample 1:\r\n\r\nInput: [7, 1, 5, 3, 6, 4]\r\nOutput: 5\r\n\r\nmax. difference = 6-1 = 5 (not 7-1 = 6, as selling price needs to be larger than buying price)\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [7, 6, 4, 3, 1]\r\nOutput: 0\r\n\r\nIn this case, no transaction is done, i.e. max profit = 0.", 
        "difficulty": "Easy", 
        "hints": [
            "Array", 
            "Dynamic Programming"
        ], 
        "name": "Best Time to Buy and Sell Stock", 
        "number": 121, 
        "similar_problems": [
            "(M) Maximum Subarray", 
            " (M) Best Time to Buy and Sell Stock II", 
            " (H) Best Time to Buy and Sell Stock III", 
            " (H) Best Time to Buy and Sell Stock IV", 
            " (M) Best Time to Buy and Sell Stock with Cooldown"
        ], 
        "total": 401522
    }, 
    {
        "accepted": 157919, 
        "companies": "Amazon", 
        "description": "Given a sorted linked list, delete all duplicates such that each element appear only once.\r\n\r\n\r\nFor example,\r\nGiven 1->1->2, return 1->2.\r\nGiven 1->1->2->3->3, return 1->2->3.", 
        "difficulty": "Easy", 
        "hints": [
            "Linked List"
        ], 
        "name": "Remove Duplicates from Sorted List", 
        "number": 83, 
        "similar_problems": [], 
        "total": 406305
    }, 
    {
        "accepted": 13793, 
        "companies": "Amazon", 
        "description": "You are given a binary tree in which each node contains an integer value.\r\n\r\nFind the number of paths that sum to a given value.\r\n\r\nThe path does not need to start or end at the root or a leaf, but it must go downwards\r\n(traveling only from parent nodes to child nodes).\r\n\r\nThe tree has no more than 1,000 nodes and the values are in the range -1,000,000 to 1,000,000.\r\n\r\nExample:\r\n\r\nroot = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\r\n\r\n      10\r\n     /  \\\r\n    5   -3\r\n   / \\    \\\r\n  3   2   11\r\n / \\   \\\r\n3  -2   1\r\n\r\nReturn 3. The paths that sum to 8 are:\r\n\r\n1.  5 -> 3\r\n2.  5 -> 2 -> 1\r\n3. -3 -> 11", 
        "difficulty": "Easy", 
        "hints": [
            "Tree"
        ], 
        "name": "Path Sum III", 
        "number": 437, 
        "similar_problems": [
            "(E) Path Sum", 
            " (M) Path Sum II"
        ], 
        "total": 35662
    }, 
    {
        "accepted": 149485, 
        "companies": "Amazon", 
        "description": "You are climbing a stair case. It takes n steps to reach to the top.\r\n\r\nEach time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?\r\n\r\n\r\nNote: Given n will be a positive integer.", 
        "difficulty": "Easy", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Climbing Stairs", 
        "number": 70, 
        "similar_problems": [], 
        "total": 386628
    }, 
    {
        "accepted": 129858, 
        "companies": "Amazon", 
        "description": "Write a function that takes an unsigned integer and returns the number of \u20191' bits it has (also known as the Hamming weight).\r\n\r\nFor example, the 32-bit integer \u201911' has binary representation 00000000000000000000000000001011, so the function should return 3.\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Bit Manipulation"
        ], 
        "name": "Number of 1 Bits", 
        "number": 191, 
        "similar_problems": [
            "(E) Reverse Bits", 
            " (E) Power of Two", 
            " (M) Counting Bits", 
            " (E) Binary Watch", 
            " (E) Hamming Distance"
        ], 
        "total": 337124
    }, 
    {
        "accepted": 87199, 
        "companies": "Amazon", 
        "description": "Write a program to check whether a given number is an ugly number.\r\n\r\n\r\n\r\nUgly numbers are positive numbers whose prime factors only include 2, 3, 5. For example, 6, 8 are ugly while 14 is not ugly since it includes another prime factor 7.\r\n\r\n\r\n\r\nNote that 1 is typically treated as an ugly number.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Math"
        ], 
        "name": "Ugly Number", 
        "number": 263, 
        "similar_problems": [
            "(E) Happy Number", 
            " (E) Count Primes", 
            " (M) Ugly Number II"
        ], 
        "total": 226744
    }, 
    {
        "accepted": 113995, 
        "companies": "Amazon", 
        "description": "Given a binary search tree (BST), find the lowest common ancestor (LCA) of two given nodes in the BST.\r\n\r\n\r\n\r\nAccording to the definition of LCA on Wikipedia: \u201cThe lowest common ancestor is defined between two nodes v and w as the lowest node in T that has both v and w as descendants (where we allow a node to be a descendant of itself).\u201d\r\n\r\n\r\n\r\n        _______6______\r\n       /              \\\r\n    ___2__          ___8__\r\n   /      \\        /      \\\r\n   0      _4       7       9\r\n         /  \\\r\n         3   5\r\n\r\n\r\n\r\nFor example, the lowest common ancestor (LCA) of nodes 2 and 8 is 6. Another example is LCA of nodes 2 and 4 is 2, since a node can be a descendant of itself according to the LCA definition.", 
        "difficulty": "Easy", 
        "hints": [
            "Tree"
        ], 
        "name": "Lowest Common Ancestor of a Binary Search Tree", 
        "number": 235, 
        "similar_problems": [
            "(M) Lowest Common Ancestor of a Binary Tree"
        ], 
        "total": 299219
    }, 
    {
        "accepted": 184228, 
        "companies": "Amazon", 
        "description": "Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.", 
        "difficulty": "Easy", 
        "hints": [
            "Linked List"
        ], 
        "name": "Merge Two Sorted Lists", 
        "number": 21, 
        "similar_problems": [
            "(H) Merge k Sorted Lists", 
            " (E) Merge Sorted Array", 
            " (M) Sort List", 
            " (M) Shortest Word Distance II"
        ], 
        "total": 485301
    }, 
    {
        "accepted": 110586, 
        "companies": "Amazon", 
        "description": "Given a binary tree, return the bottom-up level order traversal of its nodes' values. (ie, from left to right, level by level from leaf to root).\r\n\r\n\r\nFor example:\r\nGiven binary tree [3,9,20,null,null,15,7],\r\n\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n\r\n\r\n\r\nreturn its bottom-up level order traversal as:\r\n\r\n[\r\n  [15,7],\r\n  [9,20],\r\n  [3]\r\n]", 
        "difficulty": "Easy", 
        "hints": [
            "Tree", 
            "Breadth-first Search"
        ], 
        "name": "Binary Tree Level Order Traversal II", 
        "number": 107, 
        "similar_problems": [
            "(E) Binary Tree Level Order Traversal"
        ], 
        "total": 292154
    }, 
    {
        "accepted": 8318, 
        "companies": "Amazon", 
        "description": "Count the number of segments in a string, where a segment is defined to be a contiguous sequence of non-space characters.\r\n\r\nPlease note that the string does not contain any non-printable characters.\r\n\r\nExample:\r\n\r\nInput: \"Hello, my name is John\"\r\nOutput: 5", 
        "difficulty": "Easy", 
        "hints": [
            "String"
        ], 
        "name": "Number of Segments in a String", 
        "number": 434, 
        "similar_problems": [], 
        "total": 22123
    }, 
    {
        "accepted": 112004, 
        "companies": "Amazon", 
        "description": "You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and it will automatically contact the police if two adjacent houses were broken into on the same night.\r\n\r\nGiven a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.\r\n\r\nCredits:Special thanks to @ifanchu for adding this problem and creating all test cases. Also thanks to @ts for adding additional test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "House Robber", 
        "number": 198, 
        "similar_problems": [
            "(M) Maximum Product Subarray", 
            " (M) House Robber II", 
            " (M) Paint House", 
            " (E) Paint Fence", 
            " (M) House Robber III"
        ], 
        "total": 299135
    }, 
    {
        "accepted": 50901, 
        "companies": "Amazon", 
        "description": "Given an integer (signed 32 bits), write a function to check whether it is a power of 4.\r\n\r\nExample:\r\nGiven num = 16, return true.\r\nGiven num = 5, return false.\r\n\r\n\r\nFollow up: Could you solve it without loops/recursion?\r\n\r\nCredits:Special thanks to @yukuairoy  for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Bit Manipulation"
        ], 
        "name": "Power of Four", 
        "number": 342, 
        "similar_problems": [
            "(E) Power of Two", 
            " (E) Power of Three"
        ], 
        "total": 136082
    }, 
    {
        "accepted": 60871, 
        "companies": "Amazon", 
        "description": "Write a function that takes a string as input and reverse only the vowels of a string.\r\n\r\n\r\nExample 1:\r\nGiven s = \"hello\", return \"holle\".\r\n\r\n\r\n\r\nExample 2:\r\nGiven s = \"leetcode\", return \"leotcede\".\r\n\r\n\r\n\r\nNote:\r\nThe vowels does not include the letter \"y\".", 
        "difficulty": "Easy", 
        "hints": [
            "Two Pointers", 
            "String"
        ], 
        "name": "Reverse Vowels of a String", 
        "number": 345, 
        "similar_problems": [
            "(E) Reverse String"
        ], 
        "total": 162946
    }, 
    {
        "accepted": 141828, 
        "companies": "Amazon", 
        "description": "Given a linked list, swap every two adjacent nodes and return its head.\r\n\r\n\r\n\r\nFor example,\r\nGiven 1->2->3->4, you should return the list as 2->1->4->3.\r\n\r\n\r\n\r\nYour algorithm should use only constant space. You may not modify the values in the list, only nodes itself can be changed.", 
        "difficulty": "Easy", 
        "hints": [
            "Linked List"
        ], 
        "name": "Swap Nodes in Pairs", 
        "number": 24, 
        "similar_problems": [
            "(H) Reverse Nodes in k-Group"
        ], 
        "total": 381911
    }, 
    {
        "accepted": 147040, 
        "companies": "Amazon", 
        "description": "Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).\r\n\r\n\r\nFor example:\r\nGiven binary tree [3,9,20,null,null,15,7],\r\n\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n\r\n\r\n\r\nreturn its level order traversal as:\r\n\r\n[\r\n  [3],\r\n  [9,20],\r\n  [15,7]\r\n]", 
        "difficulty": "Easy", 
        "hints": [
            "Tree", 
            "Breadth-first Search"
        ], 
        "name": "Binary Tree Level Order Traversal", 
        "number": 102, 
        "similar_problems": [
            "(M) Binary Tree Zigzag Level Order Traversal", 
            " (E) Binary Tree Level Order Traversal II", 
            " (E) Minimum Depth of Binary Tree", 
            " (M) Binary Tree Vertical Order Traversal"
        ], 
        "total": 396918
    }, 
    {
        "accepted": 167010, 
        "companies": "Amazon", 
        "description": "Given an array and a value, remove all instances of that value in place and return the new length.\r\n\r\n\r\nDo not allocate extra space for another array, you must do this in place with constant memory.\r\n\r\nThe order of elements can be changed. It doesn't matter what you leave beyond the new length.\r\n\r\n\r\nExample:\r\nGiven input array nums = [3,2,2,3], val = 3\r\n\r\n\r\nYour function should return length = 2, with the first two elements of nums being 2.\r\n\r\n\r\n  Try two pointers.\r\n  Did you use the property of \"the order of elements can be changed\"?\r\n  What happens when the elements to remove are rare?", 
        "difficulty": "Easy", 
        "hints": [
            "Array", 
            "Two Pointers"
        ], 
        "name": "Remove Element", 
        "number": 27, 
        "similar_problems": [
            "(E) Remove Duplicates from Sorted Array", 
            " (E) Remove Linked List Elements", 
            " (E) Move Zeroes"
        ], 
        "total": 451486
    }, 
    {
        "accepted": 149835, 
        "companies": "Amazon", 
        "description": "Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).\r\n\r\n\r\nFor example, this binary tree [1,2,2,3,4,4,3] is symmetric:\r\n\r\n    1\r\n   / \\\r\n  2   2\r\n / \\ / \\\r\n3  4 4  3\r\n\r\n\r\n\r\nBut the following [1,2,2,null,3,null,3]  is not:\r\n\r\n    1\r\n   / \\\r\n  2   2\r\n   \\   \\\r\n   3    3\r\n\r\n\r\n\r\n\r\nNote:\r\nBonus points if you could solve it both recursively and iteratively.", 
        "difficulty": "Easy", 
        "hints": [
            "Tree", 
            "Depth-first Search", 
            "Breadth-first Search"
        ], 
        "name": "Symmetric Tree", 
        "number": 101, 
        "similar_problems": [], 
        "total": 405392
    }, 
    {
        "accepted": 144443, 
        "companies": "Amazon", 
        "description": "Given a non-negative integer represented as a non-empty array of digits, plus one to the integer.\r\n\r\nYou may assume the integer do not contain any leading zero, except the number 0 itself.\r\n\r\nThe digits are stored such that the most significant digit is at the head of the list.", 
        "difficulty": "Easy", 
        "hints": [
            "Array", 
            "Math"
        ], 
        "name": "Plus One", 
        "number": 66, 
        "similar_problems": [
            "(M) Multiply Strings", 
            " (E) Add Binary", 
            " (M) Plus One Linked List"
        ], 
        "total": 391087
    }, 
    {
        "accepted": 113238, 
        "companies": "Amazon", 
        "description": "Given numRows, generate the first numRows of Pascal's triangle.\r\n\r\n\r\nFor example, given numRows = 5,\r\nReturn\r\n\r\n[\r\n     [1],\r\n    [1,1],\r\n   [1,2,1],\r\n  [1,3,3,1],\r\n [1,4,6,4,1]\r\n]", 
        "difficulty": "Easy", 
        "hints": [
            "Array"
        ], 
        "name": "Pascal's Triangle", 
        "number": 118, 
        "similar_problems": [
            "(E) Pascal's Triangle II"
        ], 
        "total": 308335
    }, 
    {
        "accepted": 150662, 
        "companies": "Amazon", 
        "description": "Given a binary tree, determine if it is height-balanced.\r\n\r\n\r\n\r\nFor this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.", 
        "difficulty": "Easy", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "Balanced Binary Tree", 
        "number": 110, 
        "similar_problems": [
            "(E) Maximum Depth of Binary Tree"
        ], 
        "total": 415928
    }, 
    {
        "accepted": 13347, 
        "companies": "Amazon", 
        "description": "You have a total of n coins that you want to form in a staircase shape, where every k-th row must have exactly k coins.\r\n \r\nGiven n, find the total number of full staircase rows that can be formed.\r\n\r\nn is a non-negative integer and fits within the range of a 32-bit signed integer.\r\n\r\nExample 1:\r\n\r\nn = 5\r\n\r\nThe coins can form the following rows:\r\n\u00a4\r\n\u00a4 \u00a4\r\n\u00a4 \u00a4\r\n\r\nBecause the 3rd row is incomplete, we return 2.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nn = 8\r\n\r\nThe coins can form the following rows:\r\n\u00a4\r\n\u00a4 \u00a4\r\n\u00a4 \u00a4 \u00a4\r\n\u00a4 \u00a4\r\n\r\nBecause the 4th row is incomplete, we return 3.", 
        "difficulty": "Easy", 
        "hints": [
            "Binary Search", 
            "Math"
        ], 
        "name": "Arranging Coins", 
        "number": 441, 
        "similar_problems": [], 
        "total": 37185
    }, 
    {
        "accepted": 151895, 
        "companies": "Amazon", 
        "description": "Given a linked list, determine if it has a cycle in it.\r\n\r\n\r\n\r\nFollow up:\r\nCan you solve it without using extra space?", 
        "difficulty": "Easy", 
        "hints": [
            "Linked List", 
            "Two Pointers"
        ], 
        "name": "Linked List Cycle", 
        "number": 141, 
        "similar_problems": [
            "(M) Linked List Cycle II"
        ], 
        "total": 424058
    }, 
    {
        "accepted": 189127, 
        "companies": "Amazon", 
        "description": "Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.\r\n\r\n\r\nDo not allocate extra space for another array, you must do this in place with constant memory.\r\n\r\n\r\n\r\nFor example,\r\nGiven input array nums = [1,1,2],\r\n\r\n\r\nYour function should return length = 2, with the first two elements of nums being 1 and 2 respectively. It doesn't matter what you leave beyond the new length.", 
        "difficulty": "Easy", 
        "hints": [
            "Array", 
            "Two Pointers"
        ], 
        "name": "Remove Duplicates from Sorted Array", 
        "number": 26, 
        "similar_problems": [
            "(E) Remove Element"
        ], 
        "total": 535950
    }, 
    {
        "accepted": 100494, 
        "companies": "Amazon", 
        "description": "Given an index k, return the kth row of the Pascal's triangle.\r\n\r\n\r\nFor example, given k = 3,\r\nReturn [1,3,3,1].\r\n\r\n\r\n\r\nNote:\r\nCould you optimize your algorithm to use only O(k) extra space?", 
        "difficulty": "Easy", 
        "hints": [
            "Array"
        ], 
        "name": "Pascal's Triangle II", 
        "number": 119, 
        "similar_problems": [
            "(E) Pascal's Triangle"
        ], 
        "total": 286763
    }, 
    {
        "accepted": 68521, 
        "companies": "Amazon", 
        "description": "Implement the following operations of a queue using stacks.\r\n\r\n\r\npush(x) -- Push element x to the back of queue.\r\n\r\n\r\npop() -- Removes the element from in front of queue.\r\n\r\n\r\npeek() -- Get the front element.\r\n\r\n\r\nempty() -- Return whether the queue is empty.\r\n\r\n\r\nNotes:\r\n\r\nYou must use only standard operations of a stack -- which means only push to top, peek/pop from top, size, and is empty operations are valid.\r\nDepending on your language, stack may not be supported natively. You may simulate a stack by using a list or deque (double-ended queue), as long as you use only standard operations of a stack.\r\nYou may assume that all operations are valid (for example, no pop or peek operations will be called on an empty queue).", 
        "difficulty": "Easy", 
        "hints": [
            "Stack", 
            "Design"
        ], 
        "name": "Implement Queue using Stacks", 
        "number": 232, 
        "similar_problems": [
            "(E) Implement Stack using Queues"
        ], 
        "total": 195907
    }, 
    {
        "accepted": 81037, 
        "companies": "Amazon", 
        "description": "Given an integer n, return the number of trailing zeroes in n!.\r\n\r\nNote: Your solution should be in logarithmic time complexity.\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Math"
        ], 
        "name": "Factorial Trailing Zeroes", 
        "number": 172, 
        "similar_problems": [
            "(H) Number of Digit One"
        ], 
        "total": 232399
    }, 
    {
        "accepted": 86025, 
        "companies": "Amazon", 
        "description": "Given a binary tree, return all root-to-leaf paths.\r\n\r\n\r\nFor example, given the following binary tree:\r\n\r\n\r\n\r\n   1\r\n /   \\\r\n2     3\r\n \\\r\n  5\r\n\r\n\r\n\r\nAll root-to-leaf paths are:\r\n[\"1->2->5\", \"1->3\"]\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "Binary Tree Paths", 
        "number": 257, 
        "similar_problems": [
            "(M) Path Sum II"
        ], 
        "total": 246735
    }, 
    {
        "accepted": 176098, 
        "companies": "Amazon", 
        "description": "Determine whether an integer is a palindrome. Do this without extra space.\r\n\r\nclick to show spoilers.\r\n\r\nSome hints:\r\n\r\nCould negative integers be palindromes? (ie, -1)\r\n\r\nIf you are thinking of converting the integer to string, note the restriction of using extra space.\r\n\r\nYou could also try reversing an integer. However, if you have solved the problem \"Reverse Integer\", you know that the reversed integer might overflow. How would you handle such case?\r\n\r\nThere is a more generic way of solving this problem.", 
        "difficulty": "Easy", 
        "hints": [
            "Math"
        ], 
        "name": "Palindrome Number", 
        "number": 9, 
        "similar_problems": [
            "(E) Palindrome Linked List"
        ], 
        "total": 515891
    }, 
    {
        "accepted": 104587, 
        "companies": "Amazon", 
        "description": "Determine if a Sudoku is valid, according to: Sudoku Puzzles - The Rules.\r\n\r\nThe Sudoku board could be partially filled, where empty cells are filled with the character '.'.\r\n\r\n\r\n\r\nA partially filled sudoku which is valid.\r\n\r\n\r\nNote:\r\nA valid Sudoku board (partially filled) is not necessarily solvable. Only the filled cells need to be validated.", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table"
        ], 
        "name": "Valid Sudoku", 
        "number": 36, 
        "similar_problems": [
            "(H) Sudoku Solver"
        ], 
        "total": 308334
    }, 
    {
        "accepted": 34808, 
        "companies": "Amazon", 
        "description": "We are playing the Guess Game. The game is as follows: \r\n\r\nI pick a number from 1 to n. You have to guess which number I picked.\r\n\r\nEvery time you guess wrong, I'll tell you whether the number is higher or lower.\r\n\r\nYou call a pre-defined API guess(int num) which returns 3 possible results (-1, 1, or 0):\r\n\r\n-1 : My number is lower\r\n 1 : My number is higher\r\n 0 : Congrats! You got it!\r\n\r\n\r\nExample:\r\n\r\nn = 10, I pick 6.\r\n\r\nReturn 6.", 
        "difficulty": "Easy", 
        "hints": [
            "Binary Search"
        ], 
        "name": "Guess Number Higher or Lower", 
        "number": 374, 
        "similar_problems": [
            "(E) First Bad Version", 
            " (M) Guess Number Higher or Lower II"
        ], 
        "total": 103617
    }, 
    {
        "accepted": 14168, 
        "companies": "Amazon", 
        "description": "Given a string s and a non-empty string p, find all the start indices of p's anagrams in s.\r\n\r\nStrings consists of lowercase English letters only and the length of both strings s and p will not be larger than 20,100.\r\n\r\nThe order of output does not matter.\r\n\r\nExample 1:\r\n\r\nInput:\r\ns: \"cbaebabacd\" p: \"abc\"\r\n\r\nOutput:\r\n[0, 6]\r\n\r\nExplanation:\r\nThe substring with start index = 0 is \"cba\", which is an anagram of \"abc\".\r\nThe substring with start index = 6 is \"bac\", which is an anagram of \"abc\".\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\ns: \"abab\" p: \"ab\"\r\n\r\nOutput:\r\n[0, 1, 2]\r\n\r\nExplanation:\r\nThe substring with start index = 0 is \"ab\", which is an anagram of \"ab\".\r\nThe substring with start index = 1 is \"ba\", which is an anagram of \"ab\".\r\nThe substring with start index = 2 is \"ab\", which is an anagram of \"ab\".", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table"
        ], 
        "name": "Find All Anagrams in a String", 
        "number": 438, 
        "similar_problems": [
            "(E) Valid Anagram"
        ], 
        "total": 42529
    }, 
    {
        "accepted": 51102, 
        "companies": "Amazon", 
        "description": "You are playing the following Bulls and Cows game with your friend: You write down a number and ask your friend to guess what the number is. Each time your friend makes a guess, you provide a hint that indicates how many digits in said guess match your secret number exactly in both digit and position (called \"bulls\") and how many digits match the secret number but locate in the wrong position (called \"cows\"). Your friend will use successive guesses and hints to eventually derive the secret number.\r\n\r\n\r\nFor example:\r\n\r\nSecret number:  \"1807\"\r\nFriend's guess: \"7810\"\r\n\r\nHint: 1 bull and 3 cows. (The bull is 8, the cows are 0, 1 and 7.)\r\n\r\n\r\nWrite a function to return a hint according to the secret number and friend's guess, use A to indicate the bulls and B to indicate the cows. In the above example, your function should return \"1A3B\". \r\n\r\nPlease note that both secret number and friend's guess may contain duplicate digits, for example:\r\n\r\nSecret number:  \"1123\"\r\nFriend's guess: \"0111\"\r\n\r\nIn this case, the 1st 1 in friend's guess is a bull, the 2nd or 3rd 1 is a cow, and your function should return \"1A1B\".\r\n\r\n\r\nYou may assume that the secret number and your friend's guess only contain digits, and their lengths are always equal.\r\n\r\nCredits:Special thanks to @jeantimex for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table"
        ], 
        "name": "Bulls and Cows", 
        "number": 299, 
        "similar_problems": [], 
        "total": 153524
    }, 
    {
        "accepted": 140256, 
        "companies": "Amazon", 
        "description": "Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.\r\n\r\n\r\nFor example:\r\nGiven the below binary tree and sum = 22,\r\n\r\n              5\r\n             / \\\r\n            4   8\r\n           /   / \\\r\n          11  13  4\r\n         /  \\      \\\r\n        7    2      1\r\n\r\n\r\n\r\nreturn true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.", 
        "difficulty": "Easy", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "Path Sum", 
        "number": 112, 
        "similar_problems": [
            "(M) Path Sum II", 
            " (H) Binary Tree Maximum Path Sum", 
            " (M) Sum Root to Leaf Numbers", 
            " (E) Path Sum III"
        ], 
        "total": 425491
    }, 
    {
        "accepted": 114469, 
        "companies": "Amazon", 
        "description": "The count-and-say sequence is the sequence of integers beginning as follows:\r\n1, 11, 21, 1211, 111221, ...\r\n\r\n\r\n\r\n1 is read off as \"one 1\" or 11.\r\n11 is read off as \"two 1s\" or 21.\r\n21 is read off as \"one 2, then one 1\" or 1211.\r\n\r\n\r\n\r\nGiven an integer n, generate the nth sequence.\r\n\r\n\r\n\r\nNote: The sequence of integers will be represented as a string.", 
        "difficulty": "Easy", 
        "hints": [
            "String"
        ], 
        "name": "Count and Say", 
        "number": 38, 
        "similar_problems": [
            "(M) Encode and Decode Strings"
        ], 
        "total": 351148
    }, 
    {
        "accepted": 88763, 
        "companies": "Amazon", 
        "description": "Given two strings s and t, determine if they are isomorphic.\r\n\r\nTwo strings are isomorphic if the characters in s can be replaced to get t.\r\n\r\nAll occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.\r\n\r\nFor example,\r\nGiven \"egg\", \"add\", return true.\r\n\r\nGiven \"foo\", \"bar\", return false.\r\n\r\nGiven \"paper\", \"title\", return true.\r\n\r\nNote:\r\nYou may assume both s and t have the same length.", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table"
        ], 
        "name": "Isomorphic Strings", 
        "number": 205, 
        "similar_problems": [
            "(E) Word Pattern"
        ], 
        "total": 272881
    }, 
    {
        "accepted": 144162, 
        "companies": "Amazon", 
        "description": "Given a binary tree, find its minimum depth.\r\n\r\nThe minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.", 
        "difficulty": "Easy", 
        "hints": [
            "Tree", 
            "Depth-first Search", 
            "Breadth-first Search"
        ], 
        "name": "Minimum Depth of Binary Tree", 
        "number": 111, 
        "similar_problems": [
            "(E) Binary Tree Level Order Traversal", 
            " (E) Maximum Depth of Binary Tree"
        ], 
        "total": 446699
    }, 
    {
        "accepted": 161793, 
        "companies": "Amazon", 
        "description": "Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.\r\n\r\nThe brackets must close in the correct order, \"()\" and \"()[]{}\" are all valid but \"(]\" and \"([)]\" are not.", 
        "difficulty": "Easy", 
        "hints": [
            "Stack", 
            "String"
        ], 
        "name": "Valid Parentheses", 
        "number": 20, 
        "similar_problems": [
            "(M) Generate Parentheses", 
            " (H) Longest Valid Parentheses", 
            " (H) Remove Invalid Parentheses"
        ], 
        "total": 503422
    }, 
    {
        "accepted": 153809, 
        "companies": "Amazon", 
        "description": "Given a linked list, remove the nth node from the end of list and return its head.\r\n\r\n\r\nFor example,\r\n\r\n\r\n   Given linked list: 1->2->3->4->5, and n = 2.\r\n\r\n   After removing the second node from the end, the linked list becomes 1->2->3->5.\r\n\r\n\r\n\r\nNote:\r\nGiven n will always be valid.\r\nTry to do this in one pass.", 
        "difficulty": "Easy", 
        "hints": [
            "Linked List", 
            "Two Pointers"
        ], 
        "name": "Remove Nth Node From End of List", 
        "number": 19, 
        "similar_problems": [], 
        "total": 478551
    }, 
    {
        "accepted": 63551, 
        "companies": "Amazon", 
        "description": "Given a pattern and a string str, find if str follows the same pattern.\r\n Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.\r\n\r\nExamples:\r\n\r\npattern = \"abba\", str = \"dog cat cat dog\" should return true.\r\npattern = \"abba\", str = \"dog cat cat fish\" should return false.\r\npattern = \"aaaa\", str = \"dog cat cat dog\" should return false.\r\npattern = \"abba\", str = \"dog dog dog dog\" should return false.\r\n\r\n\r\n\r\n\r\nNotes:\r\nYou may assume pattern contains only lowercase letters, and str contains lowercase letters separated by a single space.\r\n\r\n\r\nCredits:Special thanks to @minglotus6 for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table"
        ], 
        "name": "Word Pattern", 
        "number": 290, 
        "similar_problems": [
            "(E) Isomorphic Strings", 
            " (H) Word Pattern II"
        ], 
        "total": 198236
    }, 
    {
        "accepted": 55565, 
        "companies": "Amazon", 
        "description": "Find the total area covered by two rectilinear rectangles in a 2D plane.\r\nEach rectangle is defined by its bottom left corner and top right corner as shown in the figure.\r\n\r\n\r\n\r\n\r\nAssume that the total area is never beyond the maximum possible value of int.\r\n\r\n\r\nCredits:Special thanks to @mithmatt for adding this problem, creating the above image and all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Math"
        ], 
        "name": "Rectangle Area", 
        "number": 223, 
        "similar_problems": [], 
        "total": 173942
    }, 
    {
        "accepted": 82661, 
        "companies": "Amazon", 
        "description": "Given a singly linked list, determine if it is a palindrome.\r\n\r\nFollow up:\r\nCould you do it in O(n) time and O(1) space?", 
        "difficulty": "Easy", 
        "hints": [
            "Linked List", 
            "Two Pointers"
        ], 
        "name": "Palindrome Linked List", 
        "number": 234, 
        "similar_problems": [
            "(E) Palindrome Number", 
            " (E) Valid Palindrome", 
            " (E) Reverse Linked List"
        ], 
        "total": 261323
    }, 
    {
        "accepted": 92102, 
        "companies": "Amazon", 
        "description": "Given an array of integers and an integer k, find out whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the absolute difference between i and j is at most k.", 
        "difficulty": "Easy", 
        "hints": [
            "Array", 
            "Hash Table"
        ], 
        "name": "Contains Duplicate II", 
        "number": 219, 
        "similar_problems": [
            "(E) Contains Duplicate", 
            " (M) Contains Duplicate III"
        ], 
        "total": 292161
    }, 
    {
        "accepted": 138911, 
        "companies": "Amazon", 
        "description": "Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.\r\n\r\n\r\nNote:\r\nYou may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2. The number of elements initialized in nums1 and nums2 are m and n respectively.", 
        "difficulty": "Easy", 
        "hints": [
            "Array", 
            "Two Pointers"
        ], 
        "name": "Merge Sorted Array", 
        "number": 88, 
        "similar_problems": [
            "(E) Merge Two Sorted Lists"
        ], 
        "total": 442397
    }, 
    {
        "accepted": 125637, 
        "companies": "Amazon", 
        "description": "Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word in the string.\r\n\r\nIf the last word does not exist, return 0.\r\n\r\nNote: A word is defined as a character sequence consists of non-space characters only.\r\n\r\n\r\nFor example, \r\nGiven s = \"Hello World\",\r\nreturn 5.", 
        "difficulty": "Easy", 
        "hints": [
            "String"
        ], 
        "name": "Length of Last Word", 
        "number": 58, 
        "similar_problems": [], 
        "total": 403970
    }, 
    {
        "accepted": 61356, 
        "companies": "Amazon", 
        "description": "Implement the following operations of a stack using queues.\r\n\r\n\r\npush(x) -- Push element x onto stack.\r\n\r\n\r\npop() -- Removes the element on top of the stack.\r\n\r\n\r\ntop() -- Get the top element.\r\n\r\n\r\nempty() -- Return whether the stack is empty.\r\n\r\n\r\nNotes:\r\n\r\nYou must use only standard operations of a queue -- which means only push to back, peek/pop from front, size, and is empty operations are valid.\r\nDepending on your language, queue may not be supported natively. You may simulate a queue by using a list or deque (double-ended queue), as long as you use only standard operations of a queue.\r\nYou may assume that all operations are valid (for example, no pop or top operations will be called on an empty stack).\r\n\r\n\r\n\r\n\r\nUpdate (2015-06-11):\r\nThe class name of the Java function had been updated to MyStack instead of Stack.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Stack", 
            "Design"
        ], 
        "name": "Implement Stack using Queues", 
        "number": 225, 
        "similar_problems": [
            "(E) Implement Queue using Stacks"
        ], 
        "total": 197468
    }, 
    {
        "accepted": 94916, 
        "companies": "Amazon", 
        "description": "Remove all elements from a linked list of integers that have value val.\r\n\r\nExample\r\nGiven: 1 --> 2 --> 6 --> 3 --> 4 --> 5 --> 6,  val = 6\r\nReturn: 1 --> 2 --> 3 --> 4 --> 5\r\n\r\n\r\nCredits:Special thanks to @mithmatt for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Linked List"
        ], 
        "name": "Remove Linked List Elements", 
        "number": 203, 
        "similar_problems": [
            "(E) Remove Element", 
            " (E) Delete Node in a Linked List"
        ], 
        "total": 306268
    }, 
    {
        "accepted": 6050, 
        "companies": "Amazon", 
        "description": "Winter is coming! Your first job during the contest is to design a standard heater with fixed warm radius to warm all the houses.\r\n\r\nNow, you are given positions of houses and heaters on a horizontal line, find out minimum radius of heaters so that all houses could be covered by those heaters.\r\n\r\nSo, your input will be the positions of houses and heaters seperately, and your expected output will be the minimum radius standard of heaters.\r\n\r\nNote:\r\n\r\nNumbers of houses and heaters you are given are non-negative and will not exceed 25000.\r\nPositions of houses and heaters you are given are non-negative and will not exceed 10^9.\r\nAs long as a house is in the heaters' warm radius range, it can be warmed.\r\nAll the heaters follow your radius standard and the warm radius will the same.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: [1,2,3],[2]\r\nOutput: 1\r\nExplanation: The only heater was placed in the position 2, and if we use the radius 1 standard, then all the houses can be warmed.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1,2,3,4],[1,4]\r\nOutput: 1\r\nExplanation: The two heater was placed in the position 1 and 4. We need to use radius 1 standard, then all the houses can be warmed.", 
        "difficulty": "Easy", 
        "hints": [
            "Binary Search"
        ], 
        "name": "Heaters", 
        "number": 475, 
        "similar_problems": [], 
        "total": 19810
    }, 
    {
        "accepted": 144576, 
        "companies": "Amazon", 
        "description": "Write a function to find the longest common prefix string amongst an array of strings.", 
        "difficulty": "Easy", 
        "hints": [
            "String"
        ], 
        "name": "Longest Common Prefix", 
        "number": 14, 
        "similar_problems": [], 
        "total": 472797
    }, 
    {
        "accepted": 120457, 
        "companies": "Amazon", 
        "description": "Given two binary strings, return their sum (also a binary string).\r\n\r\n\r\n\r\nFor example,\r\na = \"11\"\r\nb = \"1\"\r\nReturn \"100\".", 
        "difficulty": "Easy", 
        "hints": [
            "Math", 
            "String"
        ], 
        "name": "Add Binary", 
        "number": 67, 
        "similar_problems": [
            "(M) Add Two Numbers", 
            " (M) Multiply Strings", 
            " (E) Plus One"
        ], 
        "total": 395010
    }, 
    {
        "accepted": 13822, 
        "companies": "Amazon", 
        "description": "Find the nth digit of the infinite integer sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... \r\n\r\nNote:\r\nn is positive and will fit within the range of a 32-bit signed integer (n < 231).\r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\n3\r\n\r\nOutput:\r\n3\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\n11\r\n\r\nOutput:\r\n0\r\n\r\nExplanation:\r\nThe 11th digit of the sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... is a 0, which is part of the number 10.", 
        "difficulty": "Easy", 
        "hints": [
            "Math"
        ], 
        "name": "Nth Digit", 
        "number": 400, 
        "similar_problems": [], 
        "total": 45364
    }, 
    {
        "accepted": 13995, 
        "companies": "Amazon", 
        "description": "Given an array of integers A and let n to be its length.\r\n\r\n\r\n\r\nAssume Bk to be an array obtained by rotating the array A k positions clock-wise, we define a \"rotation function\" F on A as follow:\r\n\r\n\r\n\r\nF(k) = 0 * Bk[0] + 1 * Bk[1] + ... + (n-1) * Bk[n-1].\r\n\r\nCalculate the maximum value of F(0), F(1), ..., F(n-1). \r\n\r\n\r\nNote:\r\nn is guaranteed to be less than 105.\r\n\r\n\r\nExample:\r\n\r\nA = [4, 3, 2, 6]\r\n\r\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\r\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\r\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\r\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\r\n\r\nSo the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.", 
        "difficulty": "Easy", 
        "hints": [
            "Math"
        ], 
        "name": "Rotate Function", 
        "number": 396, 
        "similar_problems": [], 
        "total": 46000
    }, 
    {
        "accepted": 107820, 
        "companies": "Amazon", 
        "description": "Write a program to find the node at which the intersection of two singly linked lists begins.\r\n\r\nFor example, the following two linked lists: \r\n\r\nA:          a1 \u2192 a2\r\n                   \u2198\r\n                     c1 \u2192 c2 \u2192 c3\r\n                   \u2197            \r\nB:     b1 \u2192 b2 \u2192 b3\r\n\r\nbegin to intersect at node c1.\r\n\r\nNotes:\r\n\r\nIf the two linked lists have no intersection at all, return null.\r\nThe linked lists must retain their original structure after the function returns. \r\nYou may assume there are no cycles anywhere in the entire linked structure.\r\nYour code should preferably run in O(n) time and use only O(1) memory.\r\n\r\n\r\n\r\nCredits:Special thanks to @stellari for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Linked List"
        ], 
        "name": "Intersection of Two Linked Lists", 
        "number": 160, 
        "similar_problems": [], 
        "total": 358947
    }, 
    {
        "accepted": 395863, 
        "companies": "Amazon", 
        "description": "Given an array of integers, return indices of the two numbers such that they add up to a specific target.\r\n\r\nYou may assume that each input would have exactly one solution.\r\n\r\n\r\nExample:\r\n\r\nGiven nums = [2, 7, 11, 15], target = 9,\r\n\r\nBecause nums[0] + nums[1] = 2 + 7 = 9,\r\nreturn [0, 1].\r\n\r\n\r\n\r\n\r\nUPDATE (2016/2/13):\r\nThe return format had been changed to zero-based indices. Please read the above updated description carefully.", 
        "difficulty": "Easy", 
        "hints": [
            "Array", 
            "Hash Table"
        ], 
        "name": "Two Sum", 
        "number": 1, 
        "similar_problems": [
            "(M) 3Sum", 
            " (M) 4Sum", 
            " (M) Two Sum II - Input array is sorted", 
            " (E) Two Sum III - Data structure design"
        ], 
        "total": 1320111
    }, 
    {
        "accepted": 89097, 
        "companies": "Amazon", 
        "description": "Reverse bits of a given 32 bits unsigned integer.\r\n\r\nFor example, given input 43261596 (represented in binary as 00000010100101000001111010011100), return 964176192 (represented in binary as 00111001011110000010100101000000).\r\n\r\n\r\nFollow up:\r\nIf this function is called many times, how would you optimize it?\r\n\r\n\r\nRelated problem: Reverse Integer\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Bit Manipulation"
        ], 
        "name": "Reverse Bits", 
        "number": 190, 
        "similar_problems": [
            "(E) Number of 1 Bits"
        ], 
        "total": 302057
    }, 
    {
        "accepted": 152014, 
        "companies": "Amazon", 
        "description": "Implement strStr().\r\n\r\n\r\nReturns the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.", 
        "difficulty": "Easy", 
        "hints": [
            "Two Pointers", 
            "String"
        ], 
        "name": "Implement strStr()", 
        "number": 28, 
        "similar_problems": [
            "(H) Shortest Palindrome", 
            " (E) Repeated Substring Pattern"
        ], 
        "total": 563602
    }, 
    {
        "accepted": 17184, 
        "companies": "Amazon", 
        "description": "Given a non-empty array of integers, return the third maximum number in this array. If it does not exist, return the maximum number. The time complexity must be in O(n).\r\n\r\nExample 1:\r\n\r\nInput: [3, 2, 1]\r\n\r\nOutput: 1\r\n\r\nExplanation: The third maximum is 1.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1, 2]\r\n\r\nOutput: 2\r\n\r\nExplanation: The third maximum does not exist, so the maximum (2) is returned instead.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: [2, 2, 3, 1]\r\n\r\nOutput: 1\r\n\r\nExplanation: Note that the third maximum here means the third maximum distinct number.\r\nBoth numbers with value 2 are both considered as second maximum.", 
        "difficulty": "Easy", 
        "hints": [
            "Array"
        ], 
        "name": "Third Maximum Number", 
        "number": 414, 
        "similar_problems": [
            "(M) Kth Largest Element in an Array"
        ], 
        "total": 64239
    }, 
    {
        "accepted": 107482, 
        "companies": "Amazon", 
        "description": "Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.\r\n\r\n\r\npush(x) -- Push element x onto stack.\r\n\r\n\r\npop() -- Removes the element on top of the stack.\r\n\r\n\r\ntop() -- Get the top element.\r\n\r\n\r\ngetMin() -- Retrieve the minimum element in the stack.\r\n\r\n\r\n\r\n\r\nExample:\r\n\r\nMinStack minStack = new MinStack();\r\nminStack.push(-2);\r\nminStack.push(0);\r\nminStack.push(-3);\r\nminStack.getMin();   --> Returns -3.\r\nminStack.pop();\r\nminStack.top();      --> Returns 0.\r\nminStack.getMin();   --> Returns -2.", 
        "difficulty": "Easy", 
        "hints": [
            "Stack", 
            "Design"
        ], 
        "name": "Min Stack", 
        "number": 155, 
        "similar_problems": [
            "(H) Sliding Window Maximum"
        ], 
        "total": 408485
    }, 
    {
        "accepted": 55504, 
        "companies": "Amazon", 
        "description": "Given an integer array nums, find the sum of the elements between indices i and j (i &le; j), inclusive.\r\n\r\nExample:\r\n\r\nGiven nums = [-2, 0, 3, -5, 2, -1]\r\n\r\nsumRange(0, 2) -> 1\r\nsumRange(2, 5) -> -1\r\nsumRange(0, 5) -> -3\r\n\r\n\r\n\r\nNote:\r\n\r\nYou may assume that the array does not change.\r\nThere are many calls to sumRange function.", 
        "difficulty": "Easy", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Range Sum Query - Immutable", 
        "number": 303, 
        "similar_problems": [
            "(M) Range Sum Query 2D - Immutable", 
            " (M) Range Sum Query - Mutable", 
            " (M) Maximum Size Subarray Sum Equals k"
        ], 
        "total": 211597
    }, 
    {
        "accepted": 96386, 
        "companies": "Amazon", 
        "description": "Description:\r\nCount the number of prime numbers less than a non-negative number, n.\r\n\r\nCredits:Special thanks to @mithmatt for adding this problem and creating all test cases.\r\n\r\n\r\n  Let's start with a isPrime function. To determine if a number is prime, we need to check if it is not divisible by any number less than n. The runtime complexity of isPrime function would be O(n) and hence counting the total prime numbers up to n would be O(n2). Could we do better?\r\n  \r\n  As we know the number must not be divisible by any number > n / 2, we can immediately cut the total iterations half by dividing only up to n / 2. Could we still do better?\r\n  \r\n  Let's write down all of 12's factors:\r\n\r\n2 \u00d7 6 = 12\r\n3 \u00d7 4 = 12\r\n4 \u00d7 3 = 12\r\n6 \u00d7 2 = 12\r\n\r\n\r\nAs you can see, calculations of 4 \u00d7 3 and 6 \u00d7 2 are not necessary. Therefore, we only need to consider factors up to &radic;n because, if n is divisible by some number p, then n = p \u00d7 q and since p &le; q, we could derive that p &le; &radic;n.\r\n\r\nOur total runtime has now improved to O(n1.5), which is slightly better. Is there a faster approach?\r\n\r\n\r\npublic int countPrimes(int n) {\r\n   int count = 0;\r\n   for (int i = 1; i < n; i++) {\r\n      if (isPrime(i)) count++;\r\n   }\r\n   return count;\r\n}\r\n\r\nprivate boolean isPrime(int num) {\r\n   if (num <= 1) return false;\r\n   // Loop's ending condition is i * i <= num instead of i <= sqrt(num)\r\n   // to avoid repeatedly calling an expensive function sqrt().\r\n   for (int i = 2; i * i <= num; i++) {\r\n      if (num % i == 0) return false;\r\n   }\r\n   return true;\r\n}\r\n\r\n  \r\n  The Sieve of Eratosthenes is one of the most efficient ways to find all prime numbers up to n. But don't let that name scare you, I promise that the concept is surprisingly simple.\r\n\r\n\r\n\r\nSieve of Eratosthenes: algorithm steps for primes below 121. \"Sieve of Eratosthenes Animation\" by SKopp is licensed under CC BY 2.0.\r\n\r\n\r\nWe start off with a table of n numbers. Let's look at the first number, 2. We know all multiples of 2 must not be primes, so we mark them off as non-primes. Then we look at the next number, 3. Similarly, all multiples of 3 such as 3 \u00d7 2 = 6, 3 \u00d7 3 = 9, ... must not be primes, so we mark them off as well. Now we look at the next number, 4, which was already marked off. What does this tell you? Should you mark off all multiples of 4 as well?\r\n  \r\n  4 is not a prime because it is divisible by 2, which means all multiples of 4 must also be divisible by 2 and were already marked off. So we can skip 4 immediately and go to the next number, 5. Now, all multiples of 5 such as 5 \u00d7 2 = 10, 5 \u00d7 3 = 15, 5 \u00d7 4 = 20, 5 \u00d7 5 = 25, ... can be marked off. There is a slight optimization here, we do not need to start from 5 \u00d7 2 = 10. Where should we start marking off?\r\n  \r\n  In fact, we can mark off multiples of 5 starting at 5 \u00d7 5 = 25, because 5 \u00d7 2 = 10 was already marked off by multiple of 2, similarly 5 \u00d7 3 = 15 was already marked off by multiple of 3. Therefore, if the current number is p, we can always mark off multiples of p starting at p2, then in increments of p: p2 + p, p2 + 2p, ... Now what should be the terminating loop condition?\r\n  \r\n  It is easy to say that the terminating loop condition is p < n, which is certainly correct but not efficient. Do you still remember Hint #3?\r\n  \r\n  Yes, the terminating loop condition can be p < &radic;n, as all non-primes &ge; &radic;n must have already been marked off. When the loop terminates, all the numbers in the table that are non-marked are prime.\r\n\r\nThe Sieve of Eratosthenes uses an extra O(n) memory and its runtime complexity is O(n log log n). For the more mathematically inclined readers, you can read more about its algorithm complexity on Wikipedia.\r\n\r\n\r\npublic int countPrimes(int n) {\r\n   boolean[] isPrime = new boolean[n];\r\n   for (int i = 2; i < n; i++) {\r\n      isPrime[i] = true;\r\n   }\r\n   // Loop's ending condition is i * i < n instead of i < sqrt(n)\r\n   // to avoid repeatedly calling an expensive function sqrt().\r\n   for (int i = 2; i * i < n; i++) {\r\n      if (!isPrime[i]) continue;\r\n      for (int j = i * i; j < n; j += i) {\r\n         isPrime[j] = false;\r\n      }\r\n   }\r\n   int count = 0;\r\n   for (int i = 2; i < n; i++) {\r\n      if (isPrime[i]) count++;\r\n   }\r\n   return count;\r\n}", 
        "difficulty": "Easy", 
        "hints": [
            "Hash Table", 
            "Math"
        ], 
        "name": "Count Primes", 
        "number": 204, 
        "similar_problems": [
            "(E) Ugly Number", 
            " (M) Ugly Number II", 
            " (M) Perfect Squares"
        ], 
        "total": 368645
    }, 
    {
        "accepted": 130844, 
        "companies": "Amazon", 
        "description": "The string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\r\n\r\nP   A   H   N\r\nA P L S I I G\r\nY   I   R\r\n\r\n\r\nAnd then read line by line: \"PAHNAPLSIIGYIR\"\r\n\r\n\r\nWrite the code that will take a string and make this conversion given a number of rows:\r\n\r\nstring convert(string text, int nRows);\r\n\r\nconvert(\"PAYPALISHIRING\", 3) should return \"PAHNAPLSIIGYIR\".", 
        "difficulty": "Easy", 
        "hints": [
            "String"
        ], 
        "name": "ZigZag Conversion", 
        "number": 6, 
        "similar_problems": [], 
        "total": 504743
    }, 
    {
        "accepted": 137563, 
        "companies": "Amazon", 
        "description": "Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.\r\n\r\n\r\n\r\nFor example,\r\n\"A man, a plan, a canal: Panama\" is a palindrome.\r\n\"race a car\" is not a palindrome.\r\n\r\n\r\n\r\nNote:\r\nHave you consider that the string might be empty? This is a good question to ask during an interview.\r\n\r\nFor the purpose of this problem, we define empty string as valid palindrome.", 
        "difficulty": "Easy", 
        "hints": [
            "Two Pointers", 
            "String"
        ], 
        "name": "Valid Palindrome", 
        "number": 125, 
        "similar_problems": [
            "(E) Palindrome Linked List"
        ], 
        "total": 542562
    }, 
    {
        "accepted": 87347, 
        "companies": "Amazon", 
        "description": "Given a positive integer, return its corresponding column title as appear in an Excel sheet.\r\n\r\nFor example:\r\n\r\n    1 -> A\r\n    2 -> B\r\n    3 -> C\r\n    ...\r\n    26 -> Z\r\n    27 -> AA\r\n    28 -> AB \r\n\r\nCredits:Special thanks to @ifanchu for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Math"
        ], 
        "name": "Excel Sheet Column Title", 
        "number": 168, 
        "similar_problems": [
            "(E) Excel Sheet Column Number"
        ], 
        "total": 357221
    }, 
    {
        "accepted": 79269, 
        "companies": "Amazon", 
        "description": "You are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad. \r\n\r\n\r\n\r\nSuppose you have n versions [1, 2, ..., n] and you want to find out the first bad one, which causes all the following ones to be bad.\r\n\r\n\r\n\r\nYou are given an API bool isBadVersion(version) which will return whether version is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Binary Search"
        ], 
        "name": "First Bad Version", 
        "number": 278, 
        "similar_problems": [
            "(M) Search for a Range", 
            " (M) Search Insert Position", 
            " (E) Guess Number Higher or Lower"
        ], 
        "total": 325708
    }, 
    {
        "accepted": 198842, 
        "companies": "Amazon", 
        "description": "Reverse digits of an integer.\r\n\r\n\r\nExample1: x =  123, return  321\r\nExample2: x = -123, return -321\r\n\r\n\r\nclick to show spoilers.\r\n\r\nHave you thought about this?\r\n\r\nHere are some good questions to ask before coding. Bonus points for you if you have already thought through this!\r\n\r\nIf the integer's last digit is 0, what should the output be? ie, cases such as 10, 100.\r\n\r\nDid you notice that the reversed integer might overflow? Assume the input is a 32-bit integer, then the reverse of 1000000003 overflows. How should you handle such cases?\r\n\r\nFor the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.\r\n\r\n\r\nUpdate (2014-11-10):\r\nTest cases had been added to test the overflow behavior.", 
        "difficulty": "Easy", 
        "hints": [
            "Math"
        ], 
        "name": "Reverse Integer", 
        "number": 7, 
        "similar_problems": [
            "(E) String to Integer (atoi)"
        ], 
        "total": 839719
    }, 
    {
        "accepted": 106846, 
        "companies": "Amazon", 
        "description": "Rotate an array of n elements to the right by k steps.\r\nFor example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4]. \r\n\r\nNote:\r\nTry to come up as many solutions as you can, there are at least 3 different ways to solve this problem.\r\n\r\n\r\n[show hint]\r\nHint:\r\nCould you do it in-place with O(1) extra space?\r\n\r\n\r\nRelated problem: Reverse Words in a String II\r\n\r\nCredits:Special thanks to @Freezen for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "Array"
        ], 
        "name": "Rotate Array", 
        "number": 189, 
        "similar_problems": [
            "(M) Rotate List", 
            " (M) Reverse Words in a String II"
        ], 
        "total": 454505
    }, 
    {
        "accepted": 75671, 
        "companies": "Amazon", 
        "description": "Compare two version numbers version1 and version2.\r\nIf version1 &gt; version2 return 1, if version1 &lt; version2 return -1, otherwise return 0.\r\n\r\nYou may assume that the version strings are non-empty and contain only digits and the . character.\r\nThe . character does not represent a decimal point and is used to separate number sequences.\r\nFor instance, 2.5 is not \"two and a half\" or \"half way to version three\", it is the fifth second-level revision of the second first-level revision.\r\n\r\nHere is an example of version numbers ordering:\r\n0.1 &lt; 1.1 &lt; 1.2 &lt; 13.37\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.", 
        "difficulty": "Easy", 
        "hints": [
            "String"
        ], 
        "name": "Compare Version Numbers", 
        "number": 165, 
        "similar_problems": [], 
        "total": 393078
    }, 
    {
        "accepted": 145241, 
        "companies": "Amazon", 
        "description": "Implement atoi to convert a string to an integer.\r\n\r\nHint: Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases.\r\n\r\n\r\nNotes: \r\nIt is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front. \r\n\r\n\r\nUpdate (2015-02-10):\r\nThe signature of the C++ function had been updated. If you still see your function signature accepts a const char * argument, please click the reload button  to reset your code definition.\r\n\r\n\r\nspoilers alert... click to show requirements for atoi.\r\n\r\nRequirements for atoi:\r\n\r\nThe function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.\r\n\r\nThe string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.\r\n\r\nIf the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.\r\n\r\nIf no valid conversion could be performed, a zero value is returned. If the correct value is out of the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648) is returned.", 
        "difficulty": "Easy", 
        "hints": [
            "Math", 
            "String"
        ], 
        "name": "String to Integer (atoi)", 
        "number": 8, 
        "similar_problems": [
            "(E) Reverse Integer", 
            " (H) Valid Number"
        ], 
        "total": 1051556
    }, 
    {
        "accepted": 61215, 
        "companies": "Amazon", 
        "description": "Given a non negative integer number num. For every numbers i in the range 0 &le; i &le; num calculate the number of 1's in their binary representation and return them as an array.\r\n\r\n\r\nExample:\r\nFor num = 5 you should return [0,1,1,2,1,2].\r\n\r\n\r\nFollow up:\r\n\r\nIt is very easy to come up with a solution with run time O(n*sizeof(integer)). But can you do it in linear time O(n) /possibly in a single pass?\r\nSpace complexity should be O(n).\r\nCan you do it like a boss? Do it without using any builtin function like __builtin_popcount  in c++ or in any other language.\r\n\r\n\r\n\r\n\r\n  You should make use of what you have produced already.\r\n  Divide the numbers in ranges like [2-3], [4-7], [8-15] and so on. And try to generate new range from previous.\r\n  Or does the odd/even status of the number help you in calculating the number of 1s?\r\n\r\n\r\nCredits:Special thanks to @ syedee  for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming", 
            "Bit Manipulation"
        ], 
        "name": "Counting Bits", 
        "number": 338, 
        "similar_problems": [
            "(E) Number of 1 Bits"
        ], 
        "total": 102904
    }, 
    {
        "accepted": 11421, 
        "companies": "Amazon", 
        "description": "A sequence of number is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\r\n\r\nFor example, these are arithmetic sequence:\r\n1, 3, 5, 7, 9\r\n7, 7, 7, 7\r\n3, -1, -5, -9\r\n\r\nThe following sequence is not arithmetic. 1, 1, 2, 5, 7 \r\n\r\n\r\nA zero-indexed array A consisting of N numbers is given. A slice of that array is any pair of integers (P, Q) such that 0 <= P < Q < N.\r\n\r\nA slice (P, Q) of array A is called arithmetic if the sequence:\r\n    A[P], A[p + 1], ..., A[Q - 1], A[Q] is arithmetic. In particular, this means that P + 1 < Q.\r\n\r\nThe function should return the number of arithmetic slices in the array A. \r\n\r\n\r\nExample:\r\n\r\nA = [1, 2, 3, 4]\r\n\r\nreturn: 3, for 3 arithmetic slices in A: [1, 2, 3], [2, 3, 4] and [1, 2, 3, 4] itself.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming", 
            "Math"
        ], 
        "name": "Arithmetic Slices", 
        "number": 413, 
        "similar_problems": [
            "(H) Arithmetic Slices II - Subsequence"
        ], 
        "total": 20932
    }, 
    {
        "accepted": 14539, 
        "companies": "Amazon", 
        "description": "Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers (h, k), where h is the height of the person and k is the number of people in front of this person who have a height greater than or equal to h. Write an algorithm to reconstruct the queue.\r\n\r\n\r\nNote:\r\nThe number of people is less than 1,100.\r\n\r\n\r\nExample\r\n\r\nInput:\r\n[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]\r\n\r\nOutput:\r\n[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]", 
        "difficulty": "Medium", 
        "hints": [
            "Greedy"
        ], 
        "name": "Queue Reconstruction by Height", 
        "number": 406, 
        "similar_problems": [
            "(H) Count of Smaller Numbers After Self"
        ], 
        "total": 26705
    }, 
    {
        "accepted": 13773, 
        "companies": "Amazon", 
        "description": "Given a string, sort it in decreasing order based on the frequency of characters.\r\n\r\nExample 1:\r\n\r\nInput:\r\n\"tree\"\r\n\r\nOutput:\r\n\"eert\"\r\n\r\nExplanation:\r\n'e' appears twice while 'r' and 't' both appear once.\r\nSo 'e' must appear before both 'r' and 't'. Therefore \"eetr\" is also a valid answer.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\n\"cccaaa\"\r\n\r\nOutput:\r\n\"cccaaa\"\r\n\r\nExplanation:\r\nBoth 'c' and 'a' appear three times, so \"aaaccc\" is also a valid answer.\r\nNote that \"cacaca\" is incorrect, as the same characters must be together.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput:\r\n\"Aabb\"\r\n\r\nOutput:\r\n\"bbAa\"\r\n\r\nExplanation:\r\n\"bbaA\" is also a valid answer, but \"Aabb\" is incorrect.\r\nNote that 'A' and 'a' are treated as two different characters.", 
        "difficulty": "Medium", 
        "hints": [
            "Hash Table", 
            "Heap"
        ], 
        "name": "Sort Characters By Frequency", 
        "number": 451, 
        "similar_problems": [
            "(M) Top K Frequent Elements"
        ], 
        "total": 27128
    }, 
    {
        "accepted": 7158, 
        "companies": "Amazon", 
        "description": "Given a non-empty integer array, find the minimum number of moves required to make all array elements equal, where a move is incrementing a selected element by 1 or decrementing a selected element by 1.\r\n\r\nYou may assume the array's length is at most 10,000.\r\n\r\nExample:\r\n\r\nInput:\r\n[1,2,3]\r\n\r\nOutput:\r\n2\r\n\r\nExplanation:\r\nOnly two moves are needed (remember each move increments or decrements one element):\r\n\r\n[1,2,3]  =>  [2,2,3]  =>  [2,2,2]", 
        "difficulty": "Medium", 
        "hints": [
            "Math"
        ], 
        "name": "Minimum Moves to Equal Array Elements II", 
        "number": 462, 
        "similar_problems": [
            "(H) Best Meeting Point", 
            " (E) Minimum Moves to Equal Array Elements"
        ], 
        "total": 14115
    }, 
    {
        "accepted": 56893, 
        "companies": "Amazon", 
        "description": "Given an array of numbers nums, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once.\r\n\r\n\r\nFor example:\r\n\r\n\r\nGiven nums = [1, 2, 1, 3, 2, 5], return [3, 5].\r\n\r\n\r\nNote:\r\n\r\nThe order of the result is not important. So in the above example, [5, 3] is also correct.\r\nYour algorithm should run in linear runtime complexity. Could you implement it using only constant space complexity?\r\n\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Bit Manipulation"
        ], 
        "name": "Single Number III", 
        "number": 260, 
        "similar_problems": [
            "(E) Single Number", 
            " (M) Single Number II"
        ], 
        "total": 115496
    }, 
    {
        "accepted": 46341, 
        "companies": "Amazon", 
        "description": "Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.\r\n\r\nThe function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.\r\n\r\nYou may assume that each input would have exactly one solution.\r\n\r\n\r\nInput: numbers={2, 7, 11, 15}, target=9\r\nOutput: index1=1, index2=2", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Two Pointers", 
            "Binary Search"
        ], 
        "name": "Two Sum II - Input array is sorted", 
        "number": 167, 
        "similar_problems": [
            "(E) Two Sum"
        ], 
        "total": 96068
    }, 
    {
        "accepted": 11320, 
        "companies": "Amazon", 
        "description": "Given an array of integers, 1 &le; a[i] &le; n (n = size of array), some elements appear twice and others appear once.\r\n\r\nFind all the elements that appear twice in this array.\r\n\r\nCould you do it without extra space and in O(n) runtime?\r\n\r\nExample:\r\n\r\nInput:\r\n[4,3,2,7,8,2,3,1]\r\n\r\nOutput:\r\n[2,3]", 
        "difficulty": "Medium", 
        "hints": [
            "Array"
        ], 
        "name": "Find All Duplicates in an Array", 
        "number": 442, 
        "similar_problems": [
            "(E) Find All Numbers Disappeared in an Array"
        ], 
        "total": 23491
    }, 
    {
        "accepted": 78317, 
        "companies": "Amazon", 
        "description": "Given an array of n integers where n > 1, nums, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].\r\n\r\nSolve it without division and in O(n).\r\n\r\nFor example, given [1,2,3,4], return [24,12,8,6].\r\n\r\nFollow up:\r\nCould you solve it with constant space complexity? (Note: The output array does not count as extra space for the purpose of space complexity analysis.)", 
        "difficulty": "Medium", 
        "hints": [
            "Array"
        ], 
        "name": "Product of Array Except Self", 
        "number": 238, 
        "similar_problems": [
            "(H) Trapping Rain Water", 
            " (M) Maximum Product Subarray", 
            " (H) Paint House II"
        ], 
        "total": 166317
    }, 
    {
        "accepted": 18921, 
        "companies": "Amazon", 
        "description": "Given a singly linked list, return a random node's value from the linked list. Each node must have the same probability of being chosen.\r\n\r\nFollow up:\r\nWhat if the linked list is extremely large and its length is unknown to you? Could you solve this efficiently without using extra space?\r\n\r\n\r\nExample:\r\n\r\n// Init a singly linked list [1,2,3].\r\nListNode head = new ListNode(1);\r\nhead.next = new ListNode(2);\r\nhead.next.next = new ListNode(3);\r\nSolution solution = new Solution(head);\r\n\r\n// getRandom() should return either 1, 2, or 3 randomly. Each element should have equal probability of returning.\r\nsolution.getRandom();", 
        "difficulty": "Medium", 
        "hints": [
            "Reservoir Sampling"
        ], 
        "name": "Linked List Random Node", 
        "number": 382, 
        "similar_problems": [
            "(M) Random Pick Index"
        ], 
        "total": 40920
    }, 
    {
        "accepted": 8255, 
        "companies": "Amazon", 
        "description": "You are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.\r\n\r\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\r\n\r\nFollow up:\r\nWhat if you cannot modify the input lists? In other words, reversing the lists is not allowed.\r\n\r\n\r\n\r\nExample:\r\n\r\nInput: (7 -> 2 -> 4 -> 3) + (5 -> 6 -> 4)\r\nOutput: 7 -> 8 -> 0 -> 7", 
        "difficulty": "Medium", 
        "hints": [
            "Linked List"
        ], 
        "name": "Add Two Numbers II", 
        "number": 445, 
        "similar_problems": [
            "(M) Add Two Numbers"
        ], 
        "total": 17880
    }, 
    {
        "accepted": 46089, 
        "companies": "Amazon", 
        "description": "Given a non-empty array of integers, return the k most frequent elements.\r\n\r\nFor example,\r\nGiven [1,1,1,2,2,3] and k = 2, return [1,2].\r\n\r\n\r\nNote: \r\n\r\nYou may assume k is always valid, 1 \u2264 k \u2264 number of unique elements.\r\nYour algorithm's time complexity must be better than O(n log n), where n is the array's size.", 
        "difficulty": "Medium", 
        "hints": [
            "Hash Table", 
            "Heap"
        ], 
        "name": "Top K Frequent Elements", 
        "number": 347, 
        "similar_problems": [
            "(M) Word Frequency", 
            " (M) Kth Largest Element in an Array", 
            " (M) Sort Characters By Frequency"
        ], 
        "total": 99957
    }, 
    {
        "accepted": 119401, 
        "companies": "Amazon", 
        "description": "Say you have an array for which the ith element is the price of a given stock on day i.\r\n\r\nDesign an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Greedy"
        ], 
        "name": "Best Time to Buy and Sell Stock II", 
        "number": 122, 
        "similar_problems": [
            "(E) Best Time to Buy and Sell Stock", 
            " (H) Best Time to Buy and Sell Stock III", 
            " (H) Best Time to Buy and Sell Stock IV", 
            " (M) Best Time to Buy and Sell Stock with Cooldown"
        ], 
        "total": 262549
    }, 
    {
        "accepted": 5522, 
        "companies": "Amazon", 
        "description": "The Hamming distance between two integers is the number of positions at which the corresponding bits are different.\r\n\r\nNow your job is to find the total Hamming distance between all pairs of the given numbers.\r\n\r\n\r\nExample:\r\n\r\nInput: 4, 14, 2\r\n\r\nOutput: 6\r\n\r\nExplanation: In binary representation, the 4 is 0100, 14 is 1110, and 2 is 0010 (just\r\nshowing the four bits relevant in this case). So the answer will be:\r\nHammingDistance(4, 14) + HammingDistance(4, 2) + HammingDistance(14, 2) = 2 + 2 + 2 = 6.\r\n\r\n\r\n\r\nNote:\r\n\r\nElements of the given array are in the range of 0  to 10^9\r\nLength of the array will not exceed 10^4.", 
        "difficulty": "Medium", 
        "hints": [
            "Bit Manipulation"
        ], 
        "name": "Total Hamming Distance", 
        "number": 477, 
        "similar_problems": [
            "(E) Hamming Distance"
        ], 
        "total": 12212
    }, 
    {
        "accepted": 25527, 
        "companies": "Amazon", 
        "description": "Given a non-negative integer n, count all numbers with unique digits, x, where 0 &le; x &lt; 10n.\r\n\r\n\r\n    Example:\r\nGiven n = 2, return 91. (The answer should be the total numbers in the range of 0 &le; x &lt; 100, excluding [11,22,33,44,55,66,77,88,99])\r\n\r\n\r\n\r\n  A direct way is to use the backtracking approach.\r\n  Backtracking should contains three states which are (the current number, number of steps to get that number and a bitmask which represent which number is marked as visited so far in the current number). Start with state (0,0,0) and count all valid number till we reach number of steps equals to 10n.\r\n  This problem can also be solved using a dynamic programming approach and some knowledge of combinatorics.\r\n  Let f(k) = count of numbers with unique digits with length equals k.\r\n  f(1) = 10, ..., f(k) = 9 * 9 * 8 * ... (9 - k + 2) [The first factor is 9 because a number cannot start with 0].\r\n\r\n\r\nCredits:Special thanks to @memoryless for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming", 
            "Backtracking", 
            "Math"
        ], 
        "name": "Count Numbers with Unique Digits", 
        "number": 357, 
        "similar_problems": [], 
        "total": 56568
    }, 
    {
        "accepted": 34320, 
        "companies": "Amazon", 
        "description": "Given a positive integer n, break it into the sum of at least two positive integers and maximize the product of those integers. Return the maximum product you can get.\r\n\r\n\r\n\r\nFor example, given n = 2, return 1 (2 = 1 + 1); given n = 10, return 36 (10 = 3 + 3 + 4).\r\n\r\n\r\n\r\nNote: You may assume that n is not less than 2 and not larger than 58.\r\n\r\n\r\n\r\n  There is a simple O(n) solution to this problem.\r\n  You may check the breaking results of n ranging from 7 to 10 to discover the regularities.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming", 
            "Math"
        ], 
        "name": "Integer Break", 
        "number": 343, 
        "similar_problems": [], 
        "total": 76470
    }, 
    {
        "accepted": 21441, 
        "companies": "Amazon", 
        "description": "Given a string s and a string t, check if s is subsequence of t.\r\n\r\n\r\n\r\nYou may assume that there is only lower case English letters in both s and t. t is potentially a very long (length ~= 500,000) string, and s is a short string (<=100).\r\n\r\n\r\n\r\nA subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, \"ace\" is a subsequence of \"abcde\" while \"aec\" is not).\r\n\r\n\r\nExample 1:\r\ns = \"abc\", t = \"ahbgdc\"\r\n\r\n\r\nReturn true.\r\n\r\n\r\nExample 2:\r\ns = \"axc\", t = \"ahbgdc\"\r\n\r\n\r\nReturn false.\r\n\r\n\r\nFollow up:\r\nIf there are lots of incoming S, say S1, S2, ... , Sk where k >= 1B, and you want to check one by one to see if T has its subsequence. In this scenario, how would you change your code?\r\n\r\nCredits:Special thanks to @pbrother for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Binary Search", 
            "Dynamic Programming", 
            "Greedy"
        ], 
        "name": "Is Subsequence", 
        "number": 392, 
        "similar_problems": [], 
        "total": 48601
    }, 
    {
        "accepted": 171528, 
        "companies": "Amazon", 
        "description": "Given a binary tree, return the inorder traversal of its nodes' values.\r\n\r\n\r\nFor example:\r\nGiven binary tree [1,null,2,3],\r\n\r\n   1\r\n    \\\r\n     2\r\n    /\r\n   3\r\n\r\n\r\n\r\nreturn [1,3,2].\r\n\r\n\r\nNote: Recursive solution is trivial, could you do it iteratively?", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Hash Table", 
            "Stack"
        ], 
        "name": "Binary Tree Inorder Traversal", 
        "number": 94, 
        "similar_problems": [
            "(M) Validate Binary Search Tree", 
            " (M) Binary Tree Preorder Traversal", 
            " (H) Binary Tree Postorder Traversal", 
            " (M) Binary Search Tree Iterator", 
            " (M) Kth Smallest Element in a BST", 
            " (H) Closest Binary Search Tree Value II", 
            " (M) Inorder Successor in BST"
        ], 
        "total": 391323
    }, 
    {
        "accepted": 86804, 
        "companies": "Amazon", 
        "description": "Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing from the array.\r\n\r\n\r\nFor example,\r\nGiven nums = [0, 1, 3] return 2.\r\n\r\n\r\n\r\nNote:\r\nYour algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Math", 
            "Bit Manipulation"
        ], 
        "name": "Missing Number", 
        "number": 268, 
        "similar_problems": [
            "(H) First Missing Positive", 
            " (E) Single Number", 
            " (H) Find the Duplicate Number"
        ], 
        "total": 199248
    }, 
    {
        "accepted": 5916, 
        "companies": "Amazon", 
        "description": "Given four lists A, B, C, D of integer values, compute how many tuples (i, j, k, l) there are such that A[i] + B[j] + C[k] + D[l] is zero.\r\n\r\nTo make problem a bit easier, all A, B, C, D have same length of N where 0 &le; N &le; 500. All integers are in the range of -228 to 228 - 1 and the result is guaranteed to be at most 231 - 1.\r\n\r\nExample:\r\n\r\nInput:\r\nA = [ 1, 2]\r\nB = [-2,-1]\r\nC = [-1, 2]\r\nD = [ 0, 2]\r\n\r\nOutput:\r\n2\r\n\r\nExplanation:\r\nThe two tuples are:\r\n1. (0, 0, 0, 1) -> A[0] + B[0] + C[0] + D[1] = 1 + (-2) + (-1) + 2 = 0\r\n2. (1, 1, 0, 0) -> A[1] + B[1] + C[0] + D[0] = 2 + (-1) + (-1) + 0 = 0", 
        "difficulty": "Medium", 
        "hints": [
            "Binary Search", 
            "Hash Table"
        ], 
        "name": "4Sum II", 
        "number": 454, 
        "similar_problems": [
            "(M) 4Sum"
        ], 
        "total": 13627
    }, 
    {
        "accepted": 24765, 
        "companies": "Amazon", 
        "description": "Given a n x n matrix where each of the rows and columns are sorted in ascending order, find the kth smallest element in the matrix.\r\n\r\n\r\nNote that it is the kth smallest element in the sorted order, not the kth distinct element.\r\n\r\n\r\nExample:\r\n\r\nmatrix = [\r\n   [ 1,  5,  9],\r\n   [10, 11, 13],\r\n   [12, 13, 15]\r\n],\r\nk = 8,\r\n\r\nreturn 13.\r\n\r\n\r\n\r\nNote: \r\nYou may assume k is always valid, 1 \u2264 k \u2264 n2.", 
        "difficulty": "Medium", 
        "hints": [
            "Binary Search", 
            "Heap"
        ], 
        "name": "Kth Smallest Element in a Sorted Matrix", 
        "number": 378, 
        "similar_problems": [
            "(M) Find K Pairs with Smallest Sums"
        ], 
        "total": 57091
    }, 
    {
        "accepted": 158719, 
        "companies": "Amazon", 
        "description": "Given a binary tree, return the preorder traversal of its nodes' values.\r\n\r\n\r\nFor example:\r\nGiven binary tree {1,#,2,3},\r\n\r\n   1\r\n    \\\r\n     2\r\n    /\r\n   3\r\n\r\n\r\n\r\nreturn [1,2,3].\r\n\r\n\r\nNote: Recursive solution is trivial, could you do it iteratively?", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Stack"
        ], 
        "name": "Binary Tree Preorder Traversal", 
        "number": 144, 
        "similar_problems": [
            "(M) Binary Tree Inorder Traversal", 
            " (M) Verify Preorder Sequence in Binary Search Tree"
        ], 
        "total": 368363
    }, 
    {
        "accepted": 90064, 
        "companies": "Amazon", 
        "description": "Given an integer, convert it to a roman numeral.\r\n\r\n\r\nInput is guaranteed to be within the range from 1 to 3999.", 
        "difficulty": "Medium", 
        "hints": [
            "Math", 
            "String"
        ], 
        "name": "Integer to Roman", 
        "number": 12, 
        "similar_problems": [
            "(E) Roman to Integer", 
            " (H) Integer to English Words"
        ], 
        "total": 210241
    }, 
    {
        "accepted": 6093, 
        "companies": "Amazon", 
        "description": "Given a non-empty string containing an out-of-order English representation of digits 0-9, output the digits in ascending order.\r\n\r\nNote:\r\n\r\nInput contains only lowercase English letters.\r\nInput is guaranteed to be valid and can be transformed to its original digits. That means invalid inputs such as \"abc\" or \"zerone\" are not permitted.\r\nInput length is less than 50,000.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"owoztneoer\"\r\n\r\nOutput: \"012\"\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"fviefuro\"\r\n\r\nOutput: \"45\"", 
        "difficulty": "Medium", 
        "hints": [
            "Math"
        ], 
        "name": "Reconstruct Original Digits from English", 
        "number": 423, 
        "similar_problems": [], 
        "total": 14292
    }, 
    {
        "accepted": 4456, 
        "companies": "Amazon", 
        "description": "Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment. \r\n\r\nDesign an algorithm to serialize and deserialize a binary search tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary search tree can be serialized to a string and this string can be deserialized to the original tree structure.\r\n\r\n\r\nThe encoded string should be as compact as possible.\r\n\r\n\r\n\r\nNote: Do not use class member/global/static variables to store states. Your serialize and deserialize algorithms should be stateless.", 
        "difficulty": "Medium", 
        "hints": [
            "Tree"
        ], 
        "name": "Serialize and Deserialize BST", 
        "number": 449, 
        "similar_problems": [
            "(H) Serialize and Deserialize Binary Tree"
        ], 
        "total": 10486
    }, 
    {
        "accepted": 6925, 
        "companies": "Amazon", 
        "description": "Given a non-empty array of numbers, a0, a1, a2, \u2026 , an-1, where 0 &le; ai < 231.\r\n\r\nFind the maximum result of ai XOR aj, where 0 &le; i, j &lt; n.\r\n\r\nCould you do this in O(n) runtime?\r\n\r\nExample:\r\n\r\nInput: [3, 10, 5, 25, 2, 8]\r\n\r\nOutput: 28\r\n\r\nExplanation: The maximum result is 5 ^ 25 = 28.", 
        "difficulty": "Medium", 
        "hints": [
            "Bit Manipulation", 
            "Trie"
        ], 
        "name": "Maximum XOR of Two Numbers in an Array", 
        "number": 421, 
        "similar_problems": [], 
        "total": 16314
    }, 
    {
        "accepted": 41554, 
        "companies": "Amazon", 
        "description": "Given a string array words, find the maximum value of length(word[i]) * length(word[j]) where the two words do not share common letters.\r\n    You may assume that each word will contain only lower case letters.\r\n    If no such two words exist, return 0.\r\n\r\n\r\n\r\n    Example 1:\r\n\r\n\r\n    Given [\"abcw\", \"baz\", \"foo\", \"bar\", \"xtfn\", \"abcdef\"]\r\n    Return 16\r\n    The two words can be \"abcw\", \"xtfn\".\r\n\r\n\r\n    Example 2:\r\n\r\n\r\n    Given [\"a\", \"ab\", \"abc\", \"d\", \"cd\", \"bcd\", \"abcd\"]\r\n    Return 4\r\n    The two words can be \"ab\", \"cd\".\r\n\r\n\r\n    Example 3:\r\n\r\n\r\n    Given [\"a\", \"aa\", \"aaa\", \"aaaa\"]\r\n    Return 0\r\n    No such pair of words.    \r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Bit Manipulation"
        ], 
        "name": "Maximum Product of Word Lengths", 
        "number": 318, 
        "similar_problems": [], 
        "total": 98343
    }, 
    {
        "accepted": 5738, 
        "companies": "Amazon", 
        "description": "There are a number of spherical balloons spread in two-dimensional space. For each balloon, provided input is the start and end coordinates of the horizontal diameter. Since it's horizontal, y-coordinates don't matter and hence the x-coordinates of start and end of the diameter suffice. Start is always smaller than end. There will be at most 104 balloons.\r\n\r\nAn arrow can be shot up exactly vertically from different points along the x-axis. A balloon with xstart and xend bursts by an arrow shot at x if xstart &le; x &le; xend. There is no limit to the number of arrows that can be shot. An arrow once shot keeps travelling up infinitely. The problem is to find the minimum number of arrows that must be shot to burst all balloons. \r\n\r\nExample:\r\n\r\nInput:\r\n[[10,16], [2,8], [1,6], [7,12]]\r\n\r\nOutput:\r\n2\r\n\r\nExplanation:\r\nOne way is to shoot one arrow for example at x = 6 (bursting the balloons [2,8] and [1,6]) and another arrow at x = 11 (bursting the other two balloons).", 
        "difficulty": "Medium", 
        "hints": [
            "Greedy"
        ], 
        "name": "Minimum Number of Arrows to Burst Balloons", 
        "number": 452, 
        "similar_problems": [
            "(M) Meeting Rooms II", 
            " (M) Non-overlapping Intervals"
        ], 
        "total": 13621
    }, 
    {
        "accepted": 80673, 
        "companies": "Amazon", 
        "description": "Given a binary search tree, write a function kthSmallest to find the kth smallest element in it.\r\n\r\nNote: \r\nYou may assume k is always valid, 1 \u2264 k \u2264 BST's total elements.\r\n\r\nFollow up:\r\nWhat if the BST is modified (insert/delete operations) often and you need to find the kth smallest frequently? How would you optimize the kthSmallest routine?\r\n\r\n\r\n  Try to utilize the property of a BST.\r\n  What if you could modify the BST node's structure?\r\n  The optimal runtime complexity is O(height of BST).\r\n\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Binary Search", 
            "Tree"
        ], 
        "name": "Kth Smallest Element in a BST", 
        "number": 230, 
        "similar_problems": [
            "(M) Binary Tree Inorder Traversal"
        ], 
        "total": 191931
    }, 
    {
        "accepted": 55233, 
        "companies": "Amazon", 
        "description": "Find all possible combinations of k numbers that add up to a number n, given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers.\r\n\r\n\r\n\r\n Example 1:\r\nInput:  k = 3,  n = 7\r\nOutput: \r\n\r\n[[1,2,4]]\r\n\r\n\r\n Example 2:\r\nInput:  k = 3,  n = 9\r\nOutput: \r\n\r\n[[1,2,6], [1,3,5], [2,3,4]]\r\n\r\n\r\n\r\nCredits:Special thanks to @mithmatt for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Backtracking"
        ], 
        "name": "Combination Sum III", 
        "number": 216, 
        "similar_problems": [
            "(M) Combination Sum"
        ], 
        "total": 131499
    }, 
    {
        "accepted": 124404, 
        "companies": "Amazon", 
        "description": "Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.\r\n\r\n\r\n\r\nFor example, given n = 3, a solution set is:\r\n\r\n\r\n[\r\n  \"((()))\",\r\n  \"(()())\",\r\n  \"(())()\",\r\n  \"()(())\",\r\n  \"()()()\"\r\n]", 
        "difficulty": "Medium", 
        "hints": [
            "Backtracking", 
            "String"
        ], 
        "name": "Generate Parentheses", 
        "number": 22, 
        "similar_problems": [
            "(M) Letter Combinations of a Phone Number", 
            " (E) Valid Parentheses"
        ], 
        "total": 297039
    }, 
    {
        "accepted": 33834, 
        "companies": "Amazon", 
        "description": "There are n bulbs that are initially off. You first turn on all the bulbs. Then, you turn off every second bulb. On the third round, you toggle every third bulb (turning on if it's off or turning off if it's on). For the ith round, you toggle every i bulb. For the nth round, you only toggle the last bulb.\r\n\r\nFind how many bulbs are on after n rounds.\r\n\r\n\r\n\r\nExample:\r\n\r\nGiven n = 3. \r\nAt first, the three bulbs are [off, off, off].\r\nAfter first round, the three bulbs are [on, on, on].\r\nAfter second round, the three bulbs are [on, off, on].\r\nAfter third round, the three bulbs are [on, off, off]. \r\nSo you should return 1, because there is only one bulb is on.", 
        "difficulty": "Medium", 
        "hints": [
            "Math", 
            "Brainteaser"
        ], 
        "name": "Bulb Switcher", 
        "number": 319, 
        "similar_problems": [], 
        "total": 80810
    }, 
    {
        "accepted": 6049, 
        "companies": "Amazon", 
        "description": "Given a set of intervals, for each of the interval i, check if there exists an interval j whose start point is bigger than or equal to the end point of the interval i, which can be called that j is on the \"right\" of i.\r\n\r\n\r\n\r\nFor any interval i, you need to store the minimum interval j's index, which means that the interval j has the minimum start point to build the \"right\" relationship for interval i. If the interval j doesn't exist, store -1 for the interval i. Finally, you need output the stored value of each interval as an array.\r\n\r\n\r\nNote:\r\n\r\nYou may assume the interval's end point is always bigger than its start point.\r\nYou may assume none of these intervals have the same start point.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: [ [1,2] ]\r\n\r\nOutput: [-1]\r\n\r\nExplanation: There is only one interval in the collection, so it outputs -1.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [ [3,4], [2,3], [1,2] ]\r\n\r\nOutput: [-1, 0, 1]\r\n\r\nExplanation: There is no satisfied \"right\" interval for [3,4].\r\nFor [2,3], the interval [3,4] has minimum-\"right\" start point;\r\nFor [1,2], the interval [2,3] has minimum-\"right\" start point.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: [ [1,4], [2,3], [3,4] ]\r\n\r\nOutput: [-1, 2, -1]\r\n\r\nExplanation: There is no satisfied \"right\" interval for [1,4] and [3,4].\r\nFor [2,3], the interval [3,4] has minimum-\"right\" start point.", 
        "difficulty": "Medium", 
        "hints": [
            "Binary Search"
        ], 
        "name": "Find Right Interval", 
        "number": 436, 
        "similar_problems": [
            "(H) Data Stream as Disjoint Intervals"
        ], 
        "total": 14469
    }, 
    {
        "accepted": 54760, 
        "companies": "Amazon", 
        "description": "Given a singly linked list, group all odd nodes together followed by the even nodes. Please note here we are talking about the node number and not the value in the nodes.\r\n\r\nYou should try to do it in place. The program should run in O(1) space complexity and O(nodes) time complexity.\r\n\r\n\r\nExample:\r\nGiven 1->2->3->4->5->NULL,\r\nreturn 1->3->5->2->4->NULL.\r\n\r\n\r\nNote:\r\nThe relative order inside both the even and odd groups should remain as it was in the input. \r\nThe first node is considered odd, the second node even and so on ...\r\n\r\n\r\nCredits:Special thanks to @DjangoUnchained for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Linked List"
        ], 
        "name": "Odd Even Linked List", 
        "number": 328, 
        "similar_problems": [], 
        "total": 131046
    }, 
    {
        "accepted": 24495, 
        "companies": "Amazon", 
        "description": "Given an integer array with all positive numbers and no duplicates, find the number of possible combinations that add up to a positive integer target.\r\n\r\nExample:\r\n\r\nnums = [1, 2, 3]\r\ntarget = 4\r\n\r\nThe possible combination ways are:\r\n(1, 1, 1, 1)\r\n(1, 1, 2)\r\n(1, 2, 1)\r\n(1, 3)\r\n(2, 1, 1)\r\n(2, 2)\r\n(3, 1)\r\n\r\nNote that different sequences are counted as different combinations.\r\n\r\nTherefore the output is 7.\r\n\r\n\r\n\r\nFollow up:\r\nWhat if negative numbers are allowed in the given array?\r\nHow does it change the problem?\r\nWhat limitation we need to add to the question to allow negative numbers? \r\n\r\nCredits:Special thanks to @pbrother for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Combination Sum IV", 
        "number": 377, 
        "similar_problems": [
            "(M) Combination Sum"
        ], 
        "total": 58877
    }, 
    {
        "accepted": 33643, 
        "companies": "Amazon", 
        "description": "The thief has found himself a new place for his thievery again. There is only one entrance to this area, called the \"root.\" Besides the root, each house has one and only one parent house. After a tour, the smart thief realized that \"all houses in this place forms a binary tree\". It will automatically contact the police if two directly-linked houses were broken into on the same night.\r\n\r\n\r\n\r\nDetermine the maximum amount of money the thief can rob tonight without alerting the police.\r\n\r\n\r\nExample 1:\r\n\r\n     3\r\n    / \\\r\n   2   3\r\n    \\   \\ \r\n     3   1\r\n\r\nMaximum amount of money the thief can rob = 3 + 3 + 1 = 7.\r\n\r\n\r\nExample 2:\r\n\r\n     3\r\n    / \\\r\n   4   5\r\n  / \\   \\ \r\n 1   3   1\r\n\r\nMaximum amount of money the thief can rob = 4 + 5 = 9.\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "House Robber III", 
        "number": 337, 
        "similar_problems": [
            "(E) House Robber", 
            " (M) House Robber II"
        ], 
        "total": 80994
    }, 
    {
        "accepted": 36788, 
        "companies": "Amazon", 
        "description": "Given a string of numbers and operators, return all possible results from computing all the different possible ways to group numbers and operators. The valid operators are +, - and *.\r\n\r\nExample 1\r\nInput: \"2-1-1\". \r\n((2-1)-1) = 0\r\n(2-(1-1)) = 2\r\nOutput: [0, 2]\r\n\r\nExample 2\r\nInput: \"2*3-4*5\" \r\n(2*(3-(4*5))) = -34\r\n((2*3)-(4*5)) = -14\r\n((2*(3-4))*5) = -10\r\n(2*((3-4)*5)) = -10\r\n(((2*3)-4)*5) = 10\r\nOutput: [-34, -14, -10, -10, 10] \r\n\r\nCredits:Special thanks to @mithmatt for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Divide and Conquer"
        ], 
        "name": "Different Ways to Add Parentheses", 
        "number": 241, 
        "similar_problems": [
            "(M) Unique Binary Search Trees II", 
            " (H) Basic Calculator", 
            " (H) Expression Add Operators"
        ], 
        "total": 89045
    }, 
    {
        "accepted": 140291, 
        "companies": "Amazon", 
        "description": "Given a collection of distinct numbers, return all possible permutations.\r\n\r\n\r\n\r\nFor example,\r\n[1,2,3] have the following permutations:\r\n\r\n[\r\n  [1,2,3],\r\n  [1,3,2],\r\n  [2,1,3],\r\n  [2,3,1],\r\n  [3,1,2],\r\n  [3,2,1]\r\n]", 
        "difficulty": "Medium", 
        "hints": [
            "Backtracking"
        ], 
        "name": "Permutations", 
        "number": 46, 
        "similar_problems": [
            "(M) Next Permutation", 
            " (M) Permutations II", 
            " (M) Permutation Sequence", 
            " (M) Combinations"
        ], 
        "total": 346771
    }, 
    {
        "accepted": 6555, 
        "companies": "Amazon", 
        "description": "Given a string that consists of only uppercase English letters, you can replace any letter in the string with another letter at most k times. Find the length of a longest substring containing all repeating letters you can get after performing the above operations.\r\n\r\nNote:\r\nBoth the string's length and k will not exceed 104.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\ns = \"ABAB\", k = 2\r\n\r\nOutput:\r\n4\r\n\r\nExplanation:\r\nReplace the two 'A's with two 'B's or vice versa.\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\ns = \"AABABBA\", k = 1\r\n\r\nOutput:\r\n4\r\n\r\nExplanation:\r\nReplace the one 'A' in the middle with 'B' and form \"AABBBBA\".\r\nThe substring \"BBBB\" has the longest repeating letters, which is 4.", 
        "difficulty": "Medium", 
        "hints": [
            "(H) Longest Substring with At Most K Distinct Characters"
        ], 
        "name": "Longest Repeating Character Replacement", 
        "number": 424, 
        "similar_problems": [], 
        "total": 16227
    }, 
    {
        "accepted": 101660, 
        "companies": "Amazon", 
        "description": "Given an array where elements are sorted in ascending order, convert it to a height balanced BST.", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "Convert Sorted Array to Binary Search Tree", 
        "number": 108, 
        "similar_problems": [
            "(M) Convert Sorted List to Binary Search Tree"
        ], 
        "total": 251603
    }, 
    {
        "accepted": 18657, 
        "companies": "Amazon", 
        "description": "Given an encoded string, return it's decoded string.\r\n\r\n\r\nThe encoding rule is: k[encoded_string], where the encoded_string inside the square brackets is being repeated exactly k times. Note that k is guaranteed to be a positive integer.\r\n\r\n\r\nYou may assume that the input string is always valid; No extra white spaces, square brackets are well-formed, etc.\r\n\r\nFurthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, k. For example, there won't be input like 3a or 2[4].\r\n\r\n\r\nExamples:\r\n\r\ns = \"3[a]2[bc]\", return \"aaabcbc\".\r\ns = \"3[a2[c]]\", return \"accaccacc\".\r\ns = \"2[abc]3[cd]ef\", return \"abcabccdcdcdef\".", 
        "difficulty": "Medium", 
        "hints": [
            "Depth-first Search", 
            "Stack"
        ], 
        "name": "Decode String", 
        "number": 394, 
        "similar_problems": [
            "(H) Encode String with Shortest Length"
        ], 
        "total": 46313
    }, 
    {
        "accepted": 106000, 
        "companies": "Amazon", 
        "description": "Given an array of integers, every element appears three times except for one, which appears exactly once. Find that single one.\r\n\r\n\r\n\r\nNote:\r\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?", 
        "difficulty": "Medium", 
        "hints": [
            "Bit Manipulation"
        ], 
        "name": "Single Number II", 
        "number": 137, 
        "similar_problems": [
            "(E) Single Number", 
            " (M) Single Number III"
        ], 
        "total": 263781
    }, 
    {
        "accepted": 5920, 
        "companies": "Amazon", 
        "description": "Given a collection of intervals, find the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.\r\n\r\n\r\nNote:\r\n\r\nYou may assume the interval's end point is always bigger than its start point.\r\nIntervals like [1,2] and [2,3] have borders \"touching\" but they don't overlap each other.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: [ [1,2], [2,3], [3,4], [1,3] ]\r\n\r\nOutput: 1\r\n\r\nExplanation: [1,3] can be removed and the rest of intervals are non-overlapping.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [ [1,2], [1,2], [1,2] ]\r\n\r\nOutput: 2\r\n\r\nExplanation: You need to remove two [1,2] to make the rest of intervals non-overlapping.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: [ [1,2], [2,3] ]\r\n\r\nOutput: 0\r\n\r\nExplanation: You don't need to remove any of the intervals since they're already non-overlapping.", 
        "difficulty": "Medium", 
        "hints": [
            "Greedy"
        ], 
        "name": "Non-overlapping Intervals", 
        "number": 435, 
        "similar_problems": [
            "(M) Minimum Number of Arrows to Burst Balloons"
        ], 
        "total": 14770
    }, 
    {
        "accepted": 9757, 
        "companies": "Amazon", 
        "description": "Equations are given in the format A / B = k, where  A and B are variables represented as strings, and k is a real number (floating point number). Given some queries, return the answers. If the answer does not exist, return -1.0.\r\n\r\nExample:\r\nGiven  a / b = 2.0, b / c = 3.0. queries are:  a / c = ?,  b / a = ?, a / e = ?,  a / a = ?, x / x = ? . return  [6.0, 0.5, -1.0, 1.0, -1.0 ].\r\n\r\n\r\nThe input is:  vector&lt;pair&lt;string, string&gt;&gt; equations, vector&lt;double&gt;&amp; values, vector&lt;pair&lt;string, string&gt;&gt; queries , where equations.size() == values.size(), and the values are positive. This represents the equations. Return  vector&lt;double&gt;.\r\n\r\n\r\nAccording to the example above:\r\nequations = [ [\"a\", \"b\"], [\"b\", \"c\"] ],\r\nvalues = [2.0, 3.0],\r\nqueries = [ [\"a\", \"c\"], [\"b\", \"a\"], [\"a\", \"e\"], [\"a\", \"a\"], [\"x\", \"x\"] ]. \r\n\r\n\r\n\r\nThe input is always valid. You may assume that evaluating the queries will result in no division by zero and there is no contradiction.", 
        "difficulty": "Medium", 
        "hints": [
            "Graph"
        ], 
        "name": "Evaluate Division", 
        "number": 399, 
        "similar_problems": [], 
        "total": 24379
    }, 
    {
        "accepted": 11996, 
        "companies": "Amazon", 
        "description": "Given an array of integers with possible duplicates, randomly output the index of a given target number. You can assume that the given target number must exist in the array.\r\n\r\n\r\n\r\nNote:\r\nThe array size can be very large. Solution that uses too much extra space will not pass the judge.\r\n\r\n\r\nExample:\r\n\r\nint[] nums = new int[] {1,2,3,3,3};\r\nSolution solution = new Solution(nums);\r\n\r\n// pick(3) should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.\r\nsolution.pick(3);\r\n\r\n// pick(1) should return 0. Since in the array only nums[0] is equal to 1.\r\nsolution.pick(1);", 
        "difficulty": "Medium", 
        "hints": [
            "Reservoir Sampling"
        ], 
        "name": "Random Pick Index", 
        "number": 398, 
        "similar_problems": [
            "(M) Linked List Random Node"
        ], 
        "total": 30010
    }, 
    {
        "accepted": 107208, 
        "companies": "Amazon", 
        "description": "Given n, how many structurally unique BST's (binary search trees) that store values 1...n?\r\n\r\n\r\nFor example,\r\nGiven n = 3, there are a total of 5 unique BST's.\r\n\r\n\r\n   1         3     3      2      1\r\n    \\       /     /      / \\      \\\r\n     3     2     1      1   3      2\r\n    /     /       \\                 \\\r\n   2     1         2                 3", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Dynamic Programming"
        ], 
        "name": "Unique Binary Search Trees", 
        "number": 96, 
        "similar_problems": [
            "(M) Unique Binary Search Trees II"
        ], 
        "total": 269345
    }, 
    {
        "accepted": 33149, 
        "companies": "Amazon", 
        "description": "Say you have an array for which the ith element is the price of a given stock on day i.\r\n\r\nDesign an algorithm to find the maximum profit. You may complete as many transactions as you like\r\n(ie, buy one and sell one share of the stock multiple times) with the following restrictions:\r\n\r\n\r\n    You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).\r\n    After you sell your stock, you cannot buy stock on next day. (ie, cooldown 1 day)\r\n\r\n\r\nExample:\r\n\r\nprices = [1, 2, 3, 0, 2]\r\nmaxProfit = 3\r\ntransactions = [buy, sell, cooldown, buy, sell]\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Best Time to Buy and Sell Stock with Cooldown", 
        "number": 309, 
        "similar_problems": [
            "(E) Best Time to Buy and Sell Stock", 
            " (M) Best Time to Buy and Sell Stock II"
        ], 
        "total": 83392
    }, 
    {
        "accepted": 78817, 
        "companies": "Amazon", 
        "description": "The gray code is a binary numeral system where two successive values differ in only one bit.\r\n\r\nGiven a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.\r\n\r\nFor example, given n = 2, return [0,1,3,2]. Its gray code sequence is:\r\n\r\n00 - 0\r\n01 - 1\r\n11 - 3\r\n10 - 2\r\n\r\n\r\nNote:\r\nFor a given n, a gray code sequence is not uniquely defined.\r\n\r\nFor example, [0,2,3,1] is also a valid gray code sequence according to the above definition.\r\n\r\nFor now, the judge is able to judge based on one instance of gray code sequence. Sorry about that.", 
        "difficulty": "Medium", 
        "hints": [
            "Backtracking"
        ], 
        "name": "Gray Code", 
        "number": 89, 
        "similar_problems": [], 
        "total": 200225
    }, 
    {
        "accepted": 119400, 
        "companies": "Amazon", 
        "description": "A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\r\n\r\nThe robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).\r\n\r\nHow many possible unique paths are there?\r\n\r\n\r\n\r\nAbove is a 3 x 7 grid. How many possible unique paths are there?\r\n\r\n\r\nNote: m and n will be at most 100.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Dynamic Programming"
        ], 
        "name": "Unique Paths", 
        "number": 62, 
        "similar_problems": [
            "(M) Unique Paths II", 
            " (M) Minimum Path Sum", 
            " (H) Dungeon Game"
        ], 
        "total": 304245
    }, 
    {
        "accepted": 74580, 
        "companies": "Amazon", 
        "description": "Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.\r\n\r\nCalling next() will return the next smallest number in the BST.\r\n\r\nNote: next() and hasNext() should run in average O(1) time and uses O(h) memory, where h is the height of the tree. \r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Stack", 
            "Design"
        ], 
        "name": "Binary Search Tree Iterator", 
        "number": 173, 
        "similar_problems": [
            "(M) Binary Tree Inorder Traversal", 
            " (M) Flatten 2D Vector", 
            " (M) Zigzag Iterator", 
            " (M) Peeking Iterator", 
            " (M) Inorder Successor in BST"
        ], 
        "total": 191108
    }, 
    {
        "accepted": 138788, 
        "companies": "Amazon", 
        "description": "Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.\r\n\r\nYou may assume no duplicates in the array.\r\n\r\n\r\nHere are few examples.\r\n[1,3,5,6], 5 &#8594; 2\r\n[1,3,5,6], 2 &#8594; 1\r\n[1,3,5,6], 7 &#8594; 4\r\n[1,3,5,6], 0 &#8594; 0", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Binary Search"
        ], 
        "name": "Search Insert Position", 
        "number": 35, 
        "similar_problems": [
            "(E) First Bad Version"
        ], 
        "total": 356265
    }, 
    {
        "accepted": 26379, 
        "companies": "Amazon", 
        "description": "Given a nested list of integers, implement an iterator to flatten it.\r\n\r\nEach element is either an integer, or a list -- whose elements may also be integers or other lists.\r\n\r\nExample 1:\r\nGiven the list [[1,1],2,[1,1]],\r\n\r\nBy calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,1,2,1,1].\r\n\r\n\r\n\r\nExample 2:\r\nGiven the list [1,[4,[6]]],\r\n\r\nBy calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,4,6].", 
        "difficulty": "Medium", 
        "hints": [
            "Stack", 
            "Design"
        ], 
        "name": "Flatten Nested List Iterator", 
        "number": 341, 
        "similar_problems": [
            "(M) Flatten 2D Vector", 
            " (M) Zigzag Iterator", 
            " (M) Mini Parser"
        ], 
        "total": 68035
    }, 
    {
        "accepted": 159374, 
        "companies": "Amazon", 
        "description": "Find the contiguous subarray within an array (containing at least one number) which has the largest sum.\r\n\r\n\r\nFor example, given the array [-2,1,-3,4,-1,2,1,-5,4],\r\nthe contiguous subarray [4,-1,2,1] has the largest sum = 6.\r\n\r\n\r\nclick to show more practice.\r\n\r\nMore practice:\r\n\r\nIf you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Dynamic Programming", 
            "Divide and Conquer"
        ], 
        "name": "Maximum Subarray", 
        "number": 53, 
        "similar_problems": [
            "(E) Best Time to Buy and Sell Stock", 
            " (M) Maximum Product Subarray"
        ], 
        "total": 411135
    }, 
    {
        "accepted": 66100, 
        "companies": "Amazon", 
        "description": "Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.\r\n\r\n\r\nFor example:\r\nGiven the following binary tree,\r\n\r\n   1            <---\r\n /   \\\r\n2     3         <---\r\n \\     \\\r\n  5     4       <---\r\n\r\n\r\n\r\nYou should return [1, 3, 4].\r\n\r\n\r\nCredits:Special thanks to @amrsaqr for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "                    ", 
            "                    Depth-first Search", 
            "                    ", 
            "                    Breadth-first Search"
        ], 
        "name": "Binary Tree Right Side View", 
        "number": 199, 
        "similar_problems": [
            "(M) Populating Next Right Pointers in Each Node"
        ], 
        "total": 170730
    }, 
    {
        "accepted": 128301, 
        "companies": "Amazon", 
        "description": "Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\r\n\r\n(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).\r\n\r\nFind the minimum element.\r\n\r\nYou may assume no duplicate exists in the array.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Binary Search"
        ], 
        "name": "Find Minimum in Rotated Sorted Array", 
        "number": 153, 
        "similar_problems": [
            "(H) Search in Rotated Sorted Array", 
            " (H) Find Minimum in Rotated Sorted Array II"
        ], 
        "total": 332197
    }, 
    {
        "accepted": 70976, 
        "companies": "Amazon", 
        "description": "Given an integer n, generate a square matrix filled with elements from 1 to n2 in spiral order.\r\n\r\n\r\nFor example,\r\nGiven n = 3,\r\n\r\nYou should return the following matrix:\r\n\r\n[\r\n [ 1, 2, 3 ],\r\n [ 8, 9, 4 ],\r\n [ 7, 6, 5 ]\r\n]", 
        "difficulty": "Medium", 
        "hints": [
            "Array"
        ], 
        "name": "Spiral Matrix II", 
        "number": 59, 
        "similar_problems": [
            "(M) Spiral Matrix"
        ], 
        "total": 186941
    }, 
    {
        "accepted": 62275, 
        "companies": "Amazon", 
        "description": "Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:\r\n\r\n\r\n\r\nIntegers in each row are sorted in ascending from left to right.\r\nIntegers in each column are sorted in ascending from top to bottom.\r\n\r\n\r\n\r\n\r\nFor example,\r\n\r\nConsider the following matrix:\r\n\r\n\r\n[\r\n  [1,   4,  7, 11, 15],\r\n  [2,   5,  8, 12, 19],\r\n  [3,   6,  9, 16, 22],\r\n  [10, 13, 14, 17, 24],\r\n  [18, 21, 23, 26, 30]\r\n]\r\n\r\n\r\nGiven target = 5, return true.\r\nGiven target = 20, return false.", 
        "difficulty": "Medium", 
        "hints": [
            "Binary Search", 
            "Divide and Conquer"
        ], 
        "name": "Search a 2D Matrix II", 
        "number": 240, 
        "similar_problems": [
            "(M) Search a 2D Matrix"
        ], 
        "total": 164176
    }, 
    {
        "accepted": 101912, 
        "companies": "Amazon", 
        "description": "Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.\r\n\r\n\r\nFor example,\r\nIf n = 4 and k = 2, a solution is:\r\n\r\n\r\n\r\n[\r\n  [2,4],\r\n  [3,4],\r\n  [2,3],\r\n  [1,2],\r\n  [1,3],\r\n  [1,4],\r\n]", 
        "difficulty": "Medium", 
        "hints": [
            "Backtracking"
        ], 
        "name": "Combinations", 
        "number": 77, 
        "similar_problems": [
            "(M) Combination Sum", 
            " (M) Permutations"
        ], 
        "total": 269332
    }, 
    {
        "accepted": 31383, 
        "companies": "Amazon", 
        "description": "Given an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\r\n\r\n\r\nFormally the function should:\r\nReturn true if there exists i, j, k  \r\nsuch that arr[i] &lt; arr[j] &lt; arr[k] given 0 &le; i &lt; j &lt; k &le; n-1 \r\nelse return false.\r\n\r\n\r\n\r\nYour algorithm should run in O(n) time complexity and O(1) space complexity.\r\n\r\n\r\nExamples:\r\nGiven [1, 2, 3, 4, 5],\r\nreturn true.\r\n\r\n\r\nGiven [5, 4, 3, 2, 1],\r\nreturn false.\r\n\r\n\r\nCredits:Special thanks to @DjangoUnchained for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "(M) Longest Increasing Subsequence"
        ], 
        "name": "Increasing Triplet Subsequence", 
        "number": 334, 
        "similar_problems": [], 
        "total": 82954
    }, 
    {
        "accepted": 102704, 
        "companies": "Amazon", 
        "description": "Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.\r\n\r\nFor example,\r\nGiven [3,2,1,5,6,4] and k = 2, return 5.\r\n\r\n\r\nNote: \r\nYou may assume k is always valid, 1 \u2264 k \u2264 array's length.\r\n\r\nCredits:Special thanks to @mithmatt for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Heap", 
            "Divide and Conquer"
        ], 
        "name": "Kth Largest Element in an Array", 
        "number": 215, 
        "similar_problems": [
            "(M) Wiggle Sort II", 
            " (M) Top K Frequent Elements", 
            " (E) Third Maximum Number"
        ], 
        "total": 273974
    }, 
    {
        "accepted": 11803, 
        "companies": "Amazon", 
        "description": "Given a non-empty array containing only positive integers, find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal.\r\n\r\n\r\nNote:\r\n\r\nEach of the array element will not exceed 100.\r\nThe array size will not exceed 200.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: [1, 5, 11, 5]\r\n\r\nOutput: true\r\n\r\nExplanation: The array can be partitioned as [1, 5, 5] and [11].\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [1, 2, 3, 5]\r\n\r\nOutput: false\r\n\r\nExplanation: The array cannot be partitioned into equal sum subsets.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Partition Equal Subset Sum", 
        "number": 416, 
        "similar_problems": [], 
        "total": 31483
    }, 
    {
        "accepted": 27156, 
        "companies": "Amazon", 
        "description": "Given a positive integer num, write a function which returns True if num is a perfect square else False.\r\n\r\n\r\nNote: Do not use any built-in library function such as sqrt.\r\n\r\n\r\nExample 1:\r\n\r\nInput: 16\r\nReturns: True\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: 14\r\nReturns: False\r\n\r\n\r\n\r\nCredits:Special thanks to @elmirap for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Binary Search", 
            "Math"
        ], 
        "name": "Valid Perfect Square", 
        "number": 367, 
        "similar_problems": [
            "(M) Sqrt(x)"
        ], 
        "total": 72568
    }, 
    {
        "accepted": 60672, 
        "companies": "Amazon", 
        "description": "Given an unsorted array of integers, find the length of longest increasing subsequence.\r\n\r\n\r\nFor example,\r\nGiven [10, 9, 2, 5, 3, 7, 101, 18],\r\nThe longest increasing subsequence is [2, 3, 7, 101], therefore the length is 4. Note that there may be more than one LIS combination, it is only necessary for you to return the length.\r\n\r\n\r\nYour algorithm should run in O(n2) complexity.\r\n\r\n\r\nFollow up: Could you improve it to O(n log n) time complexity? \r\n\r\nCredits:Special thanks to @pbrother for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming", 
            "Binary Search"
        ], 
        "name": "Longest Increasing Subsequence", 
        "number": 300, 
        "similar_problems": [
            "(M) Increasing Triplet Subsequence", 
            " (H) Russian Doll Envelopes"
        ], 
        "total": 162459
    }, 
    {
        "accepted": 97113, 
        "companies": "Amazon", 
        "description": "Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.\r\n\r\nNote: You can only move either down or right at any point in time.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Dynamic Programming"
        ], 
        "name": "Minimum Path Sum", 
        "number": 64, 
        "similar_problems": [
            "(M) Unique Paths", 
            " (H) Dungeon Game"
        ], 
        "total": 261153
    }, 
    {
        "accepted": 93758, 
        "companies": "Amazon", 
        "description": "You are given an n x n 2D matrix representing an image.\r\nRotate the image by 90 degrees (clockwise).\r\nFollow up:\r\nCould you do this in-place?", 
        "difficulty": "Medium", 
        "hints": [
            "Array"
        ], 
        "name": "Rotate Image", 
        "number": 48, 
        "similar_problems": [], 
        "total": 252501
    }, 
    {
        "accepted": 29979, 
        "companies": "Amazon", 
        "description": "Write a program to find the nth super ugly number.\r\n\r\n\r\n\r\n    Super ugly numbers are positive numbers whose all prime factors are in the given prime list\r\n    primes of size k. For example, [1, 2, 4, 7, 8, 13, 14, 16, 19, 26, 28, 32]\r\n is the sequence of the first 12 super ugly numbers given primes\r\n    = [2, 7, 13, 19] of size 4.\r\n\r\n\r\n\r\n    Note:\r\n    (1) 1 is a super ugly number for any given primes.\r\n    (2) The given numbers in primes are in ascending order.\r\n    (3) 0 < k &le; 100, 0 < n &le; 106, 0 < primes[i] < 1000.\r\n    (4) The nth super ugly number is guaranteed to fit in a 32-bit signed integer.\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Math", 
            "Heap"
        ], 
        "name": "Super Ugly Number", 
        "number": 313, 
        "similar_problems": [
            "(M) Ugly Number II"
        ], 
        "total": 80842
    }, 
    {
        "accepted": 115214, 
        "companies": "Amazon", 
        "description": "Given a binary tree\r\n\r\n    struct TreeLinkNode {\r\n      TreeLinkNode *left;\r\n      TreeLinkNode *right;\r\n      TreeLinkNode *next;\r\n    }\r\n\r\n\r\n\r\nPopulate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL.\r\n\r\nInitially, all next pointers are set to NULL.\r\n\r\n\r\nNote:\r\n\r\nYou may only use constant extra space.\r\nYou may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).\r\n\r\n\r\n\r\n\r\nFor example,\r\nGiven the following perfect binary tree,\r\n\r\n         1\r\n       /  \\\r\n      2    3\r\n     / \\  / \\\r\n    4  5  6  7\r\n\r\n\r\n\r\nAfter calling your function, the tree should look like:\r\n\r\n         1 -> NULL\r\n       /  \\\r\n      2 -> 3 -> NULL\r\n     / \\  / \\\r\n    4->5->6->7 -> NULL", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "Populating Next Right Pointers in Each Node", 
        "number": 116, 
        "similar_problems": [
            "(H) Populating Next Right Pointers in Each Node II", 
            " (M) Binary Tree Right Side View"
        ], 
        "total": 312591
    }, 
    {
        "accepted": 136123, 
        "companies": "Amazon", 
        "description": "Given a set of distinct integers, nums, return all possible subsets.\r\n\r\nNote: The solution set must not contain duplicate subsets.\r\n\r\n\r\nFor example,\r\nIf nums = [1,2,3], a solution is:\r\n\r\n\r\n\r\n[\r\n  [3],\r\n  [1],\r\n  [2],\r\n  [1,2,3],\r\n  [1,3],\r\n  [2,3],\r\n  [1,2],\r\n  []\r\n]", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Backtracking", 
            "Bit Manipulation"
        ], 
        "name": "Subsets", 
        "number": 78, 
        "similar_problems": [
            "(M) Generalized Abbreviation"
        ], 
        "total": 370640
    }, 
    {
        "accepted": 136455, 
        "companies": "Amazon", 
        "description": "Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue.\r\n\r\n\r\n\r\nHere, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.\r\n\r\n\r\n\r\nNote:\r\nYou are not suppose to use the library's sort function for this problem.\r\n\r\n\r\nclick to show follow up.\r\n\r\n\r\nFollow up:\r\nA rather straight forward solution is a two-pass algorithm using counting sort.\r\nFirst, iterate the array counting number of 0's, 1's, and 2's, then overwrite array with total number of 0's, then 1's and followed by 2's.\r\nCould you come up with an one-pass algorithm using only constant space?", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Two Pointers", 
            "Sort"
        ], 
        "name": "Sort Colors", 
        "number": 75, 
        "similar_problems": [
            "(M) Sort List", 
            " (M) Wiggle Sort", 
            " (M) Wiggle Sort II"
        ], 
        "total": 372054
    }, 
    {
        "accepted": 37538, 
        "companies": "Amazon", 
        "description": "According to the Wikipedia's article: \"The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.\"\r\n\r\n\r\n\r\nGiven a board with m by n cells, each cell has an initial state live (1) or dead (0). Each cell interacts with its eight neighbors (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):\r\n\r\n\r\n\r\n\r\nAny live cell with fewer than two live neighbors dies, as if caused by under-population.\r\nAny live cell with two or three live neighbors lives on to the next generation.\r\nAny live cell with more than three live neighbors dies, as if by over-population..\r\nAny dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\r\n\r\n\r\n\r\n\r\nWrite a function to compute the next state (after one update) of the board given its current state.\r\n\r\n\r\nFollow up: \r\n\r\nCould you solve it in-place? Remember that the board needs to be updated at the same time: You cannot update some cells first and then use their updated values to update other cells.\r\nIn this question, we represent the board using a 2D array. In principle, the board is infinite, which would cause problems when the active area encroaches the border of the array. How would you address these problems?\r\n\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Array"
        ], 
        "name": "Game of Life", 
        "number": 289, 
        "similar_problems": [
            "(M) Set Matrix Zeroes"
        ], 
        "total": 103435
    }, 
    {
        "accepted": 111333, 
        "companies": "Amazon", 
        "description": "Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.\r\n\r\nNote: You may not slant the container and n is at least 2.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Two Pointers"
        ], 
        "name": "Container With Most Water", 
        "number": 11, 
        "similar_problems": [
            "(H) Trapping Rain Water"
        ], 
        "total": 308663
    }, 
    {
        "accepted": 4172, 
        "companies": "Amazon", 
        "description": "In the computer world, use restricted resource you have to generate maximum benefit is what we always want to pursue.\r\nFor now, suppose you are a dominator of m 0s and n 1s respectively. On the other hand, there is an array with strings consisting of only 0s and 1s.\r\n\r\n\r\nNow your task is to find the maximum number of strings that you can form with given m 0s and n 1s. Each 0 and 1 can be used at most once.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe given numbers of 0s and 1s will both not exceed 100\r\nThe size of given string array won't exceed 600.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: Array = {\"10\", \"0001\", \"111001\", \"1\", \"0\"}, m = 5, n = 3\r\nOutput: 4\r\n\r\nExplanation: This are totally 4 strings can be formed by the using of 5 0s and 3 1s, which are \u201c10,\u201d0001\u201d,\u201d1\u201d,\u201d0\u201d\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: Array = {\"10\", \"0\", \"1\"}, m = 1, n = 1\r\nOutput: 2\r\n\r\nExplanation: You could form \"10\", but then you'd have nothing left. Better form \"0\" and \"1\".", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Ones and Zeroes", 
        "number": 474, 
        "similar_problems": [], 
        "total": 11584
    }, 
    {
        "accepted": 95980, 
        "companies": "Amazon", 
        "description": "A peak element is an element that is greater than its neighbors.\r\n\r\nGiven an input array where num[i] \u2260 num[i+1], find a peak element and return its index.\r\n\r\nThe array may contain multiple peaks, in that case return the index to any one of the peaks is fine.\r\n\r\nYou may imagine that num[-1] = num[n] = -\u221e.\r\n\r\nFor example, in array [1, 2, 3, 1], 3 is a peak element and your function should return the index number 2.\r\n\r\nclick to show spoilers.\r\n\r\nNote:\r\nYour solution should be in logarithmic complexity.\r\n\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Binary Search", 
            "Array"
        ], 
        "name": "Find Peak Element", 
        "number": 162, 
        "similar_problems": [], 
        "total": 267754
    }, 
    {
        "accepted": 9209, 
        "companies": "Amazon", 
        "description": "A character in UTF8 can be from 1 to 4 bytes long, subjected to the following rules:\r\n\r\nFor 1-byte character, the first bit is a 0, followed by its unicode code.\r\nFor n-bytes character, the first n-bits are all one's, the n+1 bit is 0, followed by n-1 bytes with most significant 2 bits being 10.\r\n\r\nThis is how the UTF-8 encoding would work:\r\n\r\n   Char. number range  |        UTF-8 octet sequence\r\n      (hexadecimal)    |              (binary)\r\n   --------------------+---------------------------------------------\r\n   0000 0000-0000 007F | 0xxxxxxx\r\n   0000 0080-0000 07FF | 110xxxxx 10xxxxxx\r\n   0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\r\n   0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\r\n\r\n\r\nGiven an array of integers representing the data, return whether it is a valid utf-8 encoding.\r\n\r\n\r\nNote:\r\nThe input is an array of integers. Only the least significant 8 bits of each integer is used to store the data. This means each integer represents only 1 byte of data.\r\n\r\n\r\n\r\nExample 1:\r\n\r\ndata = [197, 130, 1], which represents the octet sequence: 11000101 10000010 00000001.\r\n\r\nReturn true.\r\nIt is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character.\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\ndata = [235, 140, 4], which represented the octet sequence: 11101011 10001100 00000100.\r\n\r\nReturn false.\r\nThe first 3 bits are all one's and the 4th bit is 0 means it is a 3-bytes character.\r\nThe next byte is a continuation byte which starts with 10 and that's correct.\r\nBut the second continuation byte does not start with 10, so it is invalid.", 
        "difficulty": "Medium", 
        "hints": [
            "Bit Manipulation"
        ], 
        "name": "UTF-8 Validation", 
        "number": 393, 
        "similar_problems": [], 
        "total": 25710
    }, 
    {
        "accepted": 133711, 
        "companies": "Amazon", 
        "description": "Given a set of candidate numbers (C) (without duplicates) and a target number (T), find all unique combinations in C where the candidate numbers sums to T. \r\n\r\n\r\nThe same repeated number may be chosen from C unlimited number of times.\r\n\r\n\r\nNote:\r\n\r\nAll numbers (including target) will be positive integers.\r\nThe solution set must not contain duplicate combinations.\r\n\r\n\r\n\r\n\r\nFor example, given candidate set [2, 3, 6, 7] and target 7, \r\nA solution set is: \r\n\r\n[\r\n  [7],\r\n  [2, 2, 3]\r\n]", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Backtracking"
        ], 
        "name": "Combination Sum", 
        "number": 39, 
        "similar_problems": [
            "(M) Letter Combinations of a Phone Number", 
            " (M) Combination Sum II", 
            " (M) Combinations", 
            " (M) Combination Sum III", 
            " (M) Factor Combinations", 
            " (M) Combination Sum IV"
        ], 
        "total": 373754
    }, 
    {
        "accepted": 107401, 
        "companies": "Amazon", 
        "description": "Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:\r\n\r\n\r\n\r\nIntegers in each row are sorted from left to right.\r\nThe first integer of each row is greater than the last integer of the previous row.\r\n\r\n\r\n\r\n\r\nFor example,\r\n\r\nConsider the following matrix:\r\n\r\n\r\n[\r\n  [1,   3,  5,  7],\r\n  [10, 11, 16, 20],\r\n  [23, 30, 34, 50]\r\n]\r\n\r\n\r\nGiven target = 3, return true.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Binary Search"
        ], 
        "name": "Search a 2D Matrix", 
        "number": 74, 
        "similar_problems": [
            "(M) Search a 2D Matrix II"
        ], 
        "total": 301951
    }, 
    {
        "accepted": 28606, 
        "companies": "Amazon", 
        "description": "One way to serialize a binary tree is to use pre-order traversal. When we encounter a non-null node, we record the node's value. If it is a null node, we record using a sentinel value such as #.\r\n\r\n\r\n     _9_\r\n    /   \\\r\n   3     2\r\n  / \\   / \\\r\n 4   1  #  6\r\n/ \\ / \\   / \\\r\n# # # #   # #\r\n\r\n\r\nFor example, the above binary tree can be serialized to the string \"9,3,4,#,#,1,#,#,2,#,6,#,#\", where # represents a null node.\r\n\r\n\r\nGiven a string of comma separated values, verify whether it is a correct preorder traversal serialization of a binary tree. Find an algorithm without reconstructing the tree.\r\n\r\nEach comma separated value in the string must be either an integer or a character '#' representing null pointer.\r\n\r\nYou may assume that the input format is always valid, for example it could never contain two consecutive commas such as \"1,,3\".\r\n\r\nExample 1:\r\n\"9,3,4,#,#,1,#,#,2,#,6,#,#\"\r\nReturn true\r\nExample 2:\r\n\"1,#\"\r\nReturn false\r\nExample 3:\r\n\"9,#,#,1\"\r\nReturn false\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Stack"
        ], 
        "name": "Verify Preorder Serialization of a Binary Tree", 
        "number": 331, 
        "similar_problems": [], 
        "total": 81253
    }, 
    {
        "accepted": 98781, 
        "companies": "Amazon", 
        "description": "Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number.\r\nAn example is the root-to-leaf path 1->2->3 which represents the number 123.\r\n\r\nFind the total sum of all root-to-leaf numbers.\r\n\r\nFor example,\r\n\r\n    1\r\n   / \\\r\n  2   3\r\n\r\n\r\n\r\nThe root-to-leaf path 1->2 represents the number 12.\r\nThe root-to-leaf path 1->3 represents the number 13.\r\n\r\n\r\nReturn the sum = 12 + 13 = 25.", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "Sum Root to Leaf Numbers", 
        "number": 129, 
        "similar_problems": [
            "(E) Path Sum", 
            " (H) Binary Tree Maximum Path Sum"
        ], 
        "total": 280854
    }, 
    {
        "accepted": 88760, 
        "companies": "Amazon", 
        "description": "Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in place.\r\n\r\n\r\nclick to show follow up.\r\n\r\nFollow up:\r\n\r\n\r\nDid you use extra space?\r\nA straight forward solution using O(mn) space is probably a bad idea.\r\nA simple improvement uses O(m + n) space, but still not the best solution.\r\nCould you devise a constant space solution?", 
        "difficulty": "Medium", 
        "hints": [
            "Array"
        ], 
        "name": "Set Matrix Zeroes", 
        "number": 73, 
        "similar_problems": [
            "(M) Game of Life"
        ], 
        "total": 252560
    }, 
    {
        "accepted": 14892, 
        "companies": "Amazon", 
        "description": "We are playing the Guess Game. The game is as follows: \r\n\r\nI pick a number from 1 to n. You have to guess which number I picked.\r\n\r\nEvery time you guess wrong, I'll tell you whether the number I picked is higher or lower. \r\n\r\nHowever, when you guess a particular number x,  and you guess wrong, you pay $x. You win the game when you guess the number I picked.\r\n\r\n\r\nExample:\r\n\r\nn = 10, I pick 8.\r\n\r\nFirst round:  You guess 5, I tell you that it's higher. You pay $5.\r\nSecond round: You guess 7, I tell you that it's higher. You pay $7.\r\nThird round:  You guess 9, I tell you that it's lower. You pay $9.\r\n\r\nGame over. 8 is the number I picked.\r\n\r\nYou end up paying $5 + $7 + $9 = $21.\r\n\r\n\r\n\r\nGiven a particular n &ge; 1, find out how much money you need to have to guarantee a win.\r\n\r\n\r\n   The best strategy to play the game is to minimize the maximum loss you could possibly face. Another strategy is to minimize the expected loss. Here, we are interested in the first scenario.\r\n   Take a small example (n = 3). What do you end up paying in the worst case?\r\n  Check out this article if you're still stuck.\r\n The purely recursive implementation of minimax would be worthless for even a small n. You MUST use dynamic programming. \r\n As a follow-up, how would you modify your code to solve the problem of minimizing the expected loss, instead of the worst-case loss? \r\n \r\n\r\nCredits:Special thanks to @agave and @StefanPochmann for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Guess Number Higher or Lower II", 
        "number": 375, 
        "similar_problems": [
            "(M) Flip Game II", 
            " (E) Guess Number Higher or Lower", 
            " (M) Can I Win"
        ], 
        "total": 42429
    }, 
    {
        "accepted": 62645, 
        "companies": "Amazon", 
        "description": "Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.\r\n\r\n\r\n\r\nFor example, given n = 12, return 3 because 12 = 4 + 4 + 4; given n = 13, return 2 because 13 = 4 + 9.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming", 
            "Breadth-first Search", 
            "Math"
        ], 
        "name": "Perfect Squares", 
        "number": 279, 
        "similar_problems": [
            "(E) Count Primes", 
            " (M) Ugly Number II"
        ], 
        "total": 178516
    }, 
    {
        "accepted": 35449, 
        "companies": "Amazon", 
        "description": "Given an Iterator class interface with methods: next() and hasNext(), design and implement a PeekingIterator that support the peek() operation -- it essentially peek() at the element that will be returned by the next call to next().\r\n\r\n\r\nHere is an example. Assume that the iterator is initialized to the beginning of the list: [1, 2, 3].\r\n\r\nCall next() gets you 1, the first element in the list.\r\n\r\nNow you call peek() and it returns 2, the next element. Calling next() after that still return 2.\r\n\r\nYou call next() the final time and it returns 3, the last element. Calling hasNext() after that should return false.\r\n\r\n\r\n  Think of \"looking ahead\". You want to cache the next element.\r\n  Is one variable sufficient? Why or why not?\r\n  Test your design with call order of peek() before next() vs next() before peek().\r\n  For a clean implementation, check out Google's guava library source code.\r\n\r\n\r\n\r\nFollow up: How would you extend your design to be generic and work with all types, not just integer?\r\n\r\nCredits:Special thanks to @porker2008 for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Design"
        ], 
        "name": "Peeking Iterator", 
        "number": 284, 
        "similar_problems": [
            "(M) Binary Search Tree Iterator", 
            " (M) Flatten 2D Vector", 
            " (M) Zigzag Iterator"
        ], 
        "total": 101025
    }, 
    {
        "accepted": 101468, 
        "companies": "Amazon", 
        "description": "Follow up for \"Remove Duplicates\":\r\nWhat if duplicates are allowed at most twice?\r\n\r\n\r\nFor example,\r\nGiven sorted array nums = [1,1,1,2,2,3],\r\n\r\n\r\nYour function should return length = 5, with the first five elements of nums being 1, 1, 2, 2 and 3. It doesn't matter what you leave beyond the new length.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Two Pointers"
        ], 
        "name": "Remove Duplicates from Sorted Array II", 
        "number": 80, 
        "similar_problems": [], 
        "total": 290759
    }, 
    {
        "accepted": 6064, 
        "companies": "Amazon", 
        "description": "Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.\r\n\r\nBasically, the deletion can be divided into two stages:\r\n\r\nSearch for a node to remove.\r\nIf the node is found, delete the node.\r\n\r\n\r\n\r\nNote: Time complexity should be O(height of tree).\r\n\r\nExample:\r\n\r\nroot = [5,3,6,2,4,null,7]\r\nkey = 3\r\n\r\n    5\r\n   / \\\r\n  3   6\r\n / \\   \\\r\n2   4   7\r\n\r\nGiven key to delete is 3. So we find the node with value 3 and delete it.\r\n\r\nOne valid answer is [5,4,6,2,null,null,7], shown in the following BST.\r\n\r\n    5\r\n   / \\\r\n  4   6\r\n /     \\\r\n2       7\r\n\r\nAnother valid answer is [5,2,6,null,4,null,7].\r\n\r\n    5\r\n   / \\\r\n  2   6\r\n   \\   \\\r\n    4   7", 
        "difficulty": "Medium", 
        "hints": [
            "Tree"
        ], 
        "name": "Delete Node in a BST", 
        "number": 450, 
        "similar_problems": [], 
        "total": 17421
    }, 
    {
        "accepted": 17055, 
        "companies": "Amazon", 
        "description": "A sequence of numbers is called a wiggle sequence if the differences between successive numbers strictly alternate between positive and negative. The first difference (if one exists) may be either positive or negative. A sequence with fewer than two elements is trivially a wiggle sequence. \r\n\r\nFor example, [1,7,4,9,2,5] is a wiggle sequence because the differences (6,-3,5,-7,3) are alternately positive and negative. In contrast, [1,4,7,2,5] and [1,7,4,5,5] are not wiggle sequences, the first because its first two differences are positive and the second because its last difference is zero.\r\n\r\nGiven a sequence of integers, return the length of the longest subsequence that is a wiggle sequence. A subsequence is obtained by deleting some number of elements (eventually, also zero) from the original sequence, leaving the remaining elements in their original order.\r\n\r\nExamples:\r\n\r\nInput: [1,7,4,9,2,5]\r\nOutput: 6\r\nThe entire sequence is a wiggle sequence.\r\n\r\nInput: [1,17,5,10,13,15,10,5,16,8]\r\nOutput: 7\r\nThere are several subsequences that achieve this length. One is [1,17,10,13,10,16,8].\r\n\r\nInput: [1,2,3,4,5,6,7,8,9]\r\nOutput: 2\r\n\r\n\r\n\r\nFollow up:\r\nCan you do it in O(n) time?\r\n\r\n\r\nCredits:Special thanks to @agave and @StefanPochmann for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming", 
            "Greedy"
        ], 
        "name": "Wiggle Subsequence", 
        "number": 376, 
        "similar_problems": [], 
        "total": 49340
    }, 
    {
        "accepted": 93595, 
        "companies": "Amazon", 
        "description": "Given a collection of integers that might contain duplicates, nums, return all possible subsets.\r\n\r\nNote: The solution set must not contain duplicate subsets.\r\n\r\n\r\nFor example,\r\nIf nums = [1,2,2], a solution is:\r\n\r\n\r\n\r\n[\r\n  [2],\r\n  [1],\r\n  [1,2,2],\r\n  [2,2],\r\n  [1,2],\r\n  []\r\n]", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Backtracking"
        ], 
        "name": "Subsets II", 
        "number": 90, 
        "similar_problems": [], 
        "total": 275994
    }, 
    {
        "accepted": 39679, 
        "companies": "Amazon", 
        "description": "Follow up for H-Index: What if the citations array is sorted in ascending order? Could you optimize your algorithm?\r\n\r\n\r\n\r\n  Expected runtime complexity is in O(log n) and the input is sorted.", 
        "difficulty": "Medium", 
        "hints": [
            "Binary Search"
        ], 
        "name": "H-Index II", 
        "number": 275, 
        "similar_problems": [
            "(M) H-Index"
        ], 
        "total": 118157
    }, 
    {
        "accepted": 109695, 
        "companies": "Amazon", 
        "description": "Given a binary tree, flatten it to a linked list in-place.\r\n\r\n\r\n\r\nFor example,\r\nGiven\r\n\r\n         1\r\n        / \\\r\n       2   5\r\n      / \\   \\\r\n     3   4   6\r\n\r\n\r\n\r\nThe flattened tree should look like:\r\n\r\n   1\r\n    \\\r\n     2\r\n      \\\r\n       3\r\n        \\\r\n         4\r\n          \\\r\n           5\r\n            \\\r\n             6\r\n\r\n\r\nclick to show hints.\r\n\r\nHints:\r\nIf you notice carefully in the flattened tree, each node's right child points to the next node of a pre-order traversal.", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "Flatten Binary Tree to Linked List", 
        "number": 114, 
        "similar_problems": [], 
        "total": 326926
    }, 
    {
        "accepted": 17931, 
        "companies": "Amazon", 
        "description": "Given a set of distinct positive integers, find the largest subset such that every pair (Si, Sj) of elements in this subset satisfies: Si % Sj = 0 or Sj % Si = 0.\r\n\r\n\r\nIf there are multiple solutions, return any subset is fine.\r\n\r\n\r\nExample 1:\r\n\r\nnums: [1,2,3]\r\n\r\nResult: [1,2] (of course, [1,3] will also be ok)\r\n\r\n\r\n\r\nExample 2:\r\n\r\nnums: [1,2,4,8]\r\n\r\nResult: [1,2,4,8]\r\n\r\n\r\n\r\nCredits:Special thanks to @Stomach_ache for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming", 
            "Math"
        ], 
        "name": "Largest Divisible Subset", 
        "number": 368, 
        "similar_problems": [], 
        "total": 54057
    }, 
    {
        "accepted": 48611, 
        "companies": "Amazon", 
        "description": "Given a range [m, n] where 0 <= m <= n <= 2147483647, return the bitwise AND of all numbers in this range, inclusive.\r\n\r\n\r\nFor example, given the range [5, 7], you should return 4.\r\n\r\n\r\nCredits:Special thanks to @amrsaqr for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Bit Manipulation"
        ], 
        "name": "Bitwise AND of Numbers Range", 
        "number": 201, 
        "similar_problems": [], 
        "total": 146688
    }, 
    {
        "accepted": 11807, 
        "companies": "Amazon", 
        "description": "Your task is to calculate ab mod 1337 where a is a positive integer and b is an extremely large positive integer given in the form of an array.\r\n\r\n\r\nExample1:\r\n\r\na = 2\r\nb = [3]\r\n\r\nResult: 8\r\n\r\n\r\n\r\nExample2:\r\n\r\na = 2\r\nb = [1,0]\r\n\r\nResult: 1024\r\n\r\n\r\n\r\nCredits:Special thanks to @Stomach_ache for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Math"
        ], 
        "name": "Super Pow", 
        "number": 372, 
        "similar_problems": [
            "(M) Pow(x, n)"
        ], 
        "total": 35637
    }, 
    {
        "accepted": 46749, 
        "companies": "Amazon", 
        "description": "Note: This is an extension of House Robber.\r\n\r\nAfter robbing those houses on that street, the thief has found himself a new place for his thievery so that he will not get too much attention. This time, all houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, the security system for these houses remain the same as for those in the previous street. \r\n\r\nGiven a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.\r\n\r\nCredits:Special thanks to @Freezen for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "House Robber II", 
        "number": 213, 
        "similar_problems": [
            "(E) House Robber", 
            " (M) Paint House", 
            " (E) Paint Fence", 
            " (M) House Robber III"
        ], 
        "total": 141605
    }, 
    {
        "accepted": 81833, 
        "companies": "Amazon", 
        "description": "Follow up for \"Search in Rotated Sorted Array\":\r\nWhat if duplicates are allowed?\r\n\r\nWould this affect the run-time complexity? How and why?\r\n\r\n\r\nSuppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\r\n\r\n(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).\r\n\r\nWrite a function to determine if a given target is in the array.\r\n\r\nThe array may contain duplicates.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Binary Search"
        ], 
        "name": "Search in Rotated Sorted Array II", 
        "number": 81, 
        "similar_problems": [
            "(H) Search in Rotated Sorted Array"
        ], 
        "total": 248604
    }, 
    {
        "accepted": 3071, 
        "companies": "Amazon", 
        "description": "Remember the story of Little Match Girl? By now, you know exactly what matchsticks the little match girl has, please find out a way you can make one square by using up all those matchsticks. You should not break any stick, but you can link them up, and each matchstick must be used exactly one time.\r\n\r\n Your input will be several matchsticks the girl has, represented with their stick length. Your output will either be true or false, to represent whether you could make one square using all the matchsticks the little match girl has.\r\n\r\nExample 1:\r\n\r\nInput: [1,1,2,2,2]\r\nOutput: true\r\n\r\nExplanation: You can form a square with length 2, one side of the square came two sticks with length 1.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [3,3,3,3,4]\r\nOutput: false\r\n\r\nExplanation: You cannot find a way to form a square with all the matchsticks.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length sum of the given matchsticks is in the range of 0 to 10^9.\r\nThe length of the given matchstick array will not exceed 15.", 
        "difficulty": "Medium", 
        "hints": [
            "Depth-first Search"
        ], 
        "name": "Matchsticks to Square", 
        "number": 473, 
        "similar_problems": [], 
        "total": 9343
    }, 
    {
        "accepted": 92500, 
        "companies": "Amazon", 
        "description": "Given a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST.", 
        "difficulty": "Medium", 
        "hints": [
            "Depth-first Search", 
            "Linked List"
        ], 
        "name": "Convert Sorted List to Binary Search Tree", 
        "number": 109, 
        "similar_problems": [
            "(M) Convert Sorted Array to Binary Search Tree"
        ], 
        "total": 282338
    }, 
    {
        "accepted": 8074, 
        "companies": "Amazon", 
        "description": "Given an m x n matrix of non-negative integers representing the height of each unit cell in a continent, the \"Pacific ocean\" touches the left and top edges of the matrix and the \"Atlantic ocean\" touches the right and bottom edges.\r\n\r\nWater can only flow in four directions (up, down, left, or right) from a cell to another one with height equal or lower.\r\n\r\nFind the list of grid coordinates where water can flow to both the Pacific and Atlantic ocean.\r\n\r\nNote:\r\n\r\nThe order of returned grid coordinates does not matter.\r\nBoth m and n are less than 150.\r\n\r\n\r\nExample:\r\n\r\nGiven the following 5x5 matrix:\r\n\r\n  Pacific ~   ~   ~   ~   ~ \r\n       ~  1   2   2   3  (5) *\r\n       ~  3   2   3  (4) (4) *\r\n       ~  2   4  (5)  3   1  *\r\n       ~ (6) (7)  1   4   5  *\r\n       ~ (5)  1   1   2   4  *\r\n          *   *   *   *   * Atlantic\r\n\r\nReturn:\r\n\r\n[[0, 4], [1, 3], [1, 4], [2, 2], [3, 0], [3, 1], [4, 0]] (positions with parentheses in above matrix).", 
        "difficulty": "Medium", 
        "hints": [
            "Depth-first Search", 
            "Breadth-first Search"
        ], 
        "name": "Pacific Atlantic Water Flow", 
        "number": 417, 
        "similar_problems": [], 
        "total": 24746
    }, 
    {
        "accepted": 92010, 
        "companies": "Amazon", 
        "description": "Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.\r\n\r\n\r\nFor example, given the following triangle\r\n\r\n[\r\n     [2],\r\n    [3,4],\r\n   [6,5,7],\r\n  [4,1,8,3]\r\n]\r\n\r\n\r\n\r\nThe minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5 + 1 = 11).\r\n\r\n\r\n\r\nNote:\r\nBonus point if you are able to do this using only O(n) extra space, where n is the total number of rows in the triangle.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Dynamic Programming"
        ], 
        "name": "Triangle", 
        "number": 120, 
        "similar_problems": [], 
        "total": 282945
    }, 
    {
        "accepted": 121184, 
        "companies": "Amazon", 
        "description": "Given a digit string, return all possible letter combinations that the number could represent.\r\n\r\n\r\n\r\nA mapping of digit to letters (just like on the telephone buttons) is given below.\r\n\r\n\r\n\r\nInput:Digit string \"23\"\r\nOutput: [\"ad\", \"ae\", \"af\", \"bd\", \"be\", \"bf\", \"cd\", \"ce\", \"cf\"].\r\n\r\n\r\n\r\nNote:\r\nAlthough the above answer is in lexicographical order, your answer could be in any order you want.", 
        "difficulty": "Medium", 
        "hints": [
            "Backtracking", 
            "String"
        ], 
        "name": "Letter Combinations of a Phone Number", 
        "number": 17, 
        "similar_problems": [
            "(M) Generate Parentheses", 
            " (M) Combination Sum", 
            " (E) Binary Watch"
        ], 
        "total": 373707
    }, 
    {
        "accepted": 82771, 
        "companies": "Amazon", 
        "description": "Given a 2d grid map of '1's (land) and '0's (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.\r\n\r\nExample 1:\r\n11110110101100000000\r\nAnswer: 1\r\nExample 2:\r\n11000110000010000011\r\nAnswer: 3\r\n\r\nCredits:Special thanks to @mithmatt for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Depth-first Search", 
            "Breadth-first Search", 
            "Union Find"
        ], 
        "name": "Number of Islands", 
        "number": 200, 
        "similar_problems": [
            "(M) Surrounded Regions", 
            " (M) Walls and Gates", 
            " (H) Number of Islands II", 
            " (M) Number of Connected Components in an Undirected Graph"
        ], 
        "total": 256115
    }, 
    {
        "accepted": 84710, 
        "companies": "Amazon", 
        "description": "Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).\r\n\r\n\r\nFor example:\r\nGiven binary tree [3,9,20,null,null,15,7],\r\n\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n\r\n\r\n\r\nreturn its zigzag level order traversal as:\r\n\r\n[\r\n  [3],\r\n  [20,9],\r\n  [15,7]\r\n]", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Breadth-first Search", 
            "Stack"
        ], 
        "name": "Binary Tree Zigzag Level Order Traversal", 
        "number": 103, 
        "similar_problems": [
            "(E) Binary Tree Level Order Traversal"
        ], 
        "total": 262619
    }, 
    {
        "accepted": 60575, 
        "companies": "Amazon", 
        "description": "Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.\r\n\r\n\r\n\r\nAccording to the definition of h-index on Wikipedia: \"A scientist has index h if h of his/her N papers have at least h citations each, and the other N \u2212 h papers have no more than h citations each.\"\r\n\r\n\r\n\r\nFor example, given citations = [3, 0, 6, 1, 5], which means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively. Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, his h-index is 3.\r\n\r\n\r\n\r\nNote: If there are several possible values for h, the maximum one is taken as the h-index.\r\n\r\n\r\n\r\n  An easy approach is to sort the array first.\r\n  What are the possible values of h-index?\r\n  A faster approach is to use extra space.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Hash Table", 
            "Sort"
        ], 
        "name": "H-Index", 
        "number": 274, 
        "similar_problems": [
            "(M) H-Index II"
        ], 
        "total": 188696
    }, 
    {
        "accepted": 110637, 
        "companies": "Amazon", 
        "description": "Given an array of strings, group anagrams together.\r\n\r\n\r\nFor example, given: [\"eat\", \"tea\", \"tan\", \"ate\", \"nat\", \"bat\"], \r\nReturn:\r\n\r\n[\r\n  [\"ate\", \"eat\",\"tea\"],\r\n  [\"nat\",\"tan\"],\r\n  [\"bat\"]\r\n]\r\n\r\nNote: All inputs will be in lower-case.", 
        "difficulty": "Medium", 
        "hints": [
            "Hash Table", 
            "String"
        ], 
        "name": "Group Anagrams", 
        "number": 49, 
        "similar_problems": [
            "(E) Valid Anagram", 
            " (E) Group Shifted Strings"
        ], 
        "total": 346974
    }, 
    {
        "accepted": 90426, 
        "companies": "Amazon", 
        "description": "Sort a linked list using insertion sort.", 
        "difficulty": "Medium", 
        "hints": [
            "Linked List", 
            "Sort"
        ], 
        "name": "Insertion Sort List", 
        "number": 147, 
        "similar_problems": [
            "(M) Sort List"
        ], 
        "total": 284283
    }, 
    {
        "accepted": 86852, 
        "companies": "Amazon", 
        "description": "Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.\r\n\r\n\r\nYou should preserve the original relative order of the nodes in each of the two partitions.\r\n\r\n\r\nFor example,\r\nGiven 1->4->3->2->5->2 and x = 3,\r\nreturn 1->2->2->4->3->5.", 
        "difficulty": "Medium", 
        "hints": [
            "Linked List", 
            "Two Pointers"
        ], 
        "name": "Partition List", 
        "number": 86, 
        "similar_problems": [], 
        "total": 275339
    }, 
    {
        "accepted": 49495, 
        "companies": "Amazon", 
        "description": "Write a program to find the n-th ugly number.\r\n\r\n\r\n\r\nUgly numbers are positive numbers whose prime factors only include 2, 3, 5. For example, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.\r\n\r\n\r\n\r\nNote that 1 is typically treated as an ugly number, and n does not exceed 1690.\r\n\r\n\r\n\r\n  The naive approach is to call isUgly for every number until you reach the nth one. Most numbers are not ugly. Try to focus your effort on generating only the ugly ones.\r\n  An ugly number must be multiplied by either 2, 3, or 5 from a smaller ugly number.\r\n  The key is how to maintain the order of the ugly numbers. Try a similar approach of merging from three sorted lists: L1, L2, and L3.\r\n  Assume you have Uk, the kth ugly number. Then Uk+1 must be Min(L1 * 2, L2 * 3, L3 * 5).\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming", 
            "Heap", 
            "Math"
        ], 
        "name": "Ugly Number II", 
        "number": 264, 
        "similar_problems": [
            "(H) Merge k Sorted Lists", 
            " (E) Count Primes", 
            " (E) Ugly Number", 
            " (M) Perfect Squares", 
            " (M) Super Ugly Number"
        ], 
        "total": 156928
    }, 
    {
        "accepted": 109641, 
        "companies": "Amazon", 
        "description": "Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.\r\n\r\n\r\nFor example:\r\nGiven the below binary tree and sum = 22,\r\n\r\n              5\r\n             / \\\r\n            4   8\r\n           /   / \\\r\n          11  13  4\r\n         /  \\    / \\\r\n        7    2  5   1\r\n\r\n\r\n\r\nreturn\r\n\r\n[\r\n   [5,4,11,2],\r\n   [5,8,4,5]\r\n]", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "Path Sum II", 
        "number": 113, 
        "similar_problems": [
            "(E) Path Sum", 
            " (E) Binary Tree Paths", 
            " (E) Path Sum III"
        ], 
        "total": 348412
    }, 
    {
        "accepted": 97150, 
        "companies": "Amazon", 
        "description": "Given a collection of candidate numbers (C) and a target number (T), find all unique combinations in C where the candidate numbers sums to T.\r\n\r\n\r\nEach number in C may only be used once in the combination.\r\n\r\nNote:\r\n\r\nAll numbers (including target) will be positive integers.\r\nThe solution set must not contain duplicate combinations.\r\n\r\n\r\n\r\n\r\nFor example, given candidate set [10, 1, 2, 7, 6, 1, 5] and target 8, \r\nA solution set is: \r\n\r\n[\r\n  [1, 7],\r\n  [1, 2, 5],\r\n  [2, 6],\r\n  [1, 1, 6]\r\n]", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Backtracking"
        ], 
        "name": "Combination Sum II", 
        "number": 40, 
        "similar_problems": [
            "(M) Combination Sum"
        ], 
        "total": 309888
    }, 
    {
        "accepted": 99668, 
        "companies": "Amazon", 
        "description": "Given a linked list, return the node where the cycle begins. If there is no cycle, return null.\r\n\r\n\r\n\r\nNote: Do not modify the linked list.\r\n\r\n\r\nFollow up:\r\nCan you solve it without using extra space?", 
        "difficulty": "Medium", 
        "hints": [
            "Linked List", 
            "Two Pointers"
        ], 
        "name": "Linked List Cycle II", 
        "number": 142, 
        "similar_problems": [
            "(E) Linked List Cycle", 
            " (H) Find the Duplicate Number"
        ], 
        "total": 319901
    }, 
    {
        "accepted": 101163, 
        "companies": "Amazon", 
        "description": "Given a collection of numbers that might contain duplicates, return all possible unique permutations.\r\n\r\n\r\n\r\nFor example,\r\n[1,1,2] have the following unique permutations:\r\n\r\n[\r\n  [1,1,2],\r\n  [1,2,1],\r\n  [2,1,1]\r\n]", 
        "difficulty": "Medium", 
        "hints": [
            "Backtracking"
        ], 
        "name": "Permutations II", 
        "number": 47, 
        "similar_problems": [
            "(M) Next Permutation", 
            " (M) Permutations", 
            " (M) Palindrome Permutation II"
        ], 
        "total": 326339
    }, 
    {
        "accepted": 73943, 
        "companies": "Amazon", 
        "description": "Given inorder and postorder traversal of a tree, construct the binary tree.\r\n\r\nNote:\r\nYou may assume that duplicates do not exist in the tree.", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Array", 
            "Depth-first Search"
        ], 
        "name": "Construct Binary Tree from Inorder and Postorder Traversal", 
        "number": 106, 
        "similar_problems": [
            "(M) Construct Binary Tree from Preorder and Inorder Traversal"
        ], 
        "total": 238918
    }, 
    {
        "accepted": 89205, 
        "companies": "Amazon", 
        "description": "Follow up for \"Unique Paths\":\r\n\r\nNow consider if some obstacles are added to the grids. How many unique paths would there be?\r\n\r\nAn obstacle and empty space is marked as 1 and 0 respectively in the grid.\r\n\r\nFor example,\r\nThere is one obstacle in the middle of a 3x3 grid as illustrated below.\r\n\r\n[\r\n  [0,0,0],\r\n  [0,1,0],\r\n  [0,0,0]\r\n]\r\n\r\nThe total number of unique paths is 2.\r\n\r\nNote: m and n will be at most 100.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Dynamic Programming"
        ], 
        "name": "Unique Paths II", 
        "number": 63, 
        "similar_problems": [
            "(M) Unique Paths"
        ], 
        "total": 288316
    }, 
    {
        "accepted": 84135, 
        "companies": "Amazon", 
        "description": "Given a string s, partition s such that every substring of the partition is a palindrome.\r\n\r\n\r\nReturn all possible palindrome partitioning of s.\r\n\r\n\r\nFor example, given s = \"aab\",\r\n\r\nReturn\r\n\r\n[\r\n  [\"aa\",\"b\"],\r\n  [\"a\",\"a\",\"b\"]\r\n]", 
        "difficulty": "Medium", 
        "hints": [
            "Backtracking"
        ], 
        "name": "Palindrome Partitioning", 
        "number": 131, 
        "similar_problems": [
            "(H) Palindrome Partitioning II"
        ], 
        "total": 272606
    }, 
    {
        "accepted": 116008, 
        "companies": "Amazon", 
        "description": "Given an array of integers sorted in ascending order, find the starting and ending position of a given target value.\r\n\r\nYour algorithm's runtime complexity must be in the order of O(log n).\r\n\r\nIf the target is not found in the array, return [-1, -1].\r\n\r\n\r\nFor example,\r\nGiven [5, 7, 7, 8, 8, 10] and target value 8,\r\nreturn [3, 4].", 
        "difficulty": "Medium", 
        "hints": [
            "Binary Search", 
            "Array"
        ], 
        "name": "Search for a Range", 
        "number": 34, 
        "similar_problems": [
            "(E) First Bad Version"
        ], 
        "total": 375949
    }, 
    {
        "accepted": 86859, 
        "companies": "Amazon", 
        "description": "Given preorder and inorder traversal of a tree, construct the binary tree.\r\n\r\nNote:\r\nYou may assume that duplicates do not exist in the tree.", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Array", 
            "Depth-first Search"
        ], 
        "name": "Construct Binary Tree from Preorder and Inorder Traversal", 
        "number": 105, 
        "similar_problems": [
            "(M) Construct Binary Tree from Inorder and Postorder Traversal"
        ], 
        "total": 282469
    }, 
    {
        "accepted": 72790, 
        "companies": "Amazon", 
        "description": "Given an integer n, generate all structurally unique BST's (binary search trees) that store values 1...n.\r\n\r\n\r\nFor example,\r\nGiven n = 3, your program should return all 5 unique BST's shown below.\r\n\r\n\r\n   1         3     3      2      1\r\n    \\       /     /      / \\      \\\r\n     3     2     1      1   3      2\r\n    /     /       \\                 \\\r\n   2     1         2                 3", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Dynamic Programming"
        ], 
        "name": "Unique Binary Search Trees II", 
        "number": 95, 
        "similar_problems": [
            "(M) Unique Binary Search Trees", 
            " (M) Different Ways to Add Parentheses"
        ], 
        "total": 237956
    }, 
    {
        "accepted": 109067, 
        "companies": "Amazon", 
        "description": "Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.\r\n\r\n\r\n    For example, given array S = {-1 2 1 -4}, and target = 1.\r\n\r\n    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Two Pointers"
        ], 
        "name": "3Sum Closest", 
        "number": 16, 
        "similar_problems": [
            "(M) 3Sum", 
            " (M) 3Sum Smaller"
        ], 
        "total": 357036
    }, 
    {
        "accepted": 2970, 
        "companies": "Amazon", 
        "description": "Consider the string s to be the infinite wraparound string of \"abcdefghijklmnopqrstuvwxyz\", so s will look like this: \"...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....\".\r\n\r\nNow we have another string p. Your job is to find out how many unique non-empty substrings of p are present in s. In particular, your input is the string p and you need to output the number of different non-empty substrings of p in the string s.\r\n\r\nNote: p consists of only lowercase English letters and the size of p might be over 10000.\r\n\r\nExample 1:\r\n\r\nInput: \"a\"\r\nOutput: 1\r\n\r\nExplanation: Only the substring \"a\" of string \"a\" is in the string \u0010s.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"cac\"\r\nOutput: 2\r\nExplanation: There are two substrings \"a\", \"c\" of string \"cac\" in the string s.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: \"zab\"\r\nOutput: 6\r\nExplanation: There are six substrings \"z\", \"a\", \"b\", \"za\", \"ab\", \"zab\" of string \"zab\" in the string s.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Unique Substrings in Wraparound String", 
        "number": 467, 
        "similar_problems": [], 
        "total": 9753
    }, 
    {
        "accepted": 66644, 
        "companies": "Amazon", 
        "description": "There are a total of n courses you have to take, labeled from 0 to n - 1.\r\n\r\nSome courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: [0,1]\r\n\r\n\r\nGiven the total number of courses and a list of prerequisite pairs, is it possible for you to finish all courses?\r\n\r\n\r\nFor example:\r\n2, [[1,0]]\r\nThere are a total of 2 courses to take. To take course 1 you should have finished course 0. So it is possible.\r\n\r\n2, [[1,0],[0,1]]\r\nThere are a total of 2 courses to take. To take course 1 you should have finished course 0, and to take course 0 you should also have finished course 1. So it is impossible.\r\n\r\nNote:\r\nThe input prerequisites is a graph represented by a list of edges, not adjacency matrices. Read more about how a graph is represented.\r\n\r\n\r\nclick to show more hints.\r\n\r\nHints:\r\n\r\nThis problem is equivalent to finding if a cycle exists in a directed graph. If a cycle exists, no topological ordering exists and therefore it will be impossible to take all courses.\r\nTopological Sort via DFS - A great video tutorial (21 minutes) on Coursera explaining the basic concepts of Topological Sort.\r\nTopological sort could also be done via BFS.", 
        "difficulty": "Medium", 
        "hints": [
            "Depth-first Search", 
            "Breadth-first Search", 
            "Graph", 
            "Topological Sort"
        ], 
        "name": "Course Schedule", 
        "number": 207, 
        "similar_problems": [
            "(M) Course Schedule II", 
            " (M) Graph Valid Tree", 
            " (M) Minimum Height Trees"
        ], 
        "total": 219013
    }, 
    {
        "accepted": 95040, 
        "companies": "Amazon", 
        "description": "Reverse a linked list from position m to n. Do it in-place and in one-pass.\r\n\r\n\r\n\r\nFor example:\r\nGiven 1->2->3->4->5->NULL, m = 2 and n = 4,\r\n\r\n\r\nreturn 1->4->3->2->5->NULL.\r\n\r\n\r\nNote:\r\nGiven m, n satisfy the following condition:\r\n1 \u2264 m \u2264 n \u2264 length of list.", 
        "difficulty": "Medium", 
        "hints": [
            "Linked List"
        ], 
        "name": "Reverse Linked List II", 
        "number": 92, 
        "similar_problems": [
            "(E) Reverse Linked List"
        ], 
        "total": 318305
    }, 
    {
        "accepted": 19789, 
        "companies": "Amazon", 
        "description": "You are given two integer arrays nums1 and nums2 sorted in ascending order and an integer k. \r\n\r\n\r\nDefine a pair (u,v) which consists of one element from the first array and one element from the second array.\r\n\r\nFind the k pairs (u1,v1),(u2,v2) ...(uk,vk) with the smallest sums.\r\n\r\n\r\nExample 1:\r\n\r\nGiven nums1 = [1,7,11], nums2 = [2,4,6],  k = 3\r\n\r\nReturn: [1,2],[1,4],[1,6]\r\n\r\nThe first 3 pairs are returned from the sequence:\r\n[1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]\r\n\r\n\r\n\r\nExample 2:\r\n\r\nGiven nums1 = [1,1,2], nums2 = [1,2,3],  k = 2\r\n\r\nReturn: [1,1],[1,1]\r\n\r\nThe first 2 pairs are returned from the sequence:\r\n[1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]\r\n\r\n\r\n\r\nExample 3:\r\n\r\nGiven nums1 = [1,2], nums2 = [3],  k = 3 \r\n\r\nReturn: [1,3],[2,3]\r\n\r\nAll possible pairs are returned from the sequence:\r\n[1,3],[2,3]\r\n\r\n\r\n\r\nCredits:Special thanks to @elmirap and @StefanPochmann for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Heap"
        ], 
        "name": "Find K Pairs with Smallest Sums", 
        "number": 373, 
        "similar_problems": [
            "(M) Kth Smallest Element in a Sorted Matrix"
        ], 
        "total": 66393
    }, 
    {
        "accepted": 10157, 
        "companies": "Amazon", 
        "description": "Given a nested list of integers represented as a string, implement a parser to deserialize it.\r\n\r\nEach element is either an integer, or a list -- whose elements may also be integers or other lists.\r\n\r\nNote:\r\nYou may assume that the string is well-formed:\r\n\r\nString is non-empty.\r\nString does not contain white spaces.\r\nString contains only digits 0-9, [, - ,, ].\r\n\r\n\r\n\r\nExample 1:\r\n\r\nGiven s = \"324\",\r\n\r\nYou should return a NestedInteger object which contains a single integer 324.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nGiven s = \"[123,[456,[789]]]\",\r\n\r\nReturn a NestedInteger object containing a nested list with 2 elements:\r\n\r\n1. An integer containing value 123.\r\n2. A nested list containing two elements:\r\n    i.  An integer containing value 456.\r\n    ii. A nested list with one element:\r\n         a. An integer containing value 789.", 
        "difficulty": "Medium", 
        "hints": [
            "Stack", 
            "String"
        ], 
        "name": "Mini Parser", 
        "number": 385, 
        "similar_problems": [
            "(M) Flatten Nested List Iterator", 
            " (M) Ternary Expression Parser"
        ], 
        "total": 34144
    }, 
    {
        "accepted": 64811, 
        "companies": "Amazon", 
        "description": "All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: \"ACGAATTCCG\". When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.\r\n\r\nWrite a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.\r\n\r\n\r\nFor example,\r\n\r\nGiven s = \"AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT\",\r\n\r\nReturn:\r\n[\"AAAAACCCCC\", \"CCCCCAAAAA\"].", 
        "difficulty": "Medium", 
        "hints": [
            "Hash Table", 
            "Bit Manipulation"
        ], 
        "name": "Repeated DNA Sequences", 
        "number": 187, 
        "similar_problems": [], 
        "total": 218557
    }, 
    {
        "accepted": 79130, 
        "companies": "Amazon", 
        "description": "Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.\r\n\r\n\r\n\r\nAccording to the definition of LCA on Wikipedia: \u201cThe lowest common ancestor is defined between two nodes v and w as the lowest node in T that has both v and w as descendants (where we allow a node to be a descendant of itself).\u201d\r\n\r\n\r\n\r\n        _______3______\r\n       /              \\\r\n    ___5__          ___1__\r\n   /      \\        /      \\\r\n   6      _2       0       8\r\n         /  \\\r\n         7   4\r\n\r\n\r\n\r\nFor example, the lowest common ancestor (LCA) of nodes 5 and 1 is 3. Another example is LCA of nodes 5 and 4 is 5, since a node can be a descendant of itself according to the LCA definition.", 
        "difficulty": "Medium", 
        "hints": [
            "Tree"
        ], 
        "name": "Lowest Common Ancestor of a Binary Tree", 
        "number": 236, 
        "similar_problems": [
            "(E) Lowest Common Ancestor of a Binary Search Tree"
        ], 
        "total": 269957
    }, 
    {
        "accepted": 13338, 
        "companies": "Amazon", 
        "description": "Given a positive integer n and you can do operations as follow:\r\n\r\n\r\n\r\n\r\nIf n is even, replace n with n/2.\r\nIf n is odd, you can replace n with either n + 1 or n - 1.\r\n\r\n\r\n\r\n\r\nWhat is the minimum number of replacements needed for n to become 1?\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput:\r\n8\r\n\r\nOutput:\r\n3\r\n\r\nExplanation:\r\n8 -> 4 -> 2 -> 1\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:\r\n7\r\n\r\nOutput:\r\n4\r\n\r\nExplanation:\r\n7 -> 8 -> 4 -> 2 -> 1\r\nor\r\n7 -> 6 -> 3 -> 2 -> 1", 
        "difficulty": "Medium", 
        "hints": [
            "Math", 
            "Bit Manipulation"
        ], 
        "name": "Integer Replacement", 
        "number": 397, 
        "similar_problems": [], 
        "total": 45674
    }, 
    {
        "accepted": 105883, 
        "companies": "Amazon", 
        "description": "Given an array of non-negative integers, you are initially positioned at the first index of the array.\r\n\r\n\r\nEach element in the array represents your maximum jump length at that position. \r\n\r\n\r\nDetermine if you are able to reach the last index.\r\n\r\n\r\n\r\nFor example:\r\nA = [2,3,1,1,4], return true.\r\n\r\n\r\nA = [3,2,1,0,4], return false.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Greedy"
        ], 
        "name": "Jump Game", 
        "number": 55, 
        "similar_problems": [], 
        "total": 362934
    }, 
    {
        "accepted": 95082, 
        "companies": "Amazon", 
        "description": "Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.\r\n\r\n\r\nFor example,\r\nGiven 1->2->3->3->4->4->5, return 1->2->5.\r\nGiven 1->1->1->2->3, return 2->3.", 
        "difficulty": "Medium", 
        "hints": [
            "Linked List"
        ], 
        "name": "Remove Duplicates from Sorted List II", 
        "number": 82, 
        "similar_problems": [], 
        "total": 331718
    }, 
    {
        "accepted": 65926, 
        "companies": "Amazon", 
        "description": "Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum \u2265 s. If there isn't one, return 0 instead.\r\n\r\n\r\nFor example, given the array [2,3,1,2,4,3] and s = 7,\r\nthe subarray [4,3] has the minimal length under the problem constraint.\r\n\r\n\r\nclick to show more practice.\r\n\r\nMore practice:\r\n\r\nIf you have figured out the O(n) solution, try coding another solution of which the time complexity is O(n log n).\r\n\r\n\r\nCredits:Special thanks to @Freezen for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Two Pointers", 
            "Binary Search"
        ], 
        "name": "Minimum Size Subarray Sum", 
        "number": 209, 
        "similar_problems": [
            "(H) Minimum Window Substring", 
            " (M) Maximum Size Subarray Sum Equals k"
        ], 
        "total": 230264
    }, 
    {
        "accepted": 76307, 
        "companies": "Amazon", 
        "description": "There are N gas stations along a circular route, where the amount of gas at station i is gas[i].\r\n\r\n\r\n\r\nYou have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.\r\n\r\n\r\n\r\nReturn the starting gas station's index if you can travel around the circuit once, otherwise return -1.\r\n\r\n\r\n\r\nNote:\r\nThe solution is guaranteed to be unique.", 
        "difficulty": "Medium", 
        "hints": [
            "Greedy"
        ], 
        "name": "Gas Station", 
        "number": 134, 
        "similar_problems": [], 
        "total": 266791
    }, 
    {
        "accepted": 26345, 
        "companies": "Amazon", 
        "description": "For a undirected graph with tree characteristics, we can choose any node as the root. The result graph is then a rooted tree. Among all possible rooted trees, those with minimum height are called minimum height trees (MHTs).\r\n    Given such a graph, write a function to find all the MHTs and return a list of their root labels.\r\n\r\n\r\n\r\n    Format\r\n    The graph contains n nodes which are labeled from 0 to n - 1.\r\n    You will be given the number n and a list of undirected edges (each edge is a pair of labels).\r\n\r\n \r\nYou can assume that no duplicate edges will appear in edges. Since all edges are\r\n    undirected, [0, 1] is the same as [1, 0] and thus will not appear together in\r\n    edges.\r\n\r\n\r\n    Example 1:\r\n\r\n\r\n    Given n = 4, edges = [[1, 0], [1, 2], [1, 3]]\r\n\r\n\r\n\r\n        0\r\n        |\r\n        1\r\n       / \\\r\n      2   3\r\n\r\n\r\n    return  [1]\r\n\r\n\r\n\r\n    Example 2:\r\n\r\n\r\n    Given n = 6, edges = [[0, 3], [1, 3], [2, 3], [4, 3], [5, 4]]\r\n\r\n\r\n     0  1  2\r\n      \\ | /\r\n        3\r\n        |\r\n        4\r\n        |\r\n        5\r\n\r\n\r\n    return  [3, 4]\r\n\r\n\r\n    How many MHTs can a graph have at most?\r\n\r\n\r\n\r\n    Note:\r\n\r\n\r\n    (1) According to the definition\r\n    of tree on Wikipedia: \u201ca tree is an undirected graph in which any two vertices are connected by\r\n    exactly one path. In other words, any connected graph without simple cycles is a tree.\u201d\r\n\r\n\r\n    (2) The height of a rooted tree is the number of edges on the longest downward path between the root and a\r\n    leaf.\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Breadth-first Search", 
            "Graph"
        ], 
        "name": "Minimum Height Trees", 
        "number": 310, 
        "similar_problems": [
            "(M) Course Schedule", 
            " (M) Course Schedule II"
        ], 
        "total": 92538
    }, 
    {
        "accepted": 123324, 
        "companies": "Amazon", 
        "description": "Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, determine if s can be segmented into a space-separated sequence of one or more dictionary words. You may assume the dictionary does not contain duplicate words.\r\n\r\n\r\nFor example, given\r\ns = \"leetcode\",\r\ndict = [\"leet\", \"code\"].\r\n\r\n\r\n\r\nReturn true because \"leetcode\" can be segmented as \"leet code\".\r\n\r\n\r\n\r\nUPDATE (2017/1/4):\r\nThe wordDict parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Word Break", 
        "number": 139, 
        "similar_problems": [
            "(H) Word Break II"
        ], 
        "total": 436483
    }, 
    {
        "accepted": 93931, 
        "companies": "Amazon", 
        "description": "Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.\r\n\r\n\r\nIf such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).\r\n\r\n\r\nThe replacement must be in-place, do not allocate extra memory.\r\n\r\n\r\nHere are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column.\r\n1,2,3 &#8594; 1,3,2\r\n3,2,1 &#8594; 1,2,3\r\n1,1,5 &#8594; 1,5,1", 
        "difficulty": "Medium", 
        "hints": [
            "Array"
        ], 
        "name": "Next Permutation", 
        "number": 31, 
        "similar_problems": [
            "(M) Permutations", 
            " (M) Permutations II", 
            " (M) Permutation Sequence", 
            " (M) Palindrome Permutation II"
        ], 
        "total": 333956
    }, 
    {
        "accepted": 38131, 
        "companies": "Amazon", 
        "description": "Implement a basic calculator to evaluate a simple expression string.\r\n\r\nThe expression string contains only non-negative integers, +, -, *, / operators and empty spaces  . The integer division should truncate toward zero.\r\n\r\nYou may assume that the given expression is always valid.\r\n\r\nSome examples:\r\n\r\n\"3+2*2\" = 7\r\n\" 3/2 \" = 1\r\n\" 3+5 / 2 \" = 5\r\n\r\n\r\n\r\n\r\nNote: Do not use the eval built-in library function.\r\n\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "String"
        ], 
        "name": "Basic Calculator II", 
        "number": 227, 
        "similar_problems": [
            "(H) Basic Calculator", 
            " (H) Expression Add Operators"
        ], 
        "total": 135688
    }, 
    {
        "accepted": 26829, 
        "companies": "Amazon", 
        "description": "Given a list of airline tickets represented by pairs of departure and arrival airports [from, to], reconstruct the itinerary in order. All of the tickets belong to a man who departs from JFK. Thus, the itinerary must begin with JFK.\r\n\r\n\r\nNote:\r\n\r\nIf there are multiple valid itineraries, you should return the itinerary that has the smallest lexical order when read as a single string. For example, the itinerary [\"JFK\", \"LGA\"] has a smaller lexical order than [\"JFK\", \"LGB\"].\r\nAll airports are represented by three capital letters (IATA code).\r\nYou may assume all tickets form at least one valid itinerary.\r\n\r\n\r\n\r\n\r\n    Example 1:\r\n    tickets = [[\"MUC\", \"LHR\"], [\"JFK\", \"MUC\"], [\"SFO\", \"SJC\"], [\"LHR\", \"SFO\"]]\r\n    Return [\"JFK\", \"MUC\", \"LHR\", \"SFO\", \"SJC\"].\r\n\r\n\r\n    Example 2:\r\n    tickets = [[\"JFK\",\"SFO\"],[\"JFK\",\"ATL\"],[\"SFO\",\"ATL\"],[\"ATL\",\"JFK\"],[\"ATL\",\"SFO\"]]\r\n    Return [\"JFK\",\"ATL\",\"JFK\",\"SFO\",\"ATL\",\"SFO\"].\r\n    Another possible reconstruction is [\"JFK\",\"SFO\",\"ATL\",\"JFK\",\"ATL\",\"SFO\"]. But it is larger in lexical order.\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Depth-first Search", 
            "Graph"
        ], 
        "name": "Reconstruct Itinerary", 
        "number": 332, 
        "similar_problems": [], 
        "total": 95568
    }, 
    {
        "accepted": 67766, 
        "companies": "Amazon", 
        "description": "Given a sorted integer array without duplicates, return the summary of its ranges.\r\n\r\n\r\nFor example, given [0,1,2,4,5,7], return [\"0->2\",\"4->5\",\"7\"].\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Array"
        ], 
        "name": "Summary Ranges", 
        "number": 228, 
        "similar_problems": [
            "(M) Missing Ranges", 
            " (H) Data Stream as Disjoint Intervals"
        ], 
        "total": 241416
    }, 
    {
        "accepted": 4824, 
        "companies": "Amazon", 
        "description": "Given a sequence of n integers a1, a2, ..., an, a 132 pattern is a subsequence ai, aj, ak such\r\nthat i < j < k and ai < ak < aj. Design an algorithm that takes a list of n numbers as input and checks whether there is a 132 pattern in the list.\r\n\r\nNote: n will be less than 15,000.\r\n\r\nExample 1:\r\n\r\nInput: [1, 2, 3, 4]\r\n\r\nOutput: False\r\n\r\nExplanation: There is no 132 pattern in the sequence.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [3, 1, 4, 2]\r\n\r\nOutput: True\r\n\r\nExplanation: There is a 132 pattern in the sequence: [1, 4, 2].\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: [-1, 3, 2, 0]\r\n\r\nOutput: True\r\n\r\nExplanation: There are three 132 patterns in the sequence: [-1, 3, 2], [-1, 3, 0] and [-1, 2, 0].", 
        "difficulty": "Medium", 
        "hints": [
            "Stack"
        ], 
        "name": "132 Pattern", 
        "number": 456, 
        "similar_problems": [], 
        "total": 17288
    }, 
    {
        "accepted": 45752, 
        "companies": "Amazon", 
        "description": "Given an integer array of size n, find all elements that appear more than &lfloor; n/3 &rfloor; times. The algorithm should run in linear time and in O(1) space.\r\n\r\n\r\n  How many majority elements could it possibly have?\r\n  Do you have a better hint? Suggest it!", 
        "difficulty": "Medium", 
        "hints": [
            "Array"
        ], 
        "name": "Majority Element II", 
        "number": 229, 
        "similar_problems": [
            "(E) Majority Element"
        ], 
        "total": 164828
    }, 
    {
        "accepted": 91893, 
        "companies": "Amazon", 
        "description": "Sort a linked list in O(n log n) time using constant space complexity.", 
        "difficulty": "Medium", 
        "hints": [
            "Linked List", 
            "Sort"
        ], 
        "name": "Sort List", 
        "number": 148, 
        "similar_problems": [
            "(E) Merge Two Sorted Lists", 
            " (M) Sort Colors", 
            " (M) Insertion Sort List"
        ], 
        "total": 336023
    }, 
    {
        "accepted": 72757, 
        "companies": "Amazon", 
        "description": "The set [1,2,3,&#8230;,n] contains a total of n! unique permutations.\r\n\r\nBy listing and labeling all of the permutations in order,\r\nWe get the following sequence (ie, for n = 3):\r\n\r\n\"123\"\r\n\"132\"\r\n\"213\"\r\n\"231\"\r\n\"312\"\r\n\"321\"\r\n\r\n\r\n\r\nGiven n and k, return the kth permutation sequence.\r\n\r\nNote: Given n will be between 1 and 9 inclusive.", 
        "difficulty": "Medium", 
        "hints": [
            "Backtracking", 
            "Math"
        ], 
        "name": "Permutation Sequence", 
        "number": 60, 
        "similar_problems": [
            "(M) Next Permutation", 
            " (M) Permutations"
        ], 
        "total": 268174
    }, 
    {
        "accepted": 49683, 
        "companies": "Amazon", 
        "description": "Given a 2D binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area.\r\n\r\n\r\nFor example, given the following matrix:\r\n\r\n1 0 1 0 0\r\n1 0 1 1 1\r\n1 1 1 1 1\r\n1 0 0 1 0\r\n\r\nReturn 4.\r\n\r\n\r\nCredits:Special thanks to @Freezen for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Maximal Square", 
        "number": 221, 
        "similar_problems": [
            "(H) Maximal Rectangle"
        ], 
        "total": 183304
    }, 
    {
        "accepted": 128567, 
        "companies": "Amazon", 
        "description": "Implement pow(x, n).", 
        "difficulty": "Medium", 
        "hints": [
            "Binary Search", 
            "Math"
        ], 
        "name": "Pow(x, n)", 
        "number": 50, 
        "similar_problems": [
            "(M) Sqrt(x)", 
            " (M) Super Pow"
        ], 
        "total": 475427
    }, 
    {
        "accepted": 52027, 
        "companies": "Amazon", 
        "description": "Given a complete binary tree, count the number of nodes.\r\n\r\nDefinition of a complete binary tree from Wikipedia:\r\nIn a complete binary tree every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Binary Search"
        ], 
        "name": "Count Complete Tree Nodes", 
        "number": 222, 
        "similar_problems": [
            "(E) Closest Binary Search Tree Value"
        ], 
        "total": 193043
    }, 
    {
        "accepted": 127488, 
        "companies": "Amazon", 
        "description": "Implement int sqrt(int x).\r\n\r\nCompute and return the square root of x.", 
        "difficulty": "Medium", 
        "hints": [
            "Binary Search", 
            "Math"
        ], 
        "name": "Sqrt(x)", 
        "number": 69, 
        "similar_problems": [
            "(M) Pow(x, n)", 
            " (M) Valid Perfect Square"
        ], 
        "total": 473824
    }, 
    {
        "accepted": 231380, 
        "companies": "Amazon", 
        "description": "You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.\r\n\r\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\r\n\r\n\r\nInput: (2 -> 4 -> 3) + (5 -> 6 -> 4)\r\nOutput: 7 -> 0 -> 8", 
        "difficulty": "Medium", 
        "hints": [
            "Linked List", 
            "Math"
        ], 
        "name": "Add Two Numbers", 
        "number": 2, 
        "similar_problems": [
            "(M) Multiply Strings", 
            " (E) Add Binary", 
            " (E) Sum of Two Integers", 
            " (E) Add Strings", 
            " (M) Add Two Numbers II"
        ], 
        "total": 880096
    }, 
    {
        "accepted": 10667, 
        "companies": "Amazon", 
        "description": "You are given two jugs with capacities x and y litres. There is an infinite amount of water supply available.\r\nYou need to determine whether it is possible to measure exactly z litres using these two jugs.\r\n\r\nIf z liters of water is measurable, you must have z liters of water contained within one or both buckets by the end.\r\n\r\n\r\nOperations allowed:\r\n\r\nFill any of the jugs completely with water.\r\nEmpty any of the jugs.\r\nPour water from one jug into another till the other jug is completely full or the first jug itself is empty.\r\n\r\n\r\n\r\nExample 1: (From the famous \"Die Hard\" example)\r\n\r\nInput: x = 3, y = 5, z = 4\r\nOutput: True\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: x = 2, y = 6, z = 5\r\nOutput: False\r\n\r\n\r\n\r\nCredits:Special thanks to @vinod23 for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Math"
        ], 
        "name": "Water and Jug Problem", 
        "number": 365, 
        "similar_problems": [], 
        "total": 40773
    }, 
    {
        "accepted": 11976, 
        "companies": "Amazon", 
        "description": "Given a non-negative integer num represented as a string, remove k digits from the number so that the new number is the smallest possible.\r\n\r\n\r\nNote:\r\n\r\nThe length of num is less than 10002 and will be &ge; k.\r\nThe given num does not contain any leading zero.\r\n\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: num = \"1432219\", k = 3\r\nOutput: \"1219\"\r\nExplanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: num = \"10200\", k = 1\r\nOutput: \"200\"\r\nExplanation: Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: num = \"10\", k = 2\r\nOutput: \"0\"\r\nExplanation: Remove all the digits from the number and it is left with nothing which is 0.", 
        "difficulty": "Medium", 
        "hints": [
            "Stack", 
            "Greedy"
        ], 
        "name": "Remove K Digits", 
        "number": 402, 
        "similar_problems": [
            "(H) Create Maximum Number"
        ], 
        "total": 45893
    }, 
    {
        "accepted": 46680, 
        "companies": "Amazon", 
        "description": "You are given coins of different denominations and a total amount of money amount. Write a function to compute the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1.\r\n\r\n\r\n\r\nExample 1:\r\ncoins = [1, 2, 5], amount = 11\r\nreturn 3 (11 = 5 + 5 + 1)\r\n\r\n\r\n\r\nExample 2:\r\ncoins = [2], amount = 3\r\nreturn -1.\r\n\r\n\r\n\r\nNote:\r\nYou may assume that you have an infinite number of each kind of coin.\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Coin Change", 
        "number": 322, 
        "similar_problems": [], 
        "total": 179811
    }, 
    {
        "accepted": 87094, 
        "companies": "Amazon", 
        "description": "Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2.\r\n\r\nNote:\r\n\r\nThe length of both num1 and num2 is < 110.\r\nBoth num1 and num2 contains only digits 0-9.\r\nBoth num1 and num2 does not contain any leading zero.\r\nYou must not use any built-in BigInteger library or convert the inputs to integer directly.", 
        "difficulty": "Medium", 
        "hints": [
            "Math", 
            "String"
        ], 
        "name": "Multiply Strings", 
        "number": 43, 
        "similar_problems": [
            "(M) Add Two Numbers", 
            " (E) Plus One", 
            " (E) Add Binary", 
            " (E) Add Strings"
        ], 
        "total": 335969
    }, 
    {
        "accepted": 82484, 
        "companies": "Amazon", 
        "description": "Evaluate the value of an arithmetic expression in Reverse Polish Notation.\r\n\r\n\r\n\r\nValid operators are +, -, *, /. Each operand may be an integer or another expression.\r\n\r\n\r\n\r\nSome examples:\r\n\r\n  [\"2\", \"1\", \"+\", \"3\", \"*\"] -> ((2 + 1) * 3) -> 9\r\n  [\"4\", \"13\", \"5\", \"/\", \"+\"] -> (4 + (13 / 5)) -> 6", 
        "difficulty": "Medium", 
        "hints": [
            "Stack"
        ], 
        "name": "Evaluate Reverse Polish Notation", 
        "number": 150, 
        "similar_problems": [
            "(H) Basic Calculator", 
            " (H) Expression Add Operators"
        ], 
        "total": 318499
    }, 
    {
        "accepted": 74208, 
        "companies": "Amazon", 
        "description": "Given a string containing only digits, restore it by returning all possible valid IP address combinations.\r\n\r\n\r\nFor example:\r\nGiven \"25525511135\",\r\n\r\n\r\nreturn [\"255.255.11.135\", \"255.255.111.35\"]. (Order does not matter)", 
        "difficulty": "Medium", 
        "hints": [
            "Backtracking", 
            "String"
        ], 
        "name": "Restore IP Addresses", 
        "number": 93, 
        "similar_problems": [], 
        "total": 286823
    }, 
    {
        "accepted": 101172, 
        "companies": "Amazon", 
        "description": "Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.\r\n\r\nNote: The solution set must not contain duplicate quadruplets.\r\n\r\n\r\n\r\nFor example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.\r\n\r\nA solution set is:\r\n[\r\n  [-1,  0, 0, 1],\r\n  [-2, -1, 1, 2],\r\n  [-2,  0, 0, 2]\r\n]", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Hash Table", 
            "Two Pointers"
        ], 
        "name": "4Sum", 
        "number": 18, 
        "similar_problems": [
            "(E) Two Sum", 
            " (M) 3Sum", 
            " (M) 4Sum II"
        ], 
        "total": 393374
    }, 
    {
        "accepted": 49257, 
        "companies": "Amazon", 
        "description": "There are a total of n courses you have to take, labeled from 0 to n - 1.\r\n\r\nSome courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: [0,1]\r\n\r\n\r\nGiven the total number of courses and a list of prerequisite pairs, return the ordering of courses you should take to finish all courses.\r\n\r\nThere may be multiple correct orders, you just need to return one of them. If it is impossible to finish all courses, return an empty array.\r\n\r\n\r\nFor example:\r\n2, [[1,0]]\r\nThere are a total of 2 courses to take. To take course 1 you should have finished course 0. So the correct course order is [0,1]\r\n\r\n4, [[1,0],[2,0],[3,1],[3,2]]\r\nThere are a total of 4 courses to take. To take course 3 you should have finished both courses 1 and 2. Both courses 1 and 2 should be taken after you finished course 0. So one correct course order is [0,1,2,3]. Another correct ordering is[0,2,1,3].\r\n\r\nNote:\r\nThe input prerequisites is a graph represented by a list of edges, not adjacency matrices. Read more about how a graph is represented.\r\n\r\n\r\nclick to show more hints.\r\n\r\nHints:\r\n\r\nThis problem is equivalent to finding the topological order in a directed graph. If a cycle exists, no topological ordering exists and therefore it will be impossible to take all courses.\r\nTopological Sort via DFS - A great video tutorial (21 minutes) on Coursera explaining the basic concepts of Topological Sort.\r\nTopological sort could also be done via BFS.", 
        "difficulty": "Medium", 
        "hints": [
            "Depth-first Search", 
            "Breadth-first Search", 
            "Graph", 
            "Topological Sort"
        ], 
        "name": "Course Schedule II", 
        "number": 210, 
        "similar_problems": [
            "(M) Course Schedule", 
            " (H) Alien Dictionary", 
            " (M) Minimum Height Trees", 
            " (M) Sequence Reconstruction"
        ], 
        "total": 192110
    }, 
    {
        "accepted": 60873, 
        "companies": "Amazon", 
        "description": "Implement a trie with insert, search, and startsWith methods.\r\n\r\n\r\n\r\nNote:\r\nYou may assume that all inputs are consist of lowercase letters a-z.", 
        "difficulty": "Medium", 
        "hints": [
            "Design", 
            "Trie"
        ], 
        "name": "Implement Trie (Prefix Tree)", 
        "number": 208, 
        "similar_problems": [
            "(M) Add and Search Word - Data structure design"
        ], 
        "total": 237838
    }, 
    {
        "accepted": 106023, 
        "companies": "Amazon", 
        "description": "Given a 2D board and a word, find if the word exists in the grid.\r\n\r\n\r\nThe word can be constructed from letters of sequentially adjacent cell, where \"adjacent\" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.\r\n\r\n\r\n\r\nFor example,\r\nGiven board = \r\n\r\n[\r\n  ['A','B','C','E'],\r\n  ['S','F','C','S'],\r\n  ['A','D','E','E']\r\n]\r\n\r\n\r\nword = \"ABCCED\", -> returns true,\r\nword = \"SEE\", -> returns true,\r\nword = \"ABCB\", -> returns false.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Backtracking"
        ], 
        "name": "Word Search", 
        "number": 79, 
        "similar_problems": [
            "(H) Word Search II"
        ], 
        "total": 418164
    }, 
    {
        "accepted": 22746, 
        "companies": "Amazon", 
        "description": "Given an unsorted array nums, reorder it such that\r\n    nums[0] < nums[1] > nums[2] < nums[3]....\r\n\r\n\r\n\r\n    Example:\r\n    (1) Given nums = [1, 5, 1, 1, 6, 4], one possible answer is [1, 4, 1, 5, 1, 6]. \r\n    (2) Given nums = [1, 3, 2, 2, 3, 1], one possible answer is [2, 3, 1, 3, 1, 2].\r\n\r\n\r\n\r\n    Note:\r\n    You may assume all input has valid answer.\r\n\r\n\r\n\r\n    Follow Up:\r\n    Can you do it in O(n) time and/or in-place with O(1) extra space?\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Sort"
        ], 
        "name": "Wiggle Sort II", 
        "number": 324, 
        "similar_problems": [
            "(M) Sort Colors", 
            " (M) Kth Largest Element in an Array", 
            " (M) Wiggle Sort"
        ], 
        "total": 90215
    }, 
    {
        "accepted": 94058, 
        "companies": "Amazon", 
        "description": "Clone an undirected graph. Each node in the graph contains a label and a list of its neighbors.\r\n\r\n\r\n\r\n\r\nOJ's undirected graph serialization:\r\n\r\n\r\nNodes are labeled uniquely.\r\n\r\n\r\nWe use # as a separator for each node, and , as a separator for node label and each neighbor of the node.\r\n\r\n\r\n\r\n\r\nAs an example, consider the serialized graph {0,1,2#1,2#2,2}.\r\n\r\n\r\n\r\nThe graph has a total of three nodes, and therefore contains three parts as separated by #.\r\n\r\nFirst node is labeled as 0. Connect node 0 to both nodes 1 and 2.\r\nSecond node is labeled as 1. Connect node 1 to node 2.\r\nThird node is labeled as 2. Connect node 2 to node 2 (itself), thus forming a self-cycle.\r\n\r\n\r\n\r\n\r\nVisually, the graph looks like the following:\r\n\r\n       1\r\n      / \\\r\n     /   \\\r\n    0 --- 2\r\n         / \\\r\n         \\_/", 
        "difficulty": "Medium", 
        "hints": [
            "Depth-first Search", 
            "Breadth-first Search", 
            "Graph"
        ], 
        "name": "Clone Graph", 
        "number": 133, 
        "similar_problems": [
            "(H) Copy List with Random Pointer"
        ], 
        "total": 375645
    }, 
    {
        "accepted": 82534, 
        "companies": "Amazon", 
        "description": "Given a singly linked list L: L0\u2192L1\u2192\u2026\u2192Ln-1\u2192Ln,\r\nreorder it to: L0\u2192Ln\u2192L1\u2192Ln-1\u2192L2\u2192Ln-2\u2192\u2026\r\n\r\n\r\nYou must do this in-place without altering the nodes' values.\r\n\r\n\r\nFor example,\r\nGiven {1,2,3,4}, reorder it to {1,4,2,3}.", 
        "difficulty": "Medium", 
        "hints": [
            "Linked List"
        ], 
        "name": "Reorder List", 
        "number": 143, 
        "similar_problems": [], 
        "total": 334757
    }, 
    {
        "accepted": 164527, 
        "companies": "Amazon", 
        "description": "Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.\r\n\r\nExample:\r\n\r\nInput: \"babad\"\r\n\r\nOutput: \"bab\"\r\n\r\nNote: \"aba\" is also a valid answer.\r\n\r\n\r\n\r\nExample:\r\n\r\nInput: \"cbbd\"\r\n\r\nOutput: \"bb\"", 
        "difficulty": "Medium", 
        "hints": [
            "String"
        ], 
        "name": "Longest Palindromic Substring", 
        "number": 5, 
        "similar_problems": [
            "(H) Shortest Palindrome", 
            " (E) Palindrome Permutation", 
            " (H) Palindrome Pairs"
        ], 
        "total": 669677
    }, 
    {
        "accepted": 84646, 
        "companies": "Amazon", 
        "description": "Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.\r\n\r\n\r\n\r\nFor example,\r\nGiven the following matrix:\r\n\r\n\r\n[\r\n [ 1, 2, 3 ],\r\n [ 4, 5, 6 ],\r\n [ 7, 8, 9 ]\r\n]\r\n\r\n\r\nYou should return [1,2,3,6,9,8,7,4,5].", 
        "difficulty": "Medium", 
        "hints": [
            "Array"
        ], 
        "name": "Spiral Matrix", 
        "number": 54, 
        "similar_problems": [
            "(M) Spiral Matrix II"
        ], 
        "total": 344702
    }, 
    {
        "accepted": 12723, 
        "companies": "Amazon", 
        "description": "Design a simplified version of Twitter where users can post tweets, follow/unfollow another user and is able to see the 10 most recent tweets in the user's news feed. Your design should support the following methods:\r\n\r\n\r\n\r\npostTweet(userId, tweetId): Compose a new tweet.\r\ngetNewsFeed(userId): Retrieve the 10 most recent tweet ids in the user's news feed. Each item in the news feed must be posted by users who the user followed or by the user herself. Tweets must be ordered from most recent to least recent.\r\nfollow(followerId, followeeId): Follower follows a followee.\r\nunfollow(followerId, followeeId): Follower unfollows a followee.\r\n\r\n\r\n\r\nExample:\r\n\r\nTwitter twitter = new Twitter();\r\n\r\n// User 1 posts a new tweet (id = 5).\r\ntwitter.postTweet(1, 5);\r\n\r\n// User 1's news feed should return a list with 1 tweet id -> [5].\r\ntwitter.getNewsFeed(1);\r\n\r\n// User 1 follows user 2.\r\ntwitter.follow(1, 2);\r\n\r\n// User 2 posts a new tweet (id = 6).\r\ntwitter.postTweet(2, 6);\r\n\r\n// User 1's news feed should return a list with 2 tweet ids -> [6, 5].\r\n// Tweet id 6 should precede tweet id 5 because it is posted after tweet id 5.\r\ntwitter.getNewsFeed(1);\r\n\r\n// User 1 unfollows user 2.\r\ntwitter.unfollow(1, 2);\r\n\r\n// User 1's news feed should return a list with 1 tweet id -> [5],\r\n// since user 1 is no longer following user 2.\r\ntwitter.getNewsFeed(1);", 
        "difficulty": "Medium", 
        "hints": [
            "Hash Table", 
            "Heap", 
            "Design"
        ], 
        "name": "Design Twitter", 
        "number": 355, 
        "similar_problems": [], 
        "total": 51874
    }, 
    {
        "accepted": 84890, 
        "companies": "Amazon", 
        "description": "Find the contiguous subarray within an array (containing at least one number) which has the largest product.\r\n\r\n\r\n\r\nFor example, given the array [2,3,-2,4],\r\nthe contiguous subarray [2,3] has the largest product = 6.", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Dynamic Programming"
        ], 
        "name": "Maximum Product Subarray", 
        "number": 152, 
        "similar_problems": [
            "(M) Maximum Subarray", 
            " (E) House Robber", 
            " (M) Product of Array Except Self"
        ], 
        "total": 347068
    }, 
    {
        "accepted": 93193, 
        "companies": "Amazon", 
        "description": "Given a list, rotate the list to the right by k places, where k is non-negative.\r\n\r\nFor example:\r\nGiven 1->2->3->4->5->NULL and k = 2,\r\nreturn 4->5->1->2->3->NULL.", 
        "difficulty": "Medium", 
        "hints": [
            "Linked List", 
            "Two Pointers"
        ], 
        "name": "Rotate List", 
        "number": 61, 
        "similar_problems": [
            "(E) Rotate Array"
        ], 
        "total": 387531
    }, 
    {
        "accepted": 73004, 
        "companies": "Amazon", 
        "description": "Given an absolute path for a file (Unix-style), simplify it.\r\n\r\nFor example,\r\npath = \"/home/\", => \"/home\"\r\npath = \"/a/./b/../../c/\", => \"/c\"\r\n\r\n\r\nclick to show corner cases.\r\n\r\nCorner Cases:\r\n\r\n\r\n\r\nDid you consider the case where path = \"/../\"?\r\nIn this case, you should return \"/\".\r\nAnother corner case is the path might contain multiple slashes '/' together, such as \"/home//foo/\".\r\nIn this case, you should ignore redundant slashes and return \"/home/foo\".", 
        "difficulty": "Medium", 
        "hints": [
            "Stack", 
            "String"
        ], 
        "name": "Simplify Path", 
        "number": 71, 
        "similar_problems": [], 
        "total": 304039
    }, 
    {
        "accepted": 235516, 
        "companies": "Amazon", 
        "description": "Given a string, find the length of the longest substring without repeating characters.\r\n\r\nExamples:\r\n\r\nGiven \"abcabcbb\", the answer is \"abc\", which the length is 3.\r\n\r\nGiven \"bbbbb\", the answer is \"b\", with the length of 1.\r\n\r\nGiven \"pwwkew\", the answer is \"wke\", with the length of 3. Note that the answer must be a substring, \"pwke\" is a subsequence and not a substring.", 
        "difficulty": "Medium", 
        "hints": [
            "Hash Table", 
            "Two Pointers", 
            "String"
        ], 
        "name": "Longest Substring Without Repeating Characters", 
        "number": 3, 
        "similar_problems": [
            "(H) Longest Substring with At Most Two Distinct Characters"
        ], 
        "total": 993926
    }, 
    {
        "accepted": 26076, 
        "companies": "Amazon", 
        "description": "Given a 2D matrix matrix, find the sum of the elements inside the rectangle defined by its upper left corner (row1, col1) and lower right corner (row2, col2).\r\n\r\n\r\n\r\nThe above rectangle (with the red border) is defined by (row1, col1) = (2, 1) and (row2, col2) = (4, 3), which contains sum = 8.\r\n\r\n\r\nExample:\r\n\r\nGiven matrix = [\r\n  [3, 0, 1, 4, 2],\r\n  [5, 6, 3, 2, 1],\r\n  [1, 2, 0, 1, 5],\r\n  [4, 1, 0, 1, 7],\r\n  [1, 0, 3, 0, 5]\r\n]\r\n\r\nsumRegion(2, 1, 4, 3) -> 8\r\nsumRegion(1, 1, 2, 2) -> 11\r\nsumRegion(1, 2, 2, 4) -> 12\r\n\r\n\r\n\r\nNote:\r\n\r\nYou may assume that the matrix does not change.\r\nThere are many calls to sumRegion function.\r\nYou may assume that row1 &le; row2 and col1 &le; col2.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Range Sum Query 2D - Immutable", 
        "number": 304, 
        "similar_problems": [
            "(E) Range Sum Query - Immutable", 
            " (H) Range Sum Query 2D - Mutable"
        ], 
        "total": 114912
    }, 
    {
        "accepted": 4546, 
        "companies": "Amazon", 
        "description": "In the \"100 game,\" two players take turns adding, to a running total, any integer from 1..10. The player who first causes the running total to reach or exceed 100 wins. \r\n\r\nWhat if we change the game so that players cannot re-use integers? \r\n\r\nFor example, two players might take turns drawing from a common pool of numbers of 1..15 without replacement until they reach a total >= 100.\r\n\r\nGiven an integer maxChoosableInteger and another integer desiredTotal, determine if the first player to move can force a win, assuming both players play optimally. \r\n\r\nYou can always assume that maxChoosableInteger will not be larger than 20 and desiredTotal will not be larger than 300.\r\n\r\n\r\nExample\r\n\r\nInput:\r\nmaxChoosableInteger = 10\r\ndesiredTotal = 11\r\n\r\nOutput:\r\nfalse\r\n\r\nExplanation:\r\nNo matter which integer the first player choose, the first player will lose.\r\nThe first player can choose an integer from 1 up to 10.\r\nIf the first player choose 1, the second player can only choose integers from 2 up to 10.\r\nThe second player will win by choosing 10 and get a total = 11, which is >= desiredTotal.\r\nSame with other integers chosen by the first player, the second player will always win.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Can I Win", 
        "number": 464, 
        "similar_problems": [
            "(M) Flip Game II", 
            " (M) Guess Number Higher or Lower II"
        ], 
        "total": 20116
    }, 
    {
        "accepted": 134801, 
        "companies": "Amazon", 
        "description": "Given a binary tree, determine if it is a valid binary search tree (BST).\r\n\r\n\r\n\r\nAssume a BST is defined as follows:\r\n\r\nThe left subtree of a node contains only nodes with keys less than the node's key.\r\nThe right subtree of a node contains only nodes with keys greater than the node's key.\r\nBoth the left and right subtrees must also be binary search trees.\r\n\r\n\r\n\r\nExample 1:\r\n\r\n    2\r\n   / \\\r\n  1   3\r\n\r\nBinary tree [2,1,3], return true.\r\n\r\n\r\nExample 2:\r\n\r\n    1\r\n   / \\\r\n  2   3\r\n\r\nBinary tree [1,2,3], return false.", 
        "difficulty": "Medium", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "Validate Binary Search Tree", 
        "number": 98, 
        "similar_problems": [
            "(M) Binary Tree Inorder Traversal"
        ], 
        "total": 603102
    }, 
    {
        "accepted": 2328, 
        "companies": "Amazon", 
        "description": "Write a function to check whether an input string is a valid IPv4 address or IPv6 address or neither.\r\n\r\n\r\n\r\nIPv4 addresses are canonically represented in dot-decimal notation, which consists of four decimal numbers, each ranging from 0 to 255, separated by dots (\".\"), e.g.,172.16.254.1;\r\n\r\n\r\n\r\nBesides, leading zeros in the IPv4 is invalid. For example, the address 172.16.254.01 is invalid.\r\n\r\n\r\n\r\nIPv6 addresses are represented as eight groups of four hexadecimal digits, each group representing 16 bits. The groups are separated by colons (\":\"). For example, the address 2001:0db8:85a3:0000:0000:8a2e:0370:7334 is a valid one. Also, we could omit some leading zeros among four hexadecimal digits and some low-case characters in the address to upper-case ones, so 2001:db8:85a3:0:0:8A2E:0370:7334 is also a valid IPv6 address(Omit leading zeros and using upper cases).\r\n\r\n\r\n\r\n\r\nHowever, we don't replace a consecutive group of zero value with a single empty group using two consecutive colons (::) to pursue simplicity. For example, 2001:0db8:85a3::8A2E:0370:7334 is an invalid IPv6 address.\r\n\r\n\r\n\r\nBesides, extra leading zeros in the IPv6 is also invalid. For example, the address 02001:0db8:85a3:0000:0000:8a2e:0370:7334 is invalid.\r\n\r\n\r\n\r\nNote:\r\nYou may assume there is no extra space or special characters in the input string.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"172.16.254.1\"\r\n\r\nOutput: \"IPv4\"\r\n\r\nExplanation: This is a valid IPv4 address, return \"IPv4\".\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"2001:0db8:85a3:0:0:8A2E:0370:7334\"\r\n\r\nOutput: \"IPv6\"\r\n\r\nExplanation: This is a valid IPv6 address, return \"IPv6\".\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: \"256.256.256.256\"\r\n\r\nOutput: \"Neither\"\r\n\r\nExplanation: This is neither a IPv4 address nor a IPv6 address.", 
        "difficulty": "Medium", 
        "hints": [
            "String"
        ], 
        "name": "Validate IP Address", 
        "number": 468, 
        "similar_problems": [], 
        "total": 10640
    }, 
    {
        "accepted": 63967, 
        "companies": "Amazon", 
        "description": "Given a list of non negative integers, arrange them such that they form the largest number.\r\n\r\nFor example, given [3, 30, 34, 5, 9], the largest formed number is 9534330.\r\n\r\nNote: The result may be very large, so you need to return a string instead of an integer.\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Sort"
        ], 
        "name": "Largest Number", 
        "number": 179, 
        "similar_problems": [], 
        "total": 298507
    }, 
    {
        "accepted": 174960, 
        "companies": "Amazon", 
        "description": "Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.\r\n\r\nNote: The solution set must not contain duplicate triplets.\r\n\r\n\r\nFor example, given array S = [-1, 0, 1, 2, -1, -4],\r\n\r\nA solution set is:\r\n[\r\n  [-1, 0, 1],\r\n  [-1, -1, 2]\r\n]", 
        "difficulty": "Medium", 
        "hints": [
            "Array", 
            "Two Pointers"
        ], 
        "name": "3Sum", 
        "number": 15, 
        "similar_problems": [
            "(E) Two Sum", 
            " (M) 3Sum Closest", 
            " (M) 4Sum", 
            " (M) 3Sum Smaller"
        ], 
        "total": 836745
    }, 
    {
        "accepted": 42924, 
        "companies": "Amazon", 
        "description": "Design a data structure that supports the following two operations:\r\n\r\n\r\nvoid addWord(word)\r\nbool search(word)\r\n\r\n\r\n\r\nsearch(word) can search a literal word or a regular expression string containing only letters a-z or .. A . means it can represent any one letter.\r\n\r\n\r\nFor example:\r\n\r\naddWord(\"bad\")\r\naddWord(\"dad\")\r\naddWord(\"mad\")\r\nsearch(\"pad\") -> false\r\nsearch(\"bad\") -> true\r\nsearch(\".ad\") -> true\r\nsearch(\"b..\") -> true\r\n\r\n\r\n\r\nNote:\r\nYou may assume that all words are consist of lowercase letters a-z.\r\n\r\n\r\nclick to show hint.\r\n\r\nYou should be familiar with how a Trie works. If not, please work on this problem: Implement Trie (Prefix Tree) first.", 
        "difficulty": "Medium", 
        "hints": [
            "Backtracking", 
            "Trie", 
            "Design"
        ], 
        "name": "Add and Search Word - Data structure design", 
        "number": 211, 
        "similar_problems": [
            "(M) Implement Trie (Prefix Tree)"
        ], 
        "total": 213868
    }, 
    {
        "accepted": 45377, 
        "companies": "Amazon", 
        "description": "Given an array of integers, find out whether there are two distinct indices i and j in the array such that the absolute difference between nums[i] and nums[j] is at most t and the absolute difference between i and j is at most k.", 
        "difficulty": "Medium", 
        "hints": [
            "Binary Search Tree"
        ], 
        "name": "Contains Duplicate III", 
        "number": 220, 
        "similar_problems": [
            "(E) Contains Duplicate", 
            " (E) Contains Duplicate II"
        ], 
        "total": 232441
    }, 
    {
        "accepted": 100648, 
        "companies": "Amazon", 
        "description": "A message containing letters from A-Z is being encoded to numbers using the following mapping:\r\n\r\n\r\n\r\n'A' -> 1\r\n'B' -> 2\r\n...\r\n'Z' -> 26\r\n\r\n\r\n\r\nGiven an encoded message containing digits, determine the total number of ways to decode it.\r\n\r\n\r\n\r\nFor example,\r\nGiven encoded message \"12\",\r\nit could be decoded as \"AB\" (1 2) or \"L\" (12).\r\n\r\n\r\n\r\nThe number of ways decoding \"12\" is 2.", 
        "difficulty": "Medium", 
        "hints": [
            "Dynamic Programming", 
            "String"
        ], 
        "name": "Decode Ways", 
        "number": 91, 
        "similar_problems": [], 
        "total": 533640
    }, 
    {
        "accepted": 26089, 
        "companies": "Amazon", 
        "description": "Given an integer array nums, find the sum of the elements between indices i and j (i &le; j), inclusive.\r\n\r\nThe update(i, val) function modifies nums by updating the element at index i to val.\r\n\r\nExample:\r\n\r\nGiven nums = [1, 3, 5]\r\n\r\nsumRange(0, 2) -> 9\r\nupdate(1, 2)\r\nsumRange(0, 2) -> 8\r\n\r\n\r\n\r\nNote:\r\n\r\nThe array is only modifiable by the update function.\r\nYou may assume the number of calls to update and sumRange function is distributed evenly.", 
        "difficulty": "Medium", 
        "hints": [
            "Segment Tree", 
            "Binary Indexed Tree"
        ], 
        "name": "Range Sum Query - Mutable", 
        "number": 307, 
        "similar_problems": [
            "(E) Range Sum Query - Immutable", 
            " (H) Range Sum Query 2D - Mutable"
        ], 
        "total": 141557
    }, 
    {
        "accepted": 71402, 
        "companies": "Amazon", 
        "description": "Given a 2D board containing 'X' and 'O' (the letter O), capture all regions surrounded by 'X'.\r\n\r\nA region is captured by flipping all 'O's into 'X's in that surrounded region.\r\n\r\n\r\n\r\nFor example,\r\n\r\nX X X X\r\nX O O X\r\nX X O X\r\nX O X X\r\n\r\n\r\n\r\n\r\nAfter running your function, the board should be:\r\n\r\nX X X X\r\nX X X X\r\nX X X X\r\nX O X X", 
        "difficulty": "Medium", 
        "hints": [
            "Breadth-first Search", 
            "Union Find"
        ], 
        "name": "Surrounded Regions", 
        "number": 130, 
        "similar_problems": [
            "(M) Number of Islands", 
            " (M) Walls and Gates"
        ], 
        "total": 407526
    }, 
    {
        "accepted": 44598, 
        "companies": "Amazon", 
        "description": "Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.\r\n\r\nIf the fractional part is repeating, enclose the repeating part in parentheses.\r\n\r\nFor example,\r\n\r\nGiven numerator = 1, denominator = 2, return \"0.5\".\r\nGiven numerator = 2, denominator = 1, return \"2\".\r\nGiven numerator = 2, denominator = 3, return \"0.(6)\".\r\n\r\n\r\n\r\n\r\n  No scary math, just apply elementary math knowledge. Still remember how to perform a long division?\r\n  Try a long division on 4/9, the repeating part is obvious. Now try 4/333. Do you see a pattern?\r\n  Be wary of edge cases! List out as many test cases as you can think of and test your code thoroughly.\r\n\r\n\r\nCredits:Special thanks to @Shangrila for adding this problem and creating all test cases.", 
        "difficulty": "Medium", 
        "hints": [
            "Hash Table", 
            "Math"
        ], 
        "name": "Fraction to Recurring Decimal", 
        "number": 166, 
        "similar_problems": [], 
        "total": 265316
    }, 
    {
        "accepted": 88603, 
        "companies": "Amazon", 
        "description": "Divide two integers without using multiplication, division and mod operator.\r\n\r\n\r\nIf it is overflow, return MAX_INT.", 
        "difficulty": "Medium", 
        "hints": [
            "Math", 
            "Binary Search"
        ], 
        "name": "Divide Two Integers", 
        "number": 29, 
        "similar_problems": [], 
        "total": 555752
    }, 
    {
        "accepted": 136937, 
        "companies": "Amazon", 
        "description": "Given an input string, reverse the string word by word.\r\n\r\n\r\n\r\nFor example,\r\nGiven s = \"the sky is blue\",\r\nreturn \"blue is sky the\".\r\n\r\n\r\n\r\nUpdate (2015-02-12):\r\nFor C programmers: Try to solve it in-place in O(1) space.\r\n\r\n\r\nclick to show clarification.\r\n\r\nClarification:\r\n\r\n\r\n\r\nWhat constitutes a word?\r\nA sequence of non-space characters constitutes a word.\r\nCould the input string contain leading or trailing spaces?\r\nYes. However, your reversed string should not contain leading or trailing spaces.\r\nHow about multiple spaces between two words?\r\nReduce them to a single space in the reversed string.", 
        "difficulty": "Medium", 
        "hints": [
            "String"
        ], 
        "name": "Reverse Words in a String", 
        "number": 151, 
        "similar_problems": [
            "(M) Reverse Words in a String II"
        ], 
        "total": 869819
    }, 
    {
        "accepted": 56205, 
        "companies": "Amazon", 
        "description": "Follow up for N-Queens problem.\r\n\r\nNow, instead outputting board configurations, return the total number of distinct solutions.", 
        "difficulty": "Hard", 
        "hints": [
            "Backtracking"
        ], 
        "name": "N-Queens II", 
        "number": 52, 
        "similar_problems": [
            "(H) N-Queens"
        ], 
        "total": 131229
    }, 
    {
        "accepted": 51126, 
        "companies": "Amazon", 
        "description": "Given an array nums containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one.\r\n\r\n\r\n\r\nNote:\r\n\r\nYou must not modify the array (assume the array is read only).\r\nYou must use only constant, O(1) extra space.\r\nYour runtime complexity should be less than O(n2).\r\nThere is only one duplicate number in the array, but it could be repeated more than once.\r\n\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Binary Search", 
            "Array", 
            "Two Pointers"
        ], 
        "name": "Find the Duplicate Number", 
        "number": 287, 
        "similar_problems": [
            "(H) First Missing Positive", 
            " (E) Single Number", 
            " (M) Linked List Cycle II", 
            " (M) Missing Number"
        ], 
        "total": 122331
    }, 
    {
        "accepted": 21111, 
        "companies": "Amazon", 
        "description": "Given n balloons, indexed from 0 to n-1. Each balloon is painted with a\r\n    number on it represented by array nums.\r\n\r\n    You are asked to burst all the balloons. If the you burst\r\n    balloon i you will get nums[left] * nums[i] * nums[right] coins. Here left\r\n    and right are adjacent indices of i. After the burst, the left and right\r\n    then becomes adjacent.\r\n\r\n\r\n    Find the maximum coins you can collect by bursting the balloons wisely.\r\n\r\n\r\n    Note: \r\n    (1) You may imagine nums[-1] = nums[n] = 1. They are not real therefore you can not burst them.\r\n    (2) 0 &le; n &le; 500, 0 &le; nums[i] &le; 100\r\n\r\n\r\n\r\n\r\n    Example:\r\n\r\n\r\n    Given [3, 1, 5, 8]\r\n\r\n\r\n    Return 167\r\n\r\n\r\n    nums = [3,1,5,8] --> [3,5,8] -->   [3,8]   -->  [8]  --> []\r\n   coins =  3*1*5      +  3*5*8    +  1*3*8      + 1*8*1   = 167\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming", 
            "Divide and Conquer"
        ], 
        "name": "Burst Balloons", 
        "number": 312, 
        "similar_problems": [], 
        "total": 50632
    }, 
    {
        "accepted": 9619, 
        "companies": "Amazon", 
        "description": "Given a data stream input of non-negative integers a1, a2, ..., an, ..., summarize the numbers seen so far as a list of disjoint intervals.\r\n\r\nFor example, suppose the integers from the data stream are 1, 3, 7, 2, 6, ..., then the summary will be:\r\n\r\n[1, 1]\r\n[1, 1], [3, 3]\r\n[1, 1], [3, 3], [7, 7]\r\n[1, 3], [7, 7]\r\n[1, 3], [6, 7]\r\n\r\n\r\nFollow up:\r\nWhat if there are lots of merges and the number of disjoint intervals are small compared to the data stream's size?\r\n\r\n\r\nCredits:Special thanks to @yunhong for adding this problem and creating most of the test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Binary Search Tree"
        ], 
        "name": "Data Stream as Disjoint Intervals", 
        "number": 352, 
        "similar_problems": [
            "(M) Summary Ranges", 
            " (M) Find Right Interval"
        ], 
        "total": 24748
    }, 
    {
        "accepted": 16678, 
        "companies": "Amazon", 
        "description": "Design a data structure that supports all following operations in average O(1) time.\r\n\r\n\r\n\r\ninsert(val): Inserts an item val to the set if not already present.\r\nremove(val): Removes an item val from the set if present.\r\ngetRandom: Returns a random element from current set of elements. Each element must have the same probability of being returned.\r\n\r\n\r\n\r\nExample:\r\n\r\n// Init an empty set.\r\nRandomizedSet randomSet = new RandomizedSet();\r\n\r\n// Inserts 1 to the set. Returns true as 1 was inserted successfully.\r\nrandomSet.insert(1);\r\n\r\n// Returns false as 2 does not exist in the set.\r\nrandomSet.remove(2);\r\n\r\n// Inserts 2 to the set, returns true. Set now contains [1,2].\r\nrandomSet.insert(2);\r\n\r\n// getRandom should return either 1 or 2 randomly.\r\nrandomSet.getRandom();\r\n\r\n// Removes 1 from the set, returns true. Set now contains [2].\r\nrandomSet.remove(1);\r\n\r\n// 2 was already in the set, so return false.\r\nrandomSet.insert(2);\r\n\r\n// Since 2 is the only number in the set, getRandom always return 2.\r\nrandomSet.getRandom();", 
        "difficulty": "Hard", 
        "hints": [
            "Array", 
            "Hash Table", 
            "Design"
        ], 
        "name": "Insert Delete GetRandom O(1)", 
        "number": 380, 
        "similar_problems": [
            "(H) Insert Delete GetRandom O(1) - Duplicates allowed"
        ], 
        "total": 43386
    }, 
    {
        "accepted": 125329, 
        "companies": "Amazon", 
        "description": "Given a binary tree, return the postorder traversal of its nodes' values.\r\n\r\n\r\nFor example:\r\nGiven binary tree {1,#,2,3},\r\n\r\n   1\r\n    \\\r\n     2\r\n    /\r\n   3\r\n\r\n\r\n\r\nreturn [3,2,1].\r\n\r\n\r\nNote: Recursive solution is trivial, could you do it iteratively?", 
        "difficulty": "Hard", 
        "hints": [
            "Tree", 
            "Stack"
        ], 
        "name": "Binary Tree Postorder Traversal", 
        "number": 145, 
        "similar_problems": [
            "(M) Binary Tree Inorder Traversal"
        ], 
        "total": 326204
    }, 
    {
        "accepted": 68458, 
        "companies": "Amazon", 
        "description": "Follow up for \"Find Minimum in Rotated Sorted Array\":\r\nWhat if duplicates are allowed?\r\n\r\nWould this affect the run-time complexity? How and why?\r\n\r\n\r\nSuppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\r\n\r\n(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).\r\n\r\nFind the minimum element.\r\n\r\nThe array may contain duplicates.", 
        "difficulty": "Hard", 
        "hints": [
            "Array", 
            "Binary Search"
        ], 
        "name": "Find Minimum in Rotated Sorted Array II", 
        "number": 154, 
        "similar_problems": [
            "(M) Find Minimum in Rotated Sorted Array"
        ], 
        "total": 189195
    }, 
    {
        "accepted": 5524, 
        "companies": "Amazon", 
        "description": "Given an m x n matrix of positive integers representing the height of each unit cell in a 2D elevation map, compute the volume of water it is able to trap after raining.\r\n\r\n\r\nNote:\r\nBoth m and n are less than 110. The height of each unit cell is greater than 0 and is less than 20,000.\r\n\r\n\r\nExample:\r\n\r\nGiven the following 3x6 height map:\r\n[\r\n  [1,4,3,1,3,2],\r\n  [3,2,1,3,2,4],\r\n  [2,3,3,2,3,1]\r\n]\r\n\r\nReturn 4.\r\n\r\n\r\n\r\n\r\n\r\nThe above image represents the elevation map [[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]] before the rain.\r\n\r\n\r\n\r\n\r\nAfter the rain, water are trapped between the blocks. The total volume of water trapped is 4.", 
        "difficulty": "Hard", 
        "hints": [
            "Breadth-first Search", 
            "Heap"
        ], 
        "name": "Trapping Rain Water II", 
        "number": 407, 
        "similar_problems": [
            "(H) Trapping Rain Water"
        ], 
        "total": 15469
    }, 
    {
        "accepted": 28804, 
        "companies": "Amazon", 
        "description": "Given an integer matrix, find the length of the longest increasing path.\r\n\r\n\r\nFrom each cell, you can either move to four directions: left, right, up or down. You may NOT move diagonally or move outside of the boundary (i.e. wrap-around is not allowed).\r\n\r\n\r\nExample 1:\r\n\r\nnums = [\r\n  [9,9,4],\r\n  [6,6,8],\r\n  [2,1,1]\r\n]\r\n\r\n\r\n\r\n\r\nReturn 4\r\n\r\nThe longest increasing path is [1, 2, 6, 9].\r\n\r\n\r\nExample 2:\r\n\r\nnums = [\r\n  [3,4,5],\r\n  [3,2,6],\r\n  [2,2,1]\r\n]\r\n\r\n\r\n\r\n\r\nReturn 4\r\n\r\nThe longest increasing path is [3, 4, 5, 6]. Moving diagonally is not allowed.\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Depth-first Search", 
            "Topological Sort", 
            "Memoization"
        ], 
        "name": "Longest Increasing Path in a Matrix", 
        "number": 329, 
        "similar_problems": [], 
        "total": 81264
    }, 
    {
        "accepted": 89848, 
        "companies": "Amazon", 
        "description": "Given an unsorted array of integers, find the length of the longest consecutive elements sequence.\r\n\r\n\r\nFor example,\r\nGiven [100, 4, 200, 1, 3, 2],\r\nThe longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.\r\n\r\n\r\nYour algorithm should run in O(n) complexity.", 
        "difficulty": "Hard", 
        "hints": [
            "Array", 
            "Union Find"
        ], 
        "name": "Longest Consecutive Sequence", 
        "number": 128, 
        "similar_problems": [
            "(M) Binary Tree Longest Consecutive Sequence"
        ], 
        "total": 254449
    }, 
    {
        "accepted": 95777, 
        "companies": "Amazon", 
        "description": "Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining. \r\n\r\n\r\n\r\nFor example, \r\nGiven [0,1,0,2,1,0,1,3,2,1,2,1], return 6.\r\n\r\n\r\n\r\n\r\nThe above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped. Thanks Marcos for contributing this image!", 
        "difficulty": "Hard", 
        "hints": [
            "Array", 
            "Stack", 
            "Two Pointers"
        ], 
        "name": "Trapping Rain Water", 
        "number": 42, 
        "similar_problems": [
            "(M) Container With Most Water", 
            " (M) Product of Array Except Self", 
            " (H) Trapping Rain Water II"
        ], 
        "total": 271213
    }, 
    {
        "accepted": 29887, 
        "companies": "Amazon", 
        "description": "Remove the minimum number of invalid parentheses in order to make the input string valid. Return all possible results.\r\n\r\nNote: The input string may contain letters other than the parentheses ( and ). \r\n\r\n\r\n\r\nExamples:\r\n\r\n\"()())()\" -> [\"()()()\", \"(())()\"]\r\n\"(a)())()\" -> [\"(a)()()\", \"(a())()\"]\r\n\")(\" -> [\"\"]\r\n\r\n\r\n\r\nCredits:Special thanks to @hpplayer for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Depth-first Search", 
            "Breadth-first Search"
        ], 
        "name": "Remove Invalid Parentheses", 
        "number": 301, 
        "similar_problems": [
            "(E) Valid Parentheses"
        ], 
        "total": 86481
    }, 
    {
        "accepted": 1328, 
        "companies": "Amazon", 
        "description": "Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.\r\nExamples: \r\n[2,3,4] , the median is 3\r\n[2,3], the median is (2 + 3) / 2 = 2.5 \r\n\r\nGiven an array nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position. Your job is to output the median array for each window in the original array.\r\n\r\nFor example,\r\nGiven nums = [1,3,-1,-3,5,3,6,7], and k = 3.\r\n\r\n\r\nWindow position                Median\r\n---------------               -----\r\n[1  3  -1] -3  5  3  6  7       1\r\n 1 [3  -1  -3] 5  3  6  7       -1\r\n 1  3 [-1  -3  5] 3  6  7       -1\r\n 1  3  -1 [-3  5  3] 6  7       3\r\n 1  3  -1  -3 [5  3  6] 7       5\r\n 1  3  -1  -3  5 [3  6  7]      6\r\n\r\n\r\nTherefore, return the median sliding window as [1,-1,-1,3,5,6].\r\n\r\nNote: \r\nYou may assume k is always valid, ie: 1 \u2264 k \u2264 input array's size for non-empty array.", 
        "difficulty": "Hard", 
        "hints": [
            "(H) Find Median from Data Stream"
        ], 
        "name": "Sliding Window Median", 
        "number": 480, 
        "similar_problems": [], 
        "total": 3949
    }, 
    {
        "accepted": 25180, 
        "companies": "Amazon", 
        "description": "You are given an integer array nums and you have to return a new counts array.\r\nThe counts array has the property where counts[i] is \r\nthe number of smaller elements to the right of nums[i].\r\n\r\n\r\nExample:\r\n\r\n\r\nGiven nums = [5, 2, 6, 1]\r\n\r\nTo the right of 5 there are 2 smaller elements (2 and 1).\r\nTo the right of 2 there is only 1 smaller element (1).\r\nTo the right of 6 there is 1 smaller element (1).\r\nTo the right of 1 there is 0 smaller element.\r\n\r\n\r\n\r\nReturn the array [2, 1, 1, 0].", 
        "difficulty": "Hard", 
        "hints": [
            "Divide and Conquer", 
            "Binary Indexed Tree", 
            "Segment Tree", 
            "Binary Search Tree"
        ], 
        "name": "Count of Smaller Numbers After Self", 
        "number": 315, 
        "similar_problems": [
            "(H) Count of Range Sum", 
            " (M) Queue Reconstruction by Height"
        ], 
        "total": 75062
    }, 
    {
        "accepted": 81416, 
        "companies": "Amazon", 
        "description": "Follow up for problem \"Populating Next Right Pointers in Each Node\".\r\nWhat if the given tree could be any binary tree? Would your previous solution still work?\r\n\r\nNote:\r\nYou may only use constant extra space.\r\n\r\n\r\nFor example,\r\nGiven the following binary tree,\r\n\r\n         1\r\n       /  \\\r\n      2    3\r\n     / \\    \\\r\n    4   5    7\r\n\r\n\r\n\r\nAfter calling your function, the tree should look like:\r\n\r\n         1 -> NULL\r\n       /  \\\r\n      2 -> 3 -> NULL\r\n     / \\    \\\r\n    4-> 5 -> 7 -> NULL", 
        "difficulty": "Hard", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "Populating Next Right Pointers in Each Node II", 
        "number": 117, 
        "similar_problems": [
            "(M) Populating Next Right Pointers in Each Node"
        ], 
        "total": 243124
    }, 
    {
        "accepted": 6223, 
        "companies": "Amazon", 
        "description": "Given an array which consists of non-negative integers and an integer m, you can split the array into m non-empty continuous subarrays. Write an algorithm to minimize the largest sum among these m subarrays.\r\n\r\n\r\nNote:\r\nIf n is the length of array, assume the following constraints are satisfied:\r\n\r\n1 &le; n &le; 1000\r\n1 &le; m &le; min(50, n)\r\n\r\n\r\n\r\nExamples: \r\n\r\nInput:\r\nnums = [7,2,5,10,8]\r\nm = 2\r\n\r\nOutput:\r\n18\r\n\r\nExplanation:\r\nThere are four ways to split nums into two subarrays.\r\nThe best way is to split it into [7,2,5] and [10,8],\r\nwhere the largest sum among the two subarrays is only 18.", 
        "difficulty": "Hard", 
        "hints": [
            "Binary Search", 
            "Dynamic Programming"
        ], 
        "name": "Split Array Largest Sum", 
        "number": 410, 
        "similar_problems": [], 
        "total": 19246
    }, 
    {
        "accepted": 9663, 
        "companies": "Amazon", 
        "description": "Given a non-empty 2D matrix matrix and an integer k, find the max sum of a rectangle in the matrix such that its sum is no larger than k.\r\n\r\nExample:\r\nGiven matrix = [\r\n  [1,  0, 1],\r\n  [0, -2, 3]\r\n]\r\nk = 2\r\n\r\n\r\n\r\nThe answer is 2. Because the sum of rectangle [[0, 1], [-2, 3]] is 2 and 2 is the max number no larger than k (k = 2).\r\n\r\nNote:\r\n\r\nThe rectangle inside the matrix must have an area > 0.\r\nWhat if the number of rows is much larger than the number of columns?\r\n\r\n\r\n\r\nCredits:Special thanks to @fujiaozhu for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Binary Search", 
            "Dynamic Programming", 
            "Queue"
        ], 
        "name": "Max Sum of Rectangle No Larger Than K", 
        "number": 363, 
        "similar_problems": [], 
        "total": 30141
    }, 
    {
        "accepted": 140996, 
        "companies": "Amazon", 
        "description": "Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\r\n\r\n(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).\r\n\r\nYou are given a target value to search. If found in the array return its index, otherwise return -1.\r\n\r\nYou may assume no duplicate exists in the array.", 
        "difficulty": "Hard", 
        "hints": [
            "Binary Search", 
            "Array"
        ], 
        "name": "Search in Rotated Sorted Array", 
        "number": 33, 
        "similar_problems": [
            "(M) Search in Rotated Sorted Array II", 
            " (M) Find Minimum in Rotated Sorted Array"
        ], 
        "total": 441069
    }, 
    {
        "accepted": 14847, 
        "companies": "Amazon", 
        "description": "You have a number of envelopes with widths and heights given as a pair of integers (w, h). One envelope can fit into another if and only if both the width and height of one envelope is greater than the width and height of the other envelope.\r\n\r\n\r\nWhat is the maximum number of envelopes can you Russian doll? (put one inside other)\r\n\r\n\r\nExample:\r\nGiven envelopes = [[5,4],[6,4],[6,7],[2,3]], the maximum number of envelopes you can Russian doll is 3 ([2,3] => [5,4] => [6,7]).", 
        "difficulty": "Hard", 
        "hints": [
            "Binary Search", 
            "Dynamic Programming"
        ], 
        "name": "Russian Doll Envelopes", 
        "number": 354, 
        "similar_problems": [
            "(M) Longest Increasing Subsequence"
        ], 
        "total": 46751
    }, 
    {
        "accepted": 45306, 
        "companies": "Amazon", 
        "description": "Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment. \r\n\r\nDesign an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure.\r\n\r\n\r\nFor example, you may serialize the following tree\r\n\r\n    1\r\n   / \\\r\n  2   3\r\n     / \\\r\n    4   5\r\n\r\nas \"[1,2,3,null,null,4,5]\", just the same as how LeetCode OJ serializes a binary tree. You do not necessarily need to follow this format, so please be creative and come up with different approaches yourself.\r\n\r\n\r\n\r\nNote: Do not use class member/global/static variables to store states. Your serialize and deserialize algorithms should be stateless.\r\n\r\n\r\nCredits:Special thanks to @Louis1992 for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Tree", 
            "Design"
        ], 
        "name": "Serialize and Deserialize Binary Tree", 
        "number": 297, 
        "similar_problems": [
            "(M) Encode and Decode Strings", 
            " (M) Serialize and Deserialize BST"
        ], 
        "total": 143206
    }, 
    {
        "accepted": 18404, 
        "companies": "Amazon", 
        "description": "Given a sorted positive integer array nums and an integer n, add/patch elements to the array such that any number in range [1, n] inclusive can be formed by the sum of some elements in the array. Return the minimum number of patches required.\r\n\r\n\r\nExample 1:\r\nnums = [1, 3], n = 6\r\nReturn 1.\r\n\r\nCombinations of nums are [1], [3], [1,3], which form possible sums of: 1, 3, 4.\r\nNow if we add/patch 2 to nums, the combinations are: [1], [2], [3], [1,3], [2,3], [1,2,3].\r\nPossible sums are 1, 2, 3, 4, 5, 6, which now covers the range [1, 6].\r\nSo we only need 1 patch.\r\n\r\nExample 2:\r\nnums = [1, 5, 10], n = 20\r\nReturn 2.\r\nThe two patches can be [2, 4].\r\n\r\nExample 3:\r\nnums = [1, 2, 2], n = 5\r\nReturn 0.\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Greedy"
        ], 
        "name": "Patching Array", 
        "number": 330, 
        "similar_problems": [], 
        "total": 58399
    }, 
    {
        "accepted": 47955, 
        "companies": "Amazon", 
        "description": "Given an array nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.\r\n\r\nFor example,\r\nGiven nums = [1,3,-1,-3,5,3,6,7], and k = 3.\r\n\r\n\r\nWindow position                Max\r\n---------------               -----\r\n[1  3  -1] -3  5  3  6  7       3\r\n 1 [3  -1  -3] 5  3  6  7       3\r\n 1  3 [-1  -3  5] 3  6  7       5\r\n 1  3  -1 [-3  5  3] 6  7       5\r\n 1  3  -1  -3 [5  3  6] 7       6\r\n 1  3  -1  -3  5 [3  6  7]      7\r\n\r\n\r\nTherefore, return the max sliding window as [3,3,5,5,6,7].\r\n\r\nNote: \r\nYou may assume k is always valid, ie: 1 \u2264 k \u2264 input array's size for non-empty array.\r\n\r\nFollow up:\r\nCould you solve it in linear time?\r\n\r\n\r\n  How about using a data structure such as deque (double-ended queue)?\r\n  The queue size need not be the same as the window\u2019s size.\r\n  Remove redundant elements and the queue should store only elements that need to be considered.", 
        "difficulty": "Hard", 
        "hints": [
            "Heap"
        ], 
        "name": "Sliding Window Maximum", 
        "number": 239, 
        "similar_problems": [
            "(H) Minimum Window Substring", 
            " (E) Min Stack", 
            " (H) Longest Substring with At Most Two Distinct Characters", 
            " (H) Paint House II"
        ], 
        "total": 152483
    }, 
    {
        "accepted": 9831, 
        "companies": "Amazon", 
        "description": "A frog is crossing a river. The river is divided into x units and at each unit there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water.\r\n\r\nGiven a list of stones' positions (in units) in sorted ascending order, determine if the frog is able to cross the river by landing on the last stone. Initially, the frog is on the first stone and assume the first jump must be 1 unit.\r\n\r\n\r\nIf the frog's last jump was k units, then its next jump must be either k - 1, k, or k + 1 units. Note that the frog can only jump in the forward direction.\r\n\r\nNote:\r\n\r\nThe number of stones is &ge; 2 and is < 1,100.\r\nEach stone's position will be a non-negative integer < 231.\r\nThe first stone's position is always 0.\r\n\r\n\r\n\r\nExample 1:\r\n\r\n[0,1,3,5,6,8,12,17]\r\n\r\nThere are a total of 8 stones.\r\nThe first stone at the 0th unit, second stone at the 1st unit,\r\nthird stone at the 3rd unit, and so on...\r\nThe last stone at the 17th unit.\r\n\r\nReturn true. The frog can jump to the last stone by jumping \r\n1 unit to the 2nd stone, then 2 units to the 3rd stone, then \r\n2 units to the 4th stone, then 3 units to the 6th stone, \r\n4 units to the 7th stone, and 5 units to the 8th stone.\r\n\r\n\r\n\r\nExample 2:\r\n\r\n[0,1,2,3,4,8,9,11]\r\n\r\nReturn false. There is no way to jump to the last stone as \r\nthe gap between the 5th and 6th stone is too large.", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Frog Jump", 
        "number": 403, 
        "similar_problems": [], 
        "total": 31941
    }, 
    {
        "accepted": 63676, 
        "companies": "Amazon", 
        "description": "Given a string S and a string T, count the number of distinct subsequences of T in S.\r\n\r\n\r\n\r\nA subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, \"ACE\" is a subsequence of \"ABCDE\" while \"AEC\" is not).\r\n\r\n\r\n\r\nHere is an example:\r\nS = \"rabbbit\", T = \"rabbit\"\r\n\r\n\r\nReturn 3.", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming", 
            "String"
        ], 
        "name": "Distinct Subsequences", 
        "number": 115, 
        "similar_problems": [], 
        "total": 207880
    }, 
    {
        "accepted": 76821, 
        "companies": "Amazon", 
        "description": "Given two words word1 and word2, find the minimum number of steps required to convert word1 to word2. (each operation is counted as 1 step.)\r\n\r\n\r\n\r\nYou have the following 3 operations permitted on a word:\r\n\r\n\r\n\r\na) Insert a character\r\nb) Delete a character\r\nc) Replace a character", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming", 
            "String"
        ], 
        "name": "Edit Distance", 
        "number": 72, 
        "similar_problems": [
            "(M) One Edit Distance"
        ], 
        "total": 250856
    }, 
    {
        "accepted": 2227, 
        "companies": "Amazon", 
        "description": "Given a list of words (without duplicates), please write a program that returns all concatenated words in the given list of words.\r\nA concatenated word is defined as a string that is comprised entirely of at least two shorter words in the given array.\r\n\r\nExample:\r\n\r\nInput: [\"cat\",\"cats\",\"catsdogcats\",\"dog\",\"dogcatsdog\",\"hippopotamuses\",\"rat\",\"ratcatdogcat\"]\r\n\r\nOutput: [\"catsdogcats\",\"dogcatsdog\",\"ratcatdogcat\"]\r\n\r\nExplanation: \"catsdogcats\" can be concatenated by \"cats\", \"dog\" and \"cats\";  \"dogcatsdog\" can be concatenated by \"dog\", \"cats\" and \"dog\"; \"ratcatdogcat\" can be concatenated by \"rat\", \"cat\", \"dog\" and \"cat\".\r\n\r\n\r\n\r\nNote:\r\n\r\nThe number of elements of the given array will not exceed 10,000 \r\nThe length sum of elements in the given array will not exceed 600,000. \r\nAll the input string will only include lower case letters.\r\nThe returned elements order does not matter.", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming", 
            "Trie", 
            "Depth-first Search"
        ], 
        "name": "Concatenated Words", 
        "number": 472, 
        "similar_problems": [
            "(H) Word Break II"
        ], 
        "total": 7416
    }, 
    {
        "accepted": 80068, 
        "companies": "Amazon", 
        "description": "Given a linked list, reverse the nodes of a linked list k at a time and return its modified list.\r\n\r\n\r\n\r\nk is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of k then left-out nodes in the end should remain as it is.\r\n\r\nYou may not alter the values in the nodes, only nodes itself may be changed.\r\n\r\nOnly constant memory is allowed.\r\n\r\n\r\nFor example,\r\nGiven this linked list: 1->2->3->4->5\r\n\r\n\r\n\r\nFor k = 2, you should return: 2->1->4->3->5\r\n\r\n\r\n\r\nFor k = 3, you should return: 3->2->1->4->5", 
        "difficulty": "Hard", 
        "hints": [
            "Linked List"
        ], 
        "name": "Reverse Nodes in k-Group", 
        "number": 25, 
        "similar_problems": [
            "(E) Swap Nodes in Pairs"
        ], 
        "total": 269334
    }, 
    {
        "accepted": 70096, 
        "companies": "Amazon", 
        "description": "The n-queens puzzle is the problem of placing n queens on an n\u00d7n chessboard such that no two queens attack each other.\r\n\r\n\r\n\r\nGiven an integer n, return all distinct solutions to the n-queens puzzle.\r\n\r\nEach solution contains a distinct board configuration of the n-queens' placement, where 'Q' and '.' both indicate a queen and an empty space respectively.\r\n\r\nFor example,\r\nThere exist two distinct solutions to the 4-queens puzzle:\r\n\r\n[\r\n [\".Q..\",  // Solution 1\r\n  \"...Q\",\r\n  \"Q...\",\r\n  \"..Q.\"],\r\n\r\n [\"..Q.\",  // Solution 2\r\n  \"Q...\",\r\n  \"...Q\",\r\n  \".Q..\"]\r\n]", 
        "difficulty": "Hard", 
        "hints": [
            "Backtracking"
        ], 
        "name": "N-Queens", 
        "number": 51, 
        "similar_problems": [
            "(H) N-Queens II"
        ], 
        "total": 241242
    }, 
    {
        "accepted": 14684, 
        "companies": "Amazon", 
        "description": "Given an integer array nums, return the number of range sums that lie in [lower, upper] inclusive.\r\n\r\n    Range sum S(i, j) is defined as the sum of the elements in nums between indices i and \r\n    j (i \u2264 j), inclusive.\r\n\r\n\r\n\r\n    Note:\r\n    A naive algorithm of O(n2) is trivial. You MUST do better than that.\r\n\r\n\r\n    Example:\r\n    Given nums = [-2, 5, -1], lower = -2, upper = 2,\r\n    Return 3.\r\n    The three ranges are : [0, 0], [2, 2], [0, 2] and their respective sums are: -2, -1, 2.\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Divide and Conquer", 
            "Binary Search Tree"
        ], 
        "name": "Count of Range Sum", 
        "number": 327, 
        "similar_problems": [
            "(H) Count of Smaller Numbers After Self"
        ], 
        "total": 50848
    }, 
    {
        "accepted": 65771, 
        "companies": "Amazon", 
        "description": "Two elements of a binary search tree (BST) are swapped by mistake.\r\n\r\nRecover the tree without changing its structure.\r\n\r\n\r\nNote:\r\nA solution using O(n) space is pretty straight forward. Could you devise a constant space solution?", 
        "difficulty": "Hard", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "Recover Binary Search Tree", 
        "number": 99, 
        "similar_problems": [], 
        "total": 229042
    }, 
    {
        "accepted": 42195, 
        "companies": "Amazon", 
        "description": "Given an unsorted array, find the maximum difference between the successive elements in its sorted form.\r\n\r\nTry to solve it in linear time/space.\r\n\r\nReturn 0 if the array contains less than 2 elements.\r\n\r\nYou may assume all elements in the array are non-negative integers and fit in the 32-bit signed integer range.\r\n\r\nCredits:Special thanks to @porker2008 for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Sort"
        ], 
        "name": "Maximum Gap", 
        "number": 164, 
        "similar_problems": [], 
        "total": 147315
    }, 
    {
        "accepted": 24965, 
        "companies": "Amazon", 
        "description": "Given a string which contains only lowercase letters, remove duplicate letters so that every letter appear once and only once. You must make sure your result is the smallest in lexicographical order among all possible results.\r\n\r\n\r\n\r\nExample:\r\n\r\n\r\nGiven \"bcabc\"\r\nReturn \"abc\"\r\n\r\n\r\nGiven \"cbacdcbc\"\r\nReturn \"acdb\"\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Stack", 
            "Greedy"
        ], 
        "name": "Remove Duplicate Letters", 
        "number": 316, 
        "similar_problems": [], 
        "total": 87364
    }, 
    {
        "accepted": 23506, 
        "companies": "Amazon", 
        "description": "Given a string that contains only digits 0-9 and a target value, return all possibilities to add binary operators (not unary) +, -, or * between the digits so they evaluate to the target value.\r\n\r\n\r\nExamples: \r\n\"123\", 6 -> [\"1+2+3\", \"1*2*3\"] \r\n\"232\", 8 -> [\"2*3+2\", \"2+3*2\"]\r\n\"105\", 5 -> [\"1*0+5\",\"10-5\"]\r\n\"00\", 0 -> [\"0+0\", \"0-0\", \"0*0\"]\r\n\"3456237490\", 9191 -> []\r\n\r\n\r\nCredits:Special thanks to @davidtan1890 for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Divide and Conquer"
        ], 
        "name": "Expression Add Operators", 
        "number": 282, 
        "similar_problems": [
            "(M) Evaluate Reverse Polish Notation", 
            " (H) Basic Calculator", 
            " (M) Basic Calculator II", 
            " (M) Different Ways to Add Parentheses"
        ], 
        "total": 82432
    }, 
    {
        "accepted": 99928, 
        "companies": "Amazon", 
        "description": "Given a collection of intervals, merge all overlapping intervals.\r\n\r\n\r\nFor example,\r\nGiven [1,3],[2,6],[8,10],[15,18],\r\nreturn [1,6],[8,10],[15,18].", 
        "difficulty": "Hard", 
        "hints": [
            "Array", 
            "Sort"
        ], 
        "name": "Merge Intervals", 
        "number": 56, 
        "similar_problems": [
            "(H) Insert Interval", 
            " (E) Meeting Rooms", 
            " (M) Meeting Rooms II"
        ], 
        "total": 351592
    }, 
    {
        "accepted": 75679, 
        "companies": "Amazon", 
        "description": "Say you have an array for which the ith element is the price of a given stock on day i.\r\n\r\nDesign an algorithm to find the maximum profit. You may complete at most two transactions.\r\n\r\nNote:\r\nYou may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).", 
        "difficulty": "Hard", 
        "hints": [
            "Array", 
            "Dynamic Programming"
        ], 
        "name": "Best Time to Buy and Sell Stock III", 
        "number": 123, 
        "similar_problems": [
            "(E) Best Time to Buy and Sell Stock", 
            " (M) Best Time to Buy and Sell Stock II", 
            " (H) Best Time to Buy and Sell Stock IV"
        ], 
        "total": 267480
    }, 
    {
        "accepted": 57757, 
        "companies": "Amazon", 
        "description": "Given a string s1, we may represent it as a binary tree by partitioning it to two non-empty substrings recursively.\r\n\r\n\r\nBelow is one possible representation of s1 = \"great\":\r\n\r\n\r\n    great\r\n   /    \\\r\n  gr    eat\r\n / \\    /  \\\r\ng   r  e   at\r\n           / \\\r\n          a   t\r\n\r\n\r\nTo scramble the string, we may choose any non-leaf node and swap its two children.\r\n\r\n\r\nFor example, if we choose the node \"gr\" and swap its two children, it produces a scrambled string \"rgeat\".\r\n\r\n\r\n    rgeat\r\n   /    \\\r\n  rg    eat\r\n / \\    /  \\\r\nr   g  e   at\r\n           / \\\r\n          a   t\r\n\r\n\r\nWe say that \"rgeat\" is a scrambled string of \"great\".\r\n\r\n\r\nSimilarly, if we continue to swap the children of nodes \"eat\" and \"at\", it produces a scrambled string \"rgtae\".\r\n\r\n\r\n    rgtae\r\n   /    \\\r\n  rg    tae\r\n / \\    /  \\\r\nr   g  ta  e\r\n       / \\\r\n      t   a\r\n\r\n\r\nWe say that \"rgtae\" is a scrambled string of \"great\".\r\n\r\n\r\nGiven two strings s1 and s2 of the same length, determine if s2 is a scrambled string of s1.", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming", 
            "String"
        ], 
        "name": "Scramble String", 
        "number": 87, 
        "similar_problems": [], 
        "total": 204295
    }, 
    {
        "accepted": 65428, 
        "companies": "Amazon", 
        "description": "Write a program to solve a Sudoku puzzle by filling the empty cells.\r\n\r\nEmpty cells are indicated by the character '.'.\r\n\r\nYou may assume that there will be only one unique solution.\r\n\r\n\r\n\r\nA sudoku puzzle...\r\n\r\n\r\n\r\n\r\n...and its solution numbers marked in red.", 
        "difficulty": "Hard", 
        "hints": [
            "Backtracking", 
            "Hash Table"
        ], 
        "name": "Sudoku Solver", 
        "number": 37, 
        "similar_problems": [
            "(E) Valid Sudoku"
        ], 
        "total": 232502
    }, 
    {
        "accepted": 3081, 
        "companies": "Amazon", 
        "description": "Implement a data structure supporting the following operations:\r\n\r\n\r\n\r\nInc(Key) - Inserts a new key  with value 1. Or increments an existing key by 1. Key is guaranteed to be a non-empty string.\r\nDec(Key) - If Key's value is 1, remove it from the data structure. Otherwise decrements an existing key by 1. If the key does not exist, this function does nothing. Key is guaranteed to be a non-empty string.\r\nGetMaxKey() - Returns one of the keys with maximal value. If no element exists, return an empty string \"\".\r\nGetMinKey() - Returns one of the keys with minimal value. If no element exists, return an empty string \"\".\r\n\r\n\r\n\r\n\r\nChallenge: Perform all these in O(1) time complexity.", 
        "difficulty": "Hard", 
        "hints": [
            "Design"
        ], 
        "name": "All O`one Data Structure", 
        "number": 432, 
        "similar_problems": [], 
        "total": 10986
    }, 
    {
        "accepted": 9238, 
        "companies": "Amazon", 
        "description": "Design a data structure that supports all following operations in average O(1) time.\r\nNote: Duplicate elements are allowed.\r\n\r\n\r\ninsert(val): Inserts an item val to the collection.\r\nremove(val): Removes an item val from the collection if present.\r\ngetRandom: Returns a random element from current collection of elements. The probability of each element being returned is linearly related to the number of same value the collection contains.\r\n\r\n\r\n\r\nExample:\r\n\r\n// Init an empty collection.\r\nRandomizedCollection collection = new RandomizedCollection();\r\n\r\n// Inserts 1 to the collection. Returns true as the collection did not contain 1.\r\ncollection.insert(1);\r\n\r\n// Inserts another 1 to the collection. Returns false as the collection contained 1. Collection now contains [1,1].\r\ncollection.insert(1);\r\n\r\n// Inserts 2 to the collection, returns true. Collection now contains [1,1,2].\r\ncollection.insert(2);\r\n\r\n// getRandom should return 1 with the probability 2/3, and returns 2 with the probability 1/3.\r\ncollection.getRandom();\r\n\r\n// Removes 1 from the collection, returns true. Collection now contains [1,2].\r\ncollection.remove(1);\r\n\r\n// getRandom should return 1 and 2 both equally likely.\r\ncollection.getRandom();", 
        "difficulty": "Hard", 
        "hints": [
            "Array", 
            "Hash Table", 
            "Design"
        ], 
        "name": "Insert Delete GetRandom O(1) - Duplicates allowed", 
        "number": 381, 
        "similar_problems": [
            "(H) Insert Delete GetRandom O(1)"
        ], 
        "total": 33019
    }, 
    {
        "accepted": 25937, 
        "companies": "Amazon", 
        "description": "Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.\r\n\r\n\r\nFor example: \r\nGiven n = 13,\r\nReturn 6, because digit 1 occurred in the following numbers: 1, 10, 11, 12, 13.\r\n\r\n\r\n\r\n  Beware of overflow.", 
        "difficulty": "Hard", 
        "hints": [
            "Math"
        ], 
        "name": "Number of Digit One", 
        "number": 233, 
        "similar_problems": [
            "(E) Factorial Trailing Zeroes"
        ], 
        "total": 94913
    }, 
    {
        "accepted": 92254, 
        "companies": "Amazon", 
        "description": "A linked list is given such that each node contains an additional random pointer which could point to any node in the list or null.\r\n\r\n\r\n\r\nReturn a deep copy of the list.", 
        "difficulty": "Hard", 
        "hints": [
            "Hash Table", 
            "Linked List"
        ], 
        "name": "Copy List with Random Pointer", 
        "number": 138, 
        "similar_problems": [
            "(M) Clone Graph"
        ], 
        "total": 346467
    }, 
    {
        "accepted": 80689, 
        "companies": "Amazon", 
        "description": "Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).\r\n\r\nYou may assume that the intervals were initially sorted according to their start times.\r\n\r\n\r\nExample 1:\r\nGiven intervals [1,3],[6,9], insert and merge [2,5] in as [1,5],[6,9].\r\n\r\n\r\n\r\nExample 2:\r\nGiven [1,2],[3,5],[6,7],[8,10],[12,16], insert and merge [4,9] in as [1,2],[3,10],[12,16].\r\n\r\n\r\n\r\nThis is because the new interval [4,9] overlaps with [3,5],[6,7],[8,10].", 
        "difficulty": "Hard", 
        "hints": [
            "Array", 
            "Sort"
        ], 
        "name": "Insert Interval", 
        "number": 57, 
        "similar_problems": [
            "(H) Merge Intervals"
        ], 
        "total": 306456
    }, 
    {
        "accepted": 57003, 
        "companies": "Amazon", 
        "description": "Given a 2D binary matrix filled with 0's and 1's, find the largest rectangle containing only 1's and return its area.\r\n\r\n\r\nFor example, given the following matrix:\r\n\r\n1 0 1 0 0\r\n1 0 1 1 1\r\n1 1 1 1 1\r\n1 0 0 1 0\r\n\r\nReturn 6.", 
        "difficulty": "Hard", 
        "hints": [
            "Array", 
            "Hash Table", 
            "Stack", 
            "Dynamic Programming"
        ], 
        "name": "Maximal Rectangle", 
        "number": 85, 
        "similar_problems": [
            "(H) Largest Rectangle in Histogram", 
            " (M) Maximal Square"
        ], 
        "total": 218365
    }, 
    {
        "accepted": 82200, 
        "companies": "Amazon", 
        "description": "Given an array of non-negative integers, you are initially positioned at the first index of the array.\r\n\r\n\r\nEach element in the array represents your maximum jump length at that position. \r\n\r\n\r\nYour goal is to reach the last index in the minimum number of jumps.\r\n\r\n\r\n\r\nFor example:\r\nGiven array A = [2,3,1,1,4]\r\n\r\n\r\nThe minimum number of jumps to reach the last index is 2. (Jump 1 step from index 0 to 1, then 3 steps to the last index.)\r\n\r\n\r\n\r\nNote:\r\nYou can assume that you can always reach the last index.", 
        "difficulty": "Hard", 
        "hints": [
            "Array", 
            "Greedy"
        ], 
        "name": "Jump Game II", 
        "number": 45, 
        "similar_problems": [], 
        "total": 315922
    }, 
    {
        "accepted": 124595, 
        "companies": "Amazon", 
        "description": "Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.", 
        "difficulty": "Hard", 
        "hints": [
            "Divide and Conquer", 
            "Linked List", 
            "Heap"
        ], 
        "name": "Merge k Sorted Lists", 
        "number": 23, 
        "similar_problems": [
            "(E) Merge Two Sorted Lists", 
            " (M) Ugly Number II"
        ], 
        "total": 480244
    }, 
    {
        "accepted": 79357, 
        "companies": "Amazon", 
        "description": "Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.\r\n\r\n\r\n\r\n\r\nAbove is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].\r\n\r\n\r\n\r\n\r\nThe largest rectangle is shown in the shaded area, which has area = 10 unit.\r\n\r\n\r\n\r\nFor example,\r\nGiven heights = [2,1,5,6,2,3],\r\nreturn 10.", 
        "difficulty": "Hard", 
        "hints": [
            "Array", 
            "Stack"
        ], 
        "name": "Largest Rectangle in Histogram", 
        "number": 84, 
        "similar_problems": [
            "(H) Maximal Rectangle"
        ], 
        "total": 309212
    }, 
    {
        "accepted": 32846, 
        "companies": "Amazon", 
        "description": "A city's skyline is the outer contour of the silhouette formed by all the buildings in that city when viewed from a distance. Now suppose you are given the locations and height of all the buildings as shown on a cityscape photo (Figure A), write a program to output the skyline formed by these buildings collectively (Figure B).\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\nThe geometric information of each building is represented by a triplet of integers [Li, Ri, Hi], where Li and Ri are the x coordinates of the left and right edge of the ith building, respectively, and Hi is its height. It is guaranteed that 0 \u2264 Li, Ri \u2264 INT_MAX, 0 < Hi \u2264 INT_MAX, and Ri - Li > 0. You may assume all buildings are perfect rectangles grounded on an absolutely flat surface at height 0.\r\n\r\nFor instance, the dimensions of all buildings in Figure A are recorded as: [ [2 9 10], [3 7 15], [5 12 12], [15 20 10], [19 24 8] ] .\r\n\r\nThe output is a list of \"key points\" (red dots in Figure B) in the format of [ [x1,y1], [x2, y2], [x3, y3], ... ] that uniquely defines a skyline. A key point is the left endpoint of a horizontal line segment. Note that the last key point, where the rightmost building ends, is merely used to mark the termination of the skyline, and always has zero height. Also, the ground in between any two adjacent buildings should be considered part of the skyline contour.\r\n\r\nFor instance, the skyline in Figure B should be represented as:[ [2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0] ].\r\n\r\nNotes:\r\n\r\n The number of buildings in any input list is guaranteed to be in the range [0, 10000].\r\n The input list is already sorted in ascending order by the left x position Li. \r\n The output list must be sorted by the x position. \r\n There must be no consecutive horizontal lines of equal height in the output skyline. For instance, [...[2 3], [4 5], [7 5], [11 5], [12 7]...] is not acceptable; the three lines of height 5 should be merged into one in the final output as such: [...[2 3], [4 5], [12 7], ...]\r\n\r\n\r\n\r\nCredits:Special thanks to @stellari for adding this problem, creating these two awesome images and all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Binary Indexed Tree", 
            "Segment Tree", 
            "Heap", 
            "Divide and Conquer"
        ], 
        "name": "The Skyline Problem", 
        "number": 218, 
        "similar_problems": [], 
        "total": 128562
    }, 
    {
        "accepted": 42177, 
        "companies": "Amazon", 
        "description": "Implement a basic calculator to evaluate a simple expression string.\r\n\r\nThe expression string may contain open ( and closing parentheses ), the plus + or minus sign -, non-negative integers and empty spaces  .\r\n\r\nYou may assume that the given expression is always valid.\r\n\r\nSome examples:\r\n\r\n\"1 + 1\" = 2\r\n\" 2-1 + 2 \" = 3\r\n\"(1+(4+5+2)-3)+(6+8)\" = 23\r\n\r\n\r\n\r\n\r\nNote: Do not use the eval built-in library function.", 
        "difficulty": "Hard", 
        "hints": [
            "Stack", 
            "Math"
        ], 
        "name": "Basic Calculator", 
        "number": 224, 
        "similar_problems": [
            "(M) Evaluate Reverse Polish Notation", 
            " (M) Basic Calculator II", 
            " (M) Different Ways to Add Parentheses", 
            " (H) Expression Add Operators"
        ], 
        "total": 165286
    }, 
    {
        "accepted": 84337, 
        "companies": "Amazon", 
        "description": "Given a binary tree, find the maximum path sum.\r\n\r\n\r\nFor this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain at least one node and does not need to go through the root.\r\n\r\n\r\nFor example:\r\nGiven the below binary tree,\r\n\r\n       1\r\n      / \\\r\n     2   3\r\n\r\n\r\n\r\nReturn 6.", 
        "difficulty": "Hard", 
        "hints": [
            "Tree", 
            "Depth-first Search"
        ], 
        "name": "Binary Tree Maximum Path Sum", 
        "number": 124, 
        "similar_problems": [
            "(E) Path Sum", 
            " (M) Sum Root to Leaf Numbers"
        ], 
        "total": 336833
    }, 
    {
        "accepted": 1307, 
        "companies": "Amazon", 
        "description": "Define S = [s,n] as the string S which consists of n connected strings s. For example, [\"abc\", 3] =\"abcabcabc\". \r\nOn the other hand, we define that string s1 can be obtained from string s2 if we can remove some characters from s2 such that it becomes s1. For example, \u201cabc\u201d  can be obtained from \u201cabdbec\u201d based on our definition, but it can not be obtained from \u201cacbbe\u201d.\r\nYou are given two non-empty strings s1 and s2 (each at most 100 characters long) and two integers 0 &le; n1 &le; 106 and 1 &le; n2 &le; 106. Now consider the strings S1 and S2, where S1=[s1,n1] and S2=[s2,n2]. Find the maximum integer M such that [S2,M] can be obtained from S1.\r\n\r\nExample:\r\n\r\nInput:\r\ns1=\"acb\", n1=4\r\ns2=\"ab\", n2=2\r\n\r\nReturn:\r\n2", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Count The Repetitions", 
        "number": 466, 
        "similar_problems": [], 
        "total": 5247
    }, 
    {
        "accepted": 85287, 
        "companies": "Amazon", 
        "description": "Given an unsorted integer array, find the first missing positive integer.\r\n\r\n\r\n\r\nFor example,\r\nGiven [1,2,0] return 3,\r\nand [3,4,-1,1] return 2.\r\n\r\n\r\n\r\nYour algorithm should run in O(n) time and uses constant space.", 
        "difficulty": "Hard", 
        "hints": [
            "Array"
        ], 
        "name": "First Missing Positive", 
        "number": 41, 
        "similar_problems": [
            "(M) Missing Number", 
            " (H) Find the Duplicate Number", 
            " (E) Find All Numbers Disappeared in an Array"
        ], 
        "total": 341907
    }, 
    {
        "accepted": 19091, 
        "companies": "Amazon", 
        "description": "Given a list of unique words, find all pairs of distinct indices (i, j) in the given list, so that the concatenation of the two words, i.e. words[i] + words[j] is a palindrome.\r\n\r\n\r\n\r\n    Example 1:\r\n    Given words = [\"bat\", \"tab\", \"cat\"]\r\n    Return [[0, 1], [1, 0]]\r\n    The palindromes are [\"battab\", \"tabbat\"]\r\n\r\n\r\n    Example 2:\r\n    Given words = [\"abcd\", \"dcba\", \"lls\", \"s\", \"sssll\"]\r\n    Return [[0, 1], [1, 0], [3, 2], [2, 4]]\r\n    The palindromes are [\"dcbaabcd\", \"abcddcba\", \"slls\", \"llssssll\"]\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Hash Table", 
            "String", 
            "Trie"
        ], 
        "name": "Palindrome Pairs", 
        "number": 336, 
        "similar_problems": [
            "(M) Longest Palindromic Substring", 
            " (H) Shortest Palindrome"
        ], 
        "total": 77126
    }, 
    {
        "accepted": 62948, 
        "companies": "Amazon", 
        "description": "Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.\r\n\r\n\r\n\r\nFor example,\r\nGiven:\r\ns1 = \"aabcc\",\r\ns2 = \"dbbca\",\r\n\r\n\r\nWhen s3 = \"aadbbcbcac\", return true.\r\nWhen s3 = \"aadbbbaccc\", return false.", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming", 
            "String"
        ], 
        "name": "Interleaving String", 
        "number": 97, 
        "similar_problems": [], 
        "total": 262717
    }, 
    {
        "accepted": 11514, 
        "companies": "Amazon", 
        "description": "You are given an array x of n positive numbers. You start at point (0,0) and moves x[0] metres to the north, then x[1] metres to the west,\r\n    x[2] metres to the south,\r\n    x[3] metres to the east and so on. In other words, after each move your direction changes\r\n    counter-clockwise.\r\n\r\n\r\n    Write a one-pass algorithm with O(1) extra space to determine, if your path crosses itself, or not.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nGiven x = [2, 1, 1, 2],\r\n\u250c\u2500\u2500\u2500\u2510\r\n\u2502   \u2502\r\n\u2514\u2500\u2500\u2500\u253c\u2500\u2500>\r\n    \u2502\r\n\r\nReturn true (self crossing)\r\n\r\n\r\n\r\n\r\nExample 2:\r\n\r\nGiven x = [1, 2, 3, 4],\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502      \u2502\r\n\u2502\r\n\u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500>\r\n\r\nReturn false (not self crossing)\r\n\r\n\r\n\r\n\r\nExample 3:\r\n\r\nGiven x = [1, 1, 1, 1],\r\n\u250c\u2500\u2500\u2500\u2510\r\n\u2502   \u2502\r\n\u2514\u2500\u2500\u2500\u253c>\r\n\r\nReturn true (self crossing)\r\n\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Math"
        ], 
        "name": "Self Crossing", 
        "number": 335, 
        "similar_problems": [], 
        "total": 48058
    }, 
    {
        "accepted": 62970, 
        "companies": "Amazon", 
        "description": "There are N children standing in a line. Each child is assigned a rating value. \r\n\r\n\r\nYou are giving candies to these children subjected to the following requirements:\r\n\r\n\r\nEach child must have at least one candy.\r\nChildren with a higher rating get more candies than their neighbors.\r\n\r\n\r\nWhat is the minimum candies you must give?", 
        "difficulty": "Hard", 
        "hints": [
            "Greedy"
        ], 
        "name": "Candy", 
        "number": 135, 
        "similar_problems": [], 
        "total": 263348
    }, 
    {
        "accepted": 14602, 
        "companies": "Amazon", 
        "description": "Given two arrays of length m and n with digits 0-9 representing two numbers.\r\n    Create the maximum number of length k <= m + n from digits of the two. The relative order of the digits\r\n    from the same array must be preserved. Return an array of the k digits. You should try to optimize your time and space complexity.\r\n\r\n\r\n\r\n    Example 1:\r\n\r\n\r\n    nums1 = [3, 4, 6, 5]\r\n    nums2 = [9, 1, 2, 5, 8, 3]\r\n    k = 5\r\n    return [9, 8, 6, 5, 3]\r\n\r\n\r\n    Example 2:\r\n\r\n\r\n    nums1 = [6, 7]\r\n    nums2 = [6, 0, 4]\r\n    k = 5\r\n    return [6, 7, 6, 0, 4]\r\n\r\n\r\n    Example 3:\r\n\r\n\r\n    nums1 = [3, 9]\r\n    nums2 = [8, 9]\r\n    k = 3\r\n    return [9, 8, 9]\r\n\r\n\r\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming", 
            "Greedy"
        ], 
        "name": "Create Maximum Number", 
        "number": 321, 
        "similar_problems": [
            "(M) Remove K Digits"
        ], 
        "total": 61164
    }, 
    {
        "accepted": 85957, 
        "companies": "Amazon", 
        "description": "Given a string S and a string T, find the minimum window in S which will contain all the characters in T in complexity O(n).\r\n\r\n\r\n\r\nFor example,\r\nS = \"ADOBECODEBANC\"\r\nT = \"ABC\"\r\n\r\n\r\nMinimum window is \"BANC\".\r\n\r\n\r\n\r\nNote:\r\nIf there is no such window in S that covers all characters in T, return the empty string \"\".\r\n\r\n\r\nIf there are multiple such windows, you are guaranteed that there will always be only one unique minimum window in S.", 
        "difficulty": "Hard", 
        "hints": [
            "Hash Table", 
            "Two Pointers", 
            "String"
        ], 
        "name": "Minimum Window Substring", 
        "number": 76, 
        "similar_problems": [
            "(H) Substring with Concatenation of All Words", 
            " (M) Minimum Size Subarray Sum", 
            " (H) Sliding Window Maximum"
        ], 
        "total": 360711
    }, 
    {
        "accepted": 39282, 
        "companies": "Amazon", 
        "description": "Say you have an array for which the ith element is the price of a given stock on day i.\r\n\r\nDesign an algorithm to find the maximum profit. You may complete at most k transactions.\r\n\r\nNote:\r\nYou may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).\r\n\r\nCredits:Special thanks to @Freezen for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Best Time to Buy and Sell Stock IV", 
        "number": 188, 
        "similar_problems": [
            "(E) Best Time to Buy and Sell Stock", 
            " (M) Best Time to Buy and Sell Stock II", 
            " (H) Best Time to Buy and Sell Stock III"
        ], 
        "total": 164951
    }, 
    {
        "accepted": 116236, 
        "companies": "Amazon", 
        "description": "Implement regular expression matching with support for '.' and '*'.\r\n\r\n\r\n'.' Matches any single character.\r\n'*' Matches zero or more of the preceding element.\r\n\r\nThe matching should cover the entire input string (not partial).\r\n\r\nThe function prototype should be:\r\nbool isMatch(const char *s, const char *p)\r\n\r\nSome examples:\r\nisMatch(\"aa\",\"a\") \u2192 false\r\nisMatch(\"aa\",\"aa\") \u2192 true\r\nisMatch(\"aaa\",\"aa\") \u2192 false\r\nisMatch(\"aa\", \"a*\") \u2192 true\r\nisMatch(\"aa\", \".*\") \u2192 true\r\nisMatch(\"ab\", \".*\") \u2192 true\r\nisMatch(\"aab\", \"c*a*b\") \u2192 true", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming", 
            "Backtracking", 
            "String"
        ], 
        "name": "Regular Expression Matching", 
        "number": 10, 
        "similar_problems": [
            "(H) Wildcard Matching"
        ], 
        "total": 493178
    }, 
    {
        "accepted": 63426, 
        "companies": "Amazon", 
        "description": "Given a string s, partition s such that every substring of the partition is a palindrome.\r\n\r\n\r\nReturn the minimum cuts needed for a palindrome partitioning of s.\r\n\r\n\r\nFor example, given s = \"aab\",\r\nReturn 1 since the palindrome partitioning [\"aa\",\"b\"] could be produced using 1 cut.", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Palindrome Partitioning II", 
        "number": 132, 
        "similar_problems": [
            "(M) Palindrome Partitioning"
        ], 
        "total": 270570
    }, 
    {
        "accepted": 32626, 
        "companies": "Amazon", 
        "description": "Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.\r\nExamples: \r\n[2,3,4] , the median is 3\r\n[2,3], the median is (2 + 3) / 2 = 2.5 \r\n\r\n\r\nDesign a data structure that supports the following two operations:\r\n\r\n\r\nvoid addNum(int num) - Add a integer number from the data stream to the data structure.\r\ndouble findMedian() - Return the median of all elements so far.\r\n\r\n\r\n\r\nFor example:\r\n\r\nadd(1)\r\nadd(2)\r\nfindMedian() -> 1.5\r\nadd(3) \r\nfindMedian() -> 2\r\n\r\n\r\nCredits:Special thanks to @Louis1992 for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Heap", 
            "Design"
        ], 
        "name": "Find Median from Data Stream", 
        "number": 295, 
        "similar_problems": [
            "(H) Sliding Window Median"
        ], 
        "total": 140155
    }, 
    {
        "accepted": 83339, 
        "companies": "Amazon", 
        "description": "Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.\r\n\r\n\r\nFor \"(()\", the longest valid parentheses substring is \"()\", which has length = 2.\r\n\r\n\r\nAnother example is \")()())\", where the longest valid parentheses substring is \"()()\", which has length = 4.", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming", 
            "String"
        ], 
        "name": "Longest Valid Parentheses", 
        "number": 32, 
        "similar_problems": [
            "(E) Valid Parentheses"
        ], 
        "total": 361114
    }, 
    {
        "accepted": 2689, 
        "companies": "Amazon", 
        "description": "A sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\r\n\r\nFor example, these are arithmetic sequences:\r\n1, 3, 5, 7, 9\r\n7, 7, 7, 7\r\n3, -1, -5, -9\r\n\r\nThe following sequence is not arithmetic. 1, 1, 2, 5, 7 \r\n\r\n\r\nA zero-indexed array A consisting of N numbers is given. A subsequence slice of that array is any sequence of integers (P0, P1, ..., Pk) such that 0 &le; P0 < P1 < ... < Pk < N.\r\n\r\nA subsequence slice (P0, P1, ..., Pk) of array A is called arithmetic if the sequence A[P0], A[P1], ..., A[Pk-1], A[Pk] is arithmetic. In particular, this means that k &ge; 2.\r\n\r\nThe function should return the number of arithmetic subsequence slices in the array A. \r\n\r\nThe input contains N integers. Every integer is in the range of -231 and 231-1 and 0 &le; N &le; 1000. The output is guaranteed to be less than 231-1.\r\n\r\n\r\nExample:\r\n\r\nInput: [2, 4, 6, 8, 10]\r\n\r\nOutput: 7\r\n\r\nExplanation:\r\nAll arithmetic subsequence slices are:\r\n[2,4,6]\r\n[4,6,8]\r\n[6,8,10]\r\n[2,4,6,8]\r\n[4,6,8,10]\r\n[2,4,6,8,10]\r\n[2,6,10]", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming"
        ], 
        "name": "Arithmetic Slices II - Subsequence", 
        "number": 446, 
        "similar_problems": [
            "(M) Arithmetic Slices"
        ], 
        "total": 11647
    }, 
    {
        "accepted": 33368, 
        "companies": "Amazon", 
        "description": "Given a string S, you are allowed to convert it to a palindrome by adding characters in front of it. Find and return the shortest palindrome you can find by performing this transformation.\r\n\r\n\r\nFor example: \r\nGiven \"aacecaaa\", return \"aaacecaaa\".\r\nGiven \"abcd\", return \"dcbabcd\".\r\n\r\nCredits:Special thanks to @ifanchu for adding this problem and creating all test cases. Thanks to @Freezen for additional test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "String"
        ], 
        "name": "Shortest Palindrome", 
        "number": 214, 
        "similar_problems": [
            "(M) Longest Palindromic Substring", 
            " (E) Implement strStr()", 
            " (H) Palindrome Pairs"
        ], 
        "total": 144936
    }, 
    {
        "accepted": 33963, 
        "companies": "Amazon", 
        "description": "table.dungeon, .dungeon th, .dungeon td {\r\n  border:3px solid black;\r\n}\r\n\r\n .dungeon th, .dungeon td {\r\n    text-align: center;\r\n    height: 70px;\r\n    width: 70px;\r\n}\r\n\r\n\r\nThe demons had captured the princess (P) and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of M x N rooms laid out in a 2D grid. Our valiant knight (K) was initially positioned in the top-left room and must fight his way through the dungeon to rescue the princess. \r\nThe knight has an initial health point represented by a positive integer. If at any point his health point drops to 0 or below, he dies immediately. \r\nSome of the rooms are guarded by demons, so the knight loses health (negative integers) upon entering these rooms; \r\nother rooms are either empty (0's) or contain magic orbs that increase the knight's health (positive integers).\r\nIn order to reach the princess as quickly as possible, the knight decides to move only rightward or downward in each step. \r\n\r\n\r\nWrite a function to determine the knight's minimum initial health so that he is able to rescue the princess.\r\nFor example, given the dungeon below, the initial health of the knight must be at least 7 if he follows the optimal path RIGHT-> RIGHT -> DOWN -> DOWN.\r\n\r\n\r\n \r\n-2 (K) \r\n-3 \r\n3 \r\n \r\n \r\n-5 \r\n-10 \r\n1 \r\n \r\n \r\n10 \r\n30 \r\n-5 (P) \r\n \r\n\r\n\r\n\r\n\r\nNotes:\r\n\r\nThe knight's health has no upper bound.\r\nAny room can contain threats or power-ups, even the first room the knight enters and the bottom-right room where the princess is imprisoned.  \r\n\r\n\r\n\r\nCredits:Special thanks to @stellari for adding this problem and creating all test cases.", 
        "difficulty": "Hard", 
        "hints": [
            "Binary Search", 
            "Dynamic Programming"
        ], 
        "name": "Dungeon Game", 
        "number": 174, 
        "similar_problems": [
            "(M) Unique Paths", 
            " (M) Minimum Path Sum"
        ], 
        "total": 148393
    }, 
    {
        "accepted": 36136, 
        "companies": "Amazon", 
        "description": "Given a 2D board and a list of words from the dictionary, find all words in the board.\r\n\r\n\r\nEach word must be constructed from letters of sequentially adjacent cell, where \"adjacent\" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once in a word.\r\n\r\n\r\n\r\nFor example,\r\nGiven words = [\"oath\",\"pea\",\"eat\",\"rain\"] and board = \r\n\r\n[\r\n  ['o','a','a','n'],\r\n  ['e','t','a','e'],\r\n  ['i','h','k','r'],\r\n  ['i','f','l','v']\r\n]\r\n\r\n\r\nReturn [\"eat\",\"oath\"].\r\n\r\n\r\n\r\nNote:\r\nYou may assume that all inputs are consist of lowercase letters a-z.\r\n\r\n\r\nclick to show hint.\r\n\r\nYou would need to optimize your backtracking to pass the larger test. Could you stop backtracking earlier?\r\n\r\nIf the current candidate does not exist in all words' prefix, you could stop backtracking immediately. What kind of data structure could answer such query efficiently? Does a hash table work? Why or why not? How about a Trie? If you would like to learn how to implement a basic trie, please work on this problem: Implement Trie (Prefix Tree) first.", 
        "difficulty": "Hard", 
        "hints": [
            "Backtracking", 
            "Trie"
        ], 
        "name": "Word Search II", 
        "number": 212, 
        "similar_problems": [
            "(M) Word Search"
        ], 
        "total": 162294
    }, 
    {
        "accepted": 77034, 
        "companies": "Amazon", 
        "description": "Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, add spaces in s to construct a sentence where each word is a valid dictionary word. You may assume the dictionary does not contain duplicate words.\r\n\r\n\r\n\r\nReturn all such possible sentences.\r\n\r\n\r\n\r\nFor example, given\r\ns = \"catsanddog\",\r\ndict = [\"cat\", \"cats\", \"and\", \"sand\", \"dog\"].\r\n\r\n\r\n\r\nA solution is [\"cats and dog\", \"cat sand dog\"].\r\n\r\n\r\n\r\nUPDATE (2017/1/4):\r\nThe wordDict parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming", 
            "Backtracking"
        ], 
        "name": "Word Break II", 
        "number": 140, 
        "similar_problems": [
            "(M) Word Break", 
            " (H) Concatenated Words"
        ], 
        "total": 346896
    }, 
    {
        "accepted": 70868, 
        "companies": "Amazon", 
        "description": "You are given a string, s, and a list of words, words, that are all of the same length. Find all starting indices of substring(s) in s that is a concatenation of each word in words exactly once and without any intervening characters.\r\n\r\n\r\n\r\nFor example, given:\r\ns: \"barfoothefoobarman\"\r\nwords: [\"foo\", \"bar\"]\r\n\r\n\r\n\r\nYou should return the indices: [0,9].\r\n(order does not matter).", 
        "difficulty": "Hard", 
        "hints": [
            "Hash Table", 
            "Two Pointers", 
            "String"
        ], 
        "name": "Substring with Concatenation of All Words", 
        "number": 30, 
        "similar_problems": [
            "(H) Minimum Window Substring"
        ], 
        "total": 326659
    }, 
    {
        "accepted": 28509, 
        "companies": "Amazon", 
        "description": "Convert a non-negative integer to its english words representation. Given input is guaranteed to be less than 231 - 1.\r\n\r\n\r\nFor example,\r\n\r\n123 -> \"One Hundred Twenty Three\"\r\n12345 -> \"Twelve Thousand Three Hundred Forty Five\"\r\n1234567 -> \"One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven\"\r\n\r\n\r\n  Did you see a pattern in dividing the number into chunk of words? For example, 123 and 123000.\r\n  Group the number by thousands (3 digits). You can write a helper function that takes a number less than 1000 and convert just that chunk to words.\r\n  There are many edge cases. What are some good test cases? Does your code work with input such as 0? Or 1000010? (middle chunk is zero and should not be printed out)", 
        "difficulty": "Hard", 
        "hints": [
            "Math", 
            "String"
        ], 
        "name": "Integer to English Words", 
        "number": 273, 
        "similar_problems": [
            "(M) Integer to Roman"
        ], 
        "total": 135110
    }, 
    {
        "accepted": 138830, 
        "companies": "Amazon", 
        "description": "There are two sorted arrays nums1 and nums2 of size m and n respectively.\r\n\r\nFind the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).\r\n\r\nExample 1:\r\n\r\nnums1 = [1, 3]\r\nnums2 = [2]\r\n\r\nThe median is 2.0\r\n\r\n\r\n\r\nExample 2:\r\n\r\nnums1 = [1, 2]\r\nnums2 = [3, 4]\r\n\r\nThe median is (2 + 3)/2 = 2.5", 
        "difficulty": "Hard", 
        "hints": [
            "Binary Search", 
            "Array", 
            "Divide and Conquer"
        ], 
        "name": "Median of Two Sorted Arrays", 
        "number": 4, 
        "similar_problems": [], 
        "total": 667034
    }, 
    {
        "accepted": 4175, 
        "companies": "Amazon", 
        "description": "Design and implement a data structure for Least Frequently Used (LFU) cache. It should support the following operations: get and put.\r\n\r\n\r\n\r\nget(key) - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.\r\nput(key, value) - Set or insert the value if the key is not already present. When the cache reaches its capacity, it should invalidate the least frequently used item before inserting a new item. For the purpose of this problem, when there is a tie (i.e., two or more keys that have the same frequency), the least recently used key would be evicted.\r\n\r\n\r\nFollow up:\r\nCould you do both operations in O(1) time complexity?\r\n\r\nExample:\r\n\r\nLFUCache cache = new LFUCache( 2 /* capacity */ );\r\n\r\ncache.put(1, 1);\r\ncache.put(2, 2);\r\ncache.get(1);       // returns 1\r\ncache.put(3, 3);    // evicts key 2\r\ncache.get(2);       // returns -1 (not found)\r\ncache.get(3);       // returns 3.\r\ncache.put(4, 4);    // evicts key 1.\r\ncache.get(1);       // returns -1 (not found)\r\ncache.get(3);       // returns 3\r\ncache.get(4);       // returns 4", 
        "difficulty": "Hard", 
        "hints": [
            "Design"
        ], 
        "name": "LFU Cache", 
        "number": 460, 
        "similar_problems": [
            "(H) LRU Cache"
        ], 
        "total": 21622
    }, 
    {
        "accepted": 80056, 
        "companies": "Amazon", 
        "description": "Implement wildcard pattern matching with support for '?' and '*'.\r\n\r\n\r\n'?' Matches any single character.\r\n'*' Matches any sequence of characters (including the empty sequence).\r\n\r\nThe matching should cover the entire input string (not partial).\r\n\r\nThe function prototype should be:\r\nbool isMatch(const char *s, const char *p)\r\n\r\nSome examples:\r\nisMatch(\"aa\",\"a\") \u2192 false\r\nisMatch(\"aa\",\"aa\") \u2192 true\r\nisMatch(\"aaa\",\"aa\") \u2192 false\r\nisMatch(\"aa\", \"*\") \u2192 true\r\nisMatch(\"aa\", \"a*\") \u2192 true\r\nisMatch(\"ab\", \"?*\") \u2192 true\r\nisMatch(\"aab\", \"c*a*b\") \u2192 false", 
        "difficulty": "Hard", 
        "hints": [
            "Dynamic Programming", 
            "Backtracking", 
            "Greedy", 
            "String"
        ], 
        "name": "Wildcard Matching", 
        "number": 44, 
        "similar_problems": [
            "(H) Regular Expression Matching"
        ], 
        "total": 420989
    }, 
    {
        "accepted": 47332, 
        "companies": "Amazon", 
        "description": "Given an array of words and a length L, format the text such that each line has exactly L characters and is fully (left and right) justified.\r\n \r\n\r\n\r\nYou should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces ' ' when necessary so that each line has exactly L characters.\r\n\r\n\r\n\r\nExtra spaces between words should be distributed as evenly as possible. If the number of spaces on a line do not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right.\r\n\r\n\r\n\r\nFor the last line of text, it should be left justified and no extra space is inserted between words.\r\n\r\n\r\n\r\nFor example,\r\nwords: [\"This\", \"is\", \"an\", \"example\", \"of\", \"text\", \"justification.\"]\r\nL: 16.\r\n\r\n\r\n\r\nReturn the formatted lines as:\r\n\r\n[\r\n   \"This    is    an\",\r\n   \"example  of text\",\r\n   \"justification.  \"\r\n]\r\n\r\n\r\n\r\n\r\nNote: Each word is guaranteed not to exceed L in length.\r\n\r\n\r\n\r\nclick to show corner cases.\r\n\r\nCorner Cases:\r\n\r\n\r\nA line other than the last line might contain only one word. What should you do in this case?\r\nIn this case, that line should be left-justified.", 
        "difficulty": "Hard", 
        "hints": [
            "String"
        ], 
        "name": "Text Justification", 
        "number": 68, 
        "similar_problems": [], 
        "total": 261642
    }, 
    {
        "accepted": 106193, 
        "companies": "Amazon", 
        "description": "Design and implement a data structure for Least Recently Used (LRU) cache. It should support the following operations: get and set.\r\n\r\n\r\n\r\nget(key) - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.\r\nset(key, value) - Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.", 
        "difficulty": "Hard", 
        "hints": [
            "Design"
        ], 
        "name": "LRU Cache", 
        "number": 146, 
        "similar_problems": [
            "(H) LFU Cache"
        ], 
        "total": 664261
    }, 
    {
        "accepted": 72490, 
        "companies": "Amazon", 
        "description": "Given n points on a 2D plane, find the maximum number of points that lie on the same straight line.", 
        "difficulty": "Hard", 
        "hints": [
            "Hash Table", 
            "Math"
        ], 
        "name": "Max Points on a Line", 
        "number": 149, 
        "similar_problems": [
            "(M) Line Reflection"
        ], 
        "total": 465531
    }, 
    {
        "accepted": 59715, 
        "companies": "Amazon", 
        "description": "Given two words (beginWord and endWord), and a dictionary's word list, find all shortest transformation sequence(s) from beginWord to endWord, such that:\r\n\r\n\r\nOnly one letter can be changed at a time\r\nEach intermediate word must exist in the word list\r\n\r\n\r\n\r\nFor example,\r\n\r\n\r\nGiven:\r\nbeginWord = \"hit\"\r\nendWord = \"cog\"\r\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\r\n\r\n\r\nReturn\r\n\r\n  [\r\n    [\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],\r\n    [\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]\r\n  ]\r\n\r\n\r\n\r\n\r\nNote:\r\n\r\nAll words have the same length.\r\nAll words contain only lowercase alphabetic characters.", 
        "difficulty": "Hard", 
        "hints": [
            "Array", 
            "Backtracking", 
            "Breadth-first Search", 
            "String"
        ], 
        "name": "Word Ladder II", 
        "number": 126, 
        "similar_problems": [], 
        "total": 438501
    }, 
    {
        "accepted": 60198, 
        "companies": "Amazon", 
        "description": "Validate if a given string is numeric.\r\n\r\n\r\nSome examples:\r\n\"0\" => true\r\n\"   0.1  \" => true\r\n\"abc\" => false\r\n\"1 a\" => false\r\n\"2e10\" => true\r\n\r\n\r\nNote: It is intended for the problem statement to be ambiguous. You should gather all requirements up front before implementing one.\r\n\r\n\r\n\r\nUpdate (2015-02-10):\r\nThe signature of the C++ function had been updated. If you still see your function signature accepts a const char * argument, please click the reload button  to reset your code definition.", 
        "difficulty": "Hard", 
        "hints": [
            "Math", 
            "String"
        ], 
        "name": "Valid Number", 
        "number": 65, 
        "similar_problems": [
            "(E) String to Integer (atoi)"
        ], 
        "total": 476505
    }
]